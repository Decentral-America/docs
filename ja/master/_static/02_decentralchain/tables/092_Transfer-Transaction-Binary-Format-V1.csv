#, Field, Field type, Field size in bytes, Comment
":math:`1`", ":ref:`Transaction type ID <02_decentralchain/03_transaction:Transaction Types>`", ":ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`1`", "Value must be :math:`4`."
":math:`2`", "Transaction signature", "Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`]", ":math:`64`", " "
":math:`3`", "Transaction type ID", ":ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`1`", "This field duplicates field :math:`1`."
":math:`4`", "Public key of the transaction sender", "Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`]", ":math:`32`", " "
":math:`5.1`", "Transferring token type flag", ":ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`1`", "Value is :math:`0` for transferring DecentralCoins. Value is 1 for transferring other token."
":math:`5.2`", "Transferring token ID", "Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`]", "S", ":math:`S = 0` if the value of the flag 5.1 is :math:`0`. :math:`S = 32` if the value of the flag 5.1 is :math:`1`."
":math:`6.1`", "Fee token type flag", ":ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`1`", "Value is :math:`0` for fee in DecentralCoins. Value is :math:`1` for fee in other token."
":math:`6.2`", "Fee token ID", "Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`]", "S", "Token to pay the fee. :math:`S = 0` if the value of the flag 6.1 is 0. :math:`S = 32` if the value of the flag 6.1 field is :math:`1`."
":math:`7`", "Transaction timestamp", ":ref:`Long <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`8`", " "
":math:`8`", "Amount of token in the transfer", "amount", ":ref:`Long <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`8`"
":math:`9`", ":ref:`Transaction fee <02_decentralchain/03_transaction:Transaction Fees>`", "fee", ":ref:`Long <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`8`"
":math:`10`", "Address or alias", "recipient", "See :ref:`address binary format <02_decentralchain/10_binary-format:Address Binary Format>`, :ref:`alias binary format <02_decentralchain/10_binary-format:Alias Binary Format>`", "S"
":math:`11.1`", "Attachment length", " ", ":ref:`Short <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`2`"
":math:`11.2`", "Attachment", "attachment", "Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`]", "Up to :math:`140` bytes."
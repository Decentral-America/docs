#, Field, JSON field name, Field type, Field size in bytes, Comment
":math:`1`", "Version flag", " ", ":ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`1`", "Indicates the transaction version is :math:`2` or higher. Value must be :math:`0`."
":math:`2`", ":ref:`Transaction type ID <02_decentralchain/03_transaction:Transaction Types>`", "type", ":ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`1`", "Value must be :math:`10`."
":math:`3`", "Transaction version", "version", ":ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`1`", "Value must be :math:`2`."
":math:`4`", "Public key of the transaction sender", "senderPublicKey", "Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`]", ":math:`32`", " "
":math:`5`", "Alias length", " ", ":ref:`Short <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`2`", "Number of characters in the alias name."
":math:`6`", ":ref:`Alias <02_decentralchain/01_account:Alias>`", "alias", ":ref:`String <02_decentralchain/09_protocol:Blockchain Data Types>`", "from :math:`4` to :math:`30`", " "
":math:`7`", ":ref:`Transaction fee <02_decentralchain/03_transaction:Transaction Fees>`", "fee", ":ref:`Long <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`8`", " "
":math:`8`", "Transaction timestamp", "timestamp", ":ref:`Long <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`8`", " "
":math:`9`", "Transaction proofs", "proofs", "See :ref:`transaction proofs binary format <02_decentralchain/10_binary-format:Transaction Proofs Binary Format>`", "S", "If the array is empty, then :math:`S = 3`. If the array is not empty, then :math:`S = 3 + 2 × N + 64 × N`, where :math:`N` is the number of proofs in the array. The maximum number of proofs in the array is :math:`8`. The size of each proof is :math:`64` bytes."
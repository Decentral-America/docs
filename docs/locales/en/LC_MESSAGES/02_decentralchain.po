# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Blockchain Costa Rica
# This file is distributed under the same license as the DecentralChain
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DecentralChain master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-17 15:49-0600\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../02_decentralchain/01_account.rst:3
msgid "Account"
msgstr ""

#: ../../02_decentralchain/01_account.rst:5
msgid "DecentralChain uses an account-based model:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:7
msgid "Each :ref:`transaction <02_decentralchain/03_transaction:Transaction>` is created on behalf of a certain account."
msgstr ""

#: ../../02_decentralchain/01_account.rst:8
msgid "All the :ref:`tokens <02_decentralchain/02_token(asset):Token (Asset)>` belong to certain accounts."
msgstr ""

#: ../../02_decentralchain/01_account.rst:9
msgid "All the data is associated with accounts. For details, see the :ref:`account data storage <02_decentralchain/01_account:Account Data Storage>` article."
msgstr ""

#: ../../02_decentralchain/01_account.rst:12
msgid "Account Keys"
msgstr ""

#: ../../02_decentralchain/01_account.rst:14
msgid "Unlike centralized applications, users do not have usernames and passwords on the blockchain. User identification and validation of their actions are performed using a cryptographically bound key pair:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:16
msgid "The private key is used to sign transactions or orders."
msgstr ""

#: ../../02_decentralchain/01_account.rst:17
msgid "The public key allows the verification of the digital signature."
msgstr ""

#: ../../02_decentralchain/01_account.rst:19
msgid "Each transaction contains the public key of the sender's account. The sender generates a digital signature of the transaction using the account's private key. The signature and the sender's public key are used to verify the authenticity of the transaction's data and to check that the signature of the transaction matches the public key."
msgstr ""

#: ../../02_decentralchain/01_account.rst:23
msgid "DecentralChain uses an asymmetric cryptographic system based on the elliptic curve Curve25519-ED25519 with X25519 keys. The guideline for generating keys and signatures is given in the :ref:`cryptographic practical details <02_decentralchain/09_protocol:Cryptographic Practical Details>` article. The private and public keys are :math:`32` byte arrays. In UIs, the keys are displayed as base58 encoded strings. Base58-encoded keys can be of different lengths, the maximum length is :math:`44` characters."
msgstr ""

#: ../../02_decentralchain/01_account.rst:26
msgid "Example private key in base58:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:32
msgid "Example public key in base58:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:39
msgid "Secret (Seed) Phrase"
msgstr ""

#: ../../02_decentralchain/01_account.rst:41
msgid "The private key can be generated from some random seed phrase using hashing functions. The public key is obtained from the private key using an elliptic curve multiplication. The account :ref:`address <02_decentralchain/01_account:Address>` is obtained from the public key. All these transformations are unidirectional. The opposite direction is almost impossible in terms of the required computations."
msgstr ""

#: ../../02_decentralchain/01_account.rst:45
msgid "The secret phrase (a.k.a. seed phrase, backup phrase) can be any combination of symbols, words, or bytes. DecentralChain wallet apps typically use a random set of :math:`15` English words out of :math:`2048` words available. Using such a phrase is secure since the probability of generating two identical seed phrases is :math:`\\frac{1}{2048^{15}}`, so brute-force will take millions of years on an average CPU. The point of using a secret phrase (rather than a private key) is to simplify user experience: the secret phrase is much easier to write down or remember."
msgstr ""

#: ../../02_decentralchain/01_account.rst:47
msgid "Example of a secret phrase:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:53
msgid "Security Information:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:55
msgid "The secret phrase or the private key derived from it provide complete control over the account, including the ability to dispose of funds. Do not give your secret phrase or private key to anyone, and do not publish or send them."
msgstr ""

#: ../../02_decentralchain/01_account.rst:56
msgid "The secret phrase cannot be changed: another secret phrase (even one that differs by a single character) will generate a different key pair, and therefore a different account."
msgstr ""

#: ../../02_decentralchain/01_account.rst:57
msgid "If you lose your secret phrase or private key, you will no longer be able to access your account ever again. We strongly encourage you to :ref:`backup of your secret phrase <02_decentralchain/01_account:Backup Seed Phrase>`."
msgstr ""

#: ../../02_decentralchain/01_account.rst:58
msgid "If the secret phrase is compromised (you have accidentally sent it to someone or suspect that it was taken by fraudsters), immediately create a new account and transfer all the assets to it."
msgstr ""

#: ../../02_decentralchain/01_account.rst:60
msgid "For ways to generate account keys, see the :ref:`creating an account <02_decentralchain/01_account:Creating an Account>` article."
msgstr ""

#: ../../02_decentralchain/01_account.rst:63
msgid "Creating an Account"
msgstr ""

#: ../../02_decentralchain/01_account.rst:65
msgid "To create an account means to generate an :ref:`account key pair <02_decentralchain/01_account:Account Keys>` and :ref:`address <02_decentralchain/01_account:Address>` based on a :ref:`secret (seed) phrase <02_decentralchain/01_account:Secret (Seed) Phrase>`."
msgstr ""

#: ../../02_decentralchain/01_account.rst:67
msgid "You can use `Decentral.Exchange <https://decentral.exchange/>`_ online to create an account."
msgstr ""

#: ../../02_decentralchain/01_account.rst:69
msgid "On the main screen click Create Account then in the Create Password box type in the password, type it again in the Confirm Password box, accept the Terms and Conditions as well as the Privacy Policy and click Continue."
msgstr ""

#: ../../02_decentralchain/01_account.rst:70
msgid "On the next screen select Create Account and then choose the avatar you like the most for your account and click Continue."
msgstr ""

#: ../../02_decentralchain/01_account.rst:71
msgid "After that, select the name you want the account to have on that particular device and click Continue."
msgstr ""

#: ../../02_decentralchain/01_account.rst:72
msgid "At this point you will be forwarded to your wallet page. You must do a :ref:`backup of your seed phrase <02_decentralchain/01_account:Backup Seed Phrase>`."
msgstr ""

#: ../../02_decentralchain/01_account.rst:75
msgid "Backup Seed Phrase"
msgstr ""

#: ../../02_decentralchain/01_account.rst:77
msgid "Open `Decentral.Exchange <https://decentral.exchange/>`_ main screen and make sure you are logged into your account. Click on the account avatar and navigate to Settings > Security."
msgstr ""

#: ../../02_decentralchain/01_account.rst:78
msgid "Click Show in the Backup Phrase box."
msgstr ""

#: ../../02_decentralchain/01_account.rst:79
msgid "Write down the phrase and store it in a secure location."
msgstr ""

#: ../../02_decentralchain/01_account.rst:81
msgid "Do not store the backup phrase unencrypted on any electronic device. We strongly recommend backing up the seed phrase, since this is the only way to restore access to your account in case of loss or theft of the device."
msgstr ""

#: ../../02_decentralchain/01_account.rst:84
msgid "Log in to Account"
msgstr ""

#: ../../02_decentralchain/01_account.rst:86
msgid "Open `Decentral.Exchange <https://decentral.exchange/>`_ main screen and click Create Account then in the Create Password box type in the password, type it again in the Confirm Password box, accept the Terms and Conditions as well as the Privacy Policy and click Continue."
msgstr ""

#: ../../02_decentralchain/01_account.rst:87
msgid "On the next screen select Import Accounts, then choose the Seed or Key option."
msgstr ""

#: ../../02_decentralchain/01_account.rst:88
#: ../../02_decentralchain/01_account.rst:97
msgid "After that type in the seed you backed up in the past and click Continue, then select the name you want the account to have on that particular device and click Continue."
msgstr ""

#: ../../02_decentralchain/01_account.rst:89
#: ../../02_decentralchain/01_account.rst:98
msgid "At this point you will be forwarded to your wallet page."
msgstr ""

#: ../../02_decentralchain/01_account.rst:92
msgid "Forgot Password"
msgstr ""

#: ../../02_decentralchain/01_account.rst:94
msgid "Open `Decentral.Exchange <https://decentral.exchange/>`_ main screen and click Forgot Password then select the Reset All option."
msgstr ""

#: ../../02_decentralchain/01_account.rst:95
msgid "On the next screen, in the Create Password box type in the password, type it again in the Confirm Password box, accept the Terms and Conditions as well as the Privacy Policy and click Continue."
msgstr ""

#: ../../02_decentralchain/01_account.rst:96
msgid "When this is done, select Import Accounts, then choose the Seed or Key option."
msgstr ""

#: ../../02_decentralchain/01_account.rst:101
msgid "Address"
msgstr ""

#: ../../02_decentralchain/01_account.rst:103
msgid "Address is an :ref:`account <02_decentralchain/01_account:Account>` attribute derived from the :ref:`public key <02_decentralchain/01_account:Account Keys>`. The address also contains the :ref:`chain ID <02_decentralchain/08_mainnet-testnet-stagenet:Chain ID>` that identifies the blockchain network, therefore the address on the Mainnet cannot be used on the Testnet and vice versa."
msgstr ""

#: ../../02_decentralchain/01_account.rst:105
msgid "The address is a :math:`26` byte array (see the :ref:`address binary format <02_decentralchain/10_binary-format:Address Binary Format>`). In UIs the address is displayed as a base58 encoded string."
msgstr ""

#: ../../02_decentralchain/01_account.rst:111
msgid "Normally, the address starting with 3P refers to the Mainnet, and the address starting with 3M or 3N refers to Testnet or Stagenet."
msgstr ""

#: ../../02_decentralchain/01_account.rst:113
msgid "The address is used to obtain information about the account:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:115
msgid ":ref:`Token balances <02_decentralchain/01_account:Account Balance>`,"
msgstr ""

#: ../../02_decentralchain/01_account.rst:116
msgid "Entries of :ref:`account data storage <02_decentralchain/01_account:Account Data Storage>`,"
msgstr ""

#: ../../02_decentralchain/01_account.rst:117
msgid ":ref:`Aliases <02_decentralchain/01_account:Alias>`,"
msgstr ""

#: ../../02_decentralchain/01_account.rst:118
msgid ":ref:`Assigned script <02_decentralchain/01_account:dApp and Smart Account>`, etc."
msgstr ""

#: ../../02_decentralchain/01_account.rst:120
msgid "The address is indicated:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:122
msgid "In :ref:`transfer <02_decentralchain/03_transaction:Transfer Transaction>`, :ref:`mass transfer <02_decentralchain/03_transaction:Mass Transfer Transaction>` and :ref:`lease transaction  <02_decentralchain/03_transaction:Lease Transaction>` to identify a recipient;"
msgstr ""

#: ../../02_decentralchain/01_account.rst:123
msgid "In :ref:`invoke script transactions <02_decentralchain/03_transaction:Invoke Script Transaction>` to identify an invoked dApp."
msgstr ""

#: ../../02_decentralchain/01_account.rst:126
msgid "Get Personal Address"
msgstr ""

#: ../../02_decentralchain/01_account.rst:128
msgid "Open `Decentral.Exchange <https://decentral.exchange/>`_ main screen and make sure you are logged into your account. Click on the account avatar and navigate to Address."
msgstr ""

#: ../../02_decentralchain/01_account.rst:129
msgid "Copy the address and use it, or you can also use the generated QR code."
msgstr ""

#: ../../02_decentralchain/01_account.rst:132
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
msgid "Alias"
msgstr ""

#: ../../02_decentralchain/01_account.rst:134
msgid "Alias is a short, easy to remember, name of the :ref:`address <02_decentralchain/01_account:Address>`. The alias is unique on the blockchain. One address can have several aliases. The alias can be used instead of the address:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:136
msgid "In :ref:`transfer <02_decentralchain/03_transaction:Transfer Transaction>`, :ref:`mass transfer <02_decentralchain/03_transaction:Mass Transfer Transaction>` and :ref:`lease transaction <02_decentralchain/03_transaction:Lease Transaction>` to identify a recipient; as well as in :ref:`invoke script transactions <02_decentralchain/03_transaction:Invoke Script Transaction>` to identify an invoked dApp."
msgstr ""

#: ../../02_decentralchain/01_account.rst:137
msgid "To find an account in `DecentralChain Explorer <https://decentralscan.com/>`_."
msgstr ""

#: ../../02_decentralchain/01_account.rst:139
msgid "The alias cannot be deleted."
msgstr ""

#: ../../02_decentralchain/01_account.rst:142
msgid "Alias Requirements"
msgstr ""

#: ../../02_decentralchain/01_account.rst:144
msgid "The length of an alias can be from :math:`4` to :math:`30` bytes (:math:`1` character can take up to :math:`4` bytes). The following characters are allowed:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:146
msgid "lowercase Latin letters"
msgstr ""

#: ../../02_decentralchain/01_account.rst:147
msgid "numbers"
msgstr ""

#: ../../02_decentralchain/01_account.rst:148
msgid "dot"
msgstr ""

#: ../../02_decentralchain/01_account.rst:149
msgid "underscore"
msgstr ""

#: ../../02_decentralchain/01_account.rst:150
msgid "hyphen"
msgstr ""

#: ../../02_decentralchain/01_account.rst:151
msgid "@"
msgstr ""

#: ../../02_decentralchain/01_account.rst:154
msgid "Create Alias"
msgstr ""

#: ../../02_decentralchain/01_account.rst:156
msgid "You can use `Decentral.Exchange <https://decentral.exchange/>`_ online to create an alias."
msgstr ""

#: ../../02_decentralchain/01_account.rst:158
msgid "Make sure you are logged into your account. On the main screen click on the account avatar and navigate to Aliases."
msgstr ""

#: ../../02_decentralchain/01_account.rst:159
msgid "On the next screen select Create New and then type in the name of the alias and click Create New again to complete the process."
msgstr ""

#: ../../02_decentralchain/01_account.rst:162
msgid "View Aliases"
msgstr ""

#: ../../02_decentralchain/01_account.rst:164
msgid "The list of account aliases, as well as other blockchain data, is public and can be read by anyone. For example, you can see aliases in `DecentralChain Explorer <https://decentralscan.com/>`_. To do this, find an account by its :ref:`address <02_decentralchain/01_account:Address>` and switch to the Aliases tab."
msgstr ""

#: ../../02_decentralchain/01_account.rst:166
msgid "Using :ref:`Node REST API <documentation:placeholder>`, you can obtain a list of aliases by address using the GET/alias/by-address/{address} method and an address by alias using the GET /alias/by-alias/{alias} method."
msgstr ""

#: ../../02_decentralchain/01_account.rst:169
#: ../../02_decentralchain/03_transaction.rst:200
#: ../../02_decentralchain/10_binary-format.rst:3
msgid "Binary Format"
msgstr ""

#: ../../02_decentralchain/01_account.rst:171
msgid "See the :ref:`alias binary format <02_decentralchain/10_binary-format:Alias Binary Format>` article."
msgstr ""

#: ../../02_decentralchain/01_account.rst:174
msgid "Account Balance"
msgstr ""

#: ../../02_decentralchain/01_account.rst:176
msgid "Account balance is the amount of a :ref:`token (asset) <02_decentralchain/02_token(asset):Token (Asset)>` that belongs to the :ref:`account <02_decentralchain/01_account:Account>`."
msgstr ""

#: ../../02_decentralchain/01_account.rst:178
msgid "One account can store different tokens in different amounts. For example, an account can have :math:`50` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` and USD-N at the same time. The amount of the Y token on the account is called the account balance in Y token. If there is no Y token on the account, it is said that the account balance in Y token is equal to zero."
msgstr ""

#: ../../02_decentralchain/01_account.rst:181
msgid "Account Balance in DecentralCoin"
msgstr ""

#: ../../02_decentralchain/01_account.rst:183
msgid "There are four types of balances in DecentralChain:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:185
msgid "regular"
msgstr ""

#: ../../02_decentralchain/01_account.rst:186
msgid "available"
msgstr ""

#: ../../02_decentralchain/01_account.rst:187
msgid "effective"
msgstr ""

#: ../../02_decentralchain/01_account.rst:188
msgid "generating"
msgstr ""

#: ../../02_decentralchain/01_account.rst:190
msgid "The regular balance is the amount of :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` that belongs directly to the account. Thе other types of balances are determined counting :ref:`leased <02_decentralchain/05_node:Leased Proof of Stake>` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/01_account.rst:192
msgid "Let us introduce the following notation:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:200
msgid "Then:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:208
msgid "The generating balance of a :ref:`node <02_decentralchain/05_node:Node>` account affects the ability to participate in block generation. To generate blocks, you need a generating balance of at least :math:`10000` DecentralCoins. The larger the generating balance, the greater the chance to add the next block is."
msgstr ""

#: ../../02_decentralchain/01_account.rst:211
msgid "View Account Balance"
msgstr ""

#: ../../02_decentralchain/01_account.rst:213
msgid "The balances of any account, as well as other blockchain data, are public and can be read by anyone."
msgstr ""

#: ../../02_decentralchain/01_account.rst:215
msgid "For example, you can see the list of tokens and their amount on the account in `DecentralChain Explorer <https://decentralscan.com/>`_. To do this, find an account by its address or alias. Balances in :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` are displayed right under the address, balances in other assets are at the Assets tab, and :ref:`non-fungible tokens (NFT) <02_decentralchain/02_token(asset):Non-Fungible Token>` are at the Non-fungible tokens tab."
msgstr ""

#: ../../02_decentralchain/01_account.rst:220
msgid "Top up Balance"
msgstr ""

#: ../../02_decentralchain/01_account.rst:222
msgid "You can buy DecentralCoin tokens at `Decentral.Exchange <https://decentral.exchange/>`_."
msgstr ""

#: ../../02_decentralchain/01_account.rst:225
msgid "Account Data Storage"
msgstr ""

#: ../../02_decentralchain/01_account.rst:227
msgid "Account data storage is a key-value storage associated with an :ref:`account <02_decentralchain/01_account:Account>`. The key of each entry is a unique string. The value is the data being stored, it’s store using one of the types:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:230
msgid "String"
msgstr ""

#: ../../02_decentralchain/01_account.rst:231
#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
msgid "Boolean"
msgstr ""

#: ../../02_decentralchain/01_account.rst:232
msgid "Integral"
msgstr ""

#: ../../02_decentralchain/01_account.rst:233
#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
msgid "Array of bytes"
msgstr ""

#: ../../02_decentralchain/01_account.rst:235
msgid "The size of an account data storage is unlimited. For key and value size limitations, see the :ref:`data transaction <02_decentralchain/03_transaction:Data Transaction>` article."
msgstr ""

#: ../../02_decentralchain/01_account.rst:238
msgid "View Account Data"
msgstr ""

#: ../../02_decentralchain/01_account.rst:240
msgid "Data storage of any account, as well as other blockchain data, are public and can be read by anyone. For example, you can see data entries in `DecentralChain Explorer <https://decentralscan.com/>`_. To do this, find an account by its :ref:`address <02_decentralchain/01_account:Address>` or :ref:`alias <02_decentralchain/01_account:Alias>` and switch to the Data tab."
msgstr ""

#: ../../02_decentralchain/01_account.rst:245
msgid "Add, Modify, Delete Entries"
msgstr ""

#: ../../02_decentralchain/01_account.rst:247
msgid "The account owner can add, modify or delete entries of the account data storage via a :ref:`data transaction <02_decentralchain/03_transaction:Data Transaction>`."
msgstr ""

#: ../../02_decentralchain/01_account.rst:249
msgid "A :ref:`dApp script <02_decentralchain/01_account:dApp and Smart Account>` can add, modify or delete entries in the dApp's data storage as a result of an :ref:`invoke script transaction <02_decentralchain/03_transaction:Invoke Script Transaction>` transaction via script actions:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:251
msgid ":ref:`BinaryEntry <03_ride-language/05_structures:BinaryEntry>`"
msgstr ""

#: ../../02_decentralchain/01_account.rst:252
msgid ":ref:`BooleanEntry <03_ride-language/05_structures:BooleanEntry>`"
msgstr ""

#: ../../02_decentralchain/01_account.rst:253
msgid ":ref:`IntegerEntry <03_ride-language/05_structures:IntegerEntry>`"
msgstr ""

#: ../../02_decentralchain/01_account.rst:254
msgid ":ref:`StringEntry <03_ride-language/05_structures:StringEntry>`"
msgstr ""

#: ../../02_decentralchain/01_account.rst:255
msgid ":ref:`DeleteEntry <03_ride-language/05_structures:DeleteEntry>`"
msgstr ""

#: ../../02_decentralchain/01_account.rst:258
msgid "dApp and Smart Account"
msgstr ""

#: ../../02_decentralchain/01_account.rst:260
msgid "An account with a script assigned to it becomes a dApp or smart account. dApp is the account with the :ref:`dApp script <03_ride-language/04_script-types:dApp Script>` assigned. dApp is an application whose functions can be called from other accounts via an :ref:`invoke script transaction <02_decentralchain/03_transaction:Invoke Script Transaction>`. Callable functions can accept payments to the dApp and also perform actions applied to the blockchain:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:263
msgid "Add, modify or delete entries of the dApp account data storage."
msgstr ""

#: ../../02_decentralchain/01_account.rst:264
msgid "Transfer tokens from the dApp balance."
msgstr ""

#: ../../02_decentralchain/01_account.rst:265
msgid "Issue, reissue, burn tokens on behalf of the dApp, sponsorship setup."
msgstr ""

#: ../../02_decentralchain/01_account.rst:267
msgid "Beyond that, a dApp script can comprise the verifier function that allows or denies transactions and orders that are sent on behalf of the dApp account depending on the specified conditions. The verifier function replaces the default verification that is used  to verify the sender's signature and allows you to set more complex rules, such as multisignature."
msgstr ""

#: ../../02_decentralchain/01_account.rst:269
msgid "Using dApps, you can implement various blockchain-empowered applications: gaming and gambling, DeFi, digital identity, supply chains, and many others."
msgstr ""

#: ../../02_decentralchain/01_account.rst:271
msgid "A smart account is an account with the :ref:`account script <03_ride-language/04_script-types:Account Script>` assigned. The account script is similar to a verifier function of a dApp script. Please note:"
msgstr ""

#: ../../02_decentralchain/01_account.rst:273
msgid "To assign a script to an account, you have to send a :ref:`set script transaction <02_decentralchain/03_transaction:Set Script Transaction>` on behalf of the account."
msgstr ""

#: ../../02_decentralchain/01_account.rst:274
msgid "You can also change or delete the script via the set script transaction, unless the script itself prohibits it."
msgstr ""

#: ../../02_decentralchain/01_account.rst:275
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for any transaction sent from a dApp or smart account is increased by :math:`0.004` DecentralCoins if the complexity of sender's account script or dApp script verifier function exceeds the :ref:`sender complexity threshold <03_ride-language/07_dapp-to-app-invocation:Limitations>`."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:3
msgid "Token (Asset)"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:5
msgid "Token is a digital asset on the blockchain. A token can be used:"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:7
msgid "As a cryptocurrency to pay for goods and services within a project, as well as for crowdfunding;"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:8
msgid "As an object or resource in games etc."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:10
msgid "A token can represent a physical or an intangible object. The words “token” and “asset” are used interchangeably in the DecentralChain ecosystem. DecentralCoin is the native token on the DecentralChain blockchain. :ref:`More about DecentralCoin <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:13
msgid "All other tokens are custom tokens issued on behalf of some account. Any account that has enough DecentralCoins to pay the fee can issue its own token. The new token is immediately available:"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:15
msgid "For transfers between accounts,"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:16
msgid "For trading on `Decentral.Exchange <https://decentral.exchange/>`_ (except for :ref:`NFTs <02_decentralchain/02_token(asset):Non-Fungible Token>`; :ref:`smart assets <02_decentralchain/02_token(asset):Smart Asset>` trading is temporarily unavailable),"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:17
msgid "For payments attached to dApp :ref:`script invocation <02_decentralchain/03_transaction:Invoke Script Transaction>`."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:20
msgid "Token Issue"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:22
msgid "You can use `Decentral.Exchange <https://decentral.exchange/>`_ online to create an asset."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:24
msgid "On the main screen make sure you are logged into your account, then click on Create Token."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:25
msgid "On the next screen specify the token parameters:"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:27
msgid "Name: The name of the created asset can not be shorter than :math:`4` characters."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:28
msgid "Description: A short description where you can include website links that can be particularly useful."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:29
msgid "Quantity: Define the total supply of your asset. The total supply can either be fixed at the issuance or increased later by making the asset re-issuable."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:30
msgid "Reissuable: Defines if the asset total supply can be increased later. If set to reissuable, the issuer can increase the supply at any time (If reissuable is selected when the asset is created, it can be changed to not reissuable at a later stage)."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:31
msgid "Decimals: Specify how many decimals your asset will have. For example, if you specify :math:`8` decimals, as in Bitcoin, your asset can be divided down to :math:`0.00000001`."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:32
msgid ":ref:`Smart asset <02_decentralchain/02_token(asset):Smart Asset>`: A smart asset is an asset with an attached script that places conditions on every transaction made for the asset in question."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:33
msgid "Script (for issuing a smart asset)."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:35
msgid "Before creating a new asset, carefully read the creation conditions. If necessary, change the name of the asset according to the conditions, then select the I understand... checkbox and click Generate."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:36
msgid "On the next screen double-check the entered data and if everything is correct click Send to finish the creation or click Go Back to make corrections.."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:38
msgid "The transaction fee is :math:`1` DecentralCoin for a regular token or :math:`0.001` DecentralCoins for a :ref:`non-fungible token (NFT) <02_decentralchain/02_token(asset):Non-Fungible Token>`. Moreover, the token can be issued by the :ref:`dApp script <03_ride-language/04_script-types:dApp Script>` as a result of the :ref:`invoke script transaction <02_decentralchain/03_transaction:Invoke Script Transaction>` when the callable function result contains the :ref:`issue action <03_ride-language/05_structures:Issue>`. The minimum fee for invoke script transaction is increased by :math:`1` DecentralCoin for each non-NFT token issued."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:42
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
msgid "Token ID"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:44
msgid "Token ID is a byte array calculated as follows:"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:46
msgid "If the token is issued by :ref:`issue transaction <02_decentralchain/03_transaction:Issue Transaction>`, the token ID is the same as the transaction ID."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:47
msgid "If the token is issued by :ref:`invoke script transaction <02_decentralchain/03_transaction:Invoke Script Transaction>` when the callable function of :ref:`dApp script <02_decentralchain/01_account:dApp and Smart Account>` performed the :ref:`issue action <03_ride-language/05_structures:Issue>`, the token ID is calculated as the BLAKE2b-256 hash of the byte array containing transaction ID and the fields of the Issue structure."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:49
msgid "In the :ref:`Node REST API <documentation:placeholder>`, the token identifier is encoded in base58. For example:"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:55
msgid "The :ref:`DecentralCoin <02_decentralchain/02_token(asset):DecentralCoin>` token has no identifier. The Node REST API uses null for DecentralCoin."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:58
msgid "Token Operations"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:60
msgid "Transfer to another account"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:62
msgid "Can be done via a :ref:`transfer transaction <02_decentralchain/03_transaction:Transfer Transaction>` or a :ref:`mass transfer transaction <02_decentralchain/03_transaction:Mass Transfer Transaction>`. A :ref:`dApp script <02_decentralchain/01_account:dApp and Smart Account>` can transfer the token via a :ref:`script transfer script action <03_ride-language/05_structures:Issue>` as a result of an :ref:`invoke script transaction <02_decentralchain/03_transaction:Invoke Script Transaction>`."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:65
msgid "Exchange (trade deal)"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:67
msgid "Three accounts can participate in the exchange: one user creates an :ref:`order <02_decentralchain/06_order:Order>` to buy a token, the other creates an order to sell a token. The matcher combines buy and sell orders with suitable parameters and creates an :ref:`exchange transaction <02_decentralchain/03_transaction:Exchange Transaction>`."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:69
msgid "Burning"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:71
msgid "Decreases the amount of token on the account and thereby the total amount of the token on the blockchain. Any token owner can burn it, not only the issuer. It is impossible to burn :ref:`DecentralCoin <02_decentralchain/02_token(asset):DecentralCoin>`. Can be done via a :ref:`burn transaction <02_decentralchain/03_transaction:Burn Transaction>`. A dApp script can burn the token via a :ref:`burn script action <03_ride-language/05_structures:Burn>` as a result of the Invoke script transaction."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:74
msgid "Payment to :ref:`dApp <02_decentralchain/01_account:dApp and Smart Account>`"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:76
msgid "An :ref:`invoke script transaction <02_decentralchain/03_transaction:Invoke Script Transaction>` can contain up to two payments to the dApp. Payment amount and token are available to the callable function."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:79
msgid "Operations Available Only to Issuer"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:81
msgid "The following token operations can only be performed by the account that issued the token:"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:83
msgid "Sponsorship setup"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:85
msgid "The token issuer can enable sponsorship which allows all users to pay fees in this token (instead of DecentralCoins) for invoke script transactions and transfer transactions. :ref:`More about sponsorship <02_decentralchain/03_transaction:Sponsored Fees>`. Enabling or disabling sponsorship can be done via a :ref:`sponsor fee transaction <02_decentralchain/03_transaction:Sponsor Fee Transaction>`. A dApp script can set up sponsorship using a :ref:`SponsorFee <03_ride-language/05_structures:SponsorFee>` as a result of the invoke script transaction."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:87
msgid "Reissue"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:89
msgid "Increases the amount of token on the blockchain. The reissuable field of token determines whether the token can be reissued. Can be done via a :ref:`reissue transaction <02_decentralchain/03_transaction:Reissue Transaction>`. A dApp script can reissue the token via a :ref:`reissue script action <03_ride-language/05_structures:Reissue>` as a result of the invoke script transaction."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:92
msgid "Replacing the asset script"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:94
msgid "Can be done via a :ref:`set asset script transaction <02_decentralchain/03_transaction:Set Asset Script Transaction>`. If the token is not a smart asset, that is, the script was not attached when the token was issued, then it is impossible to attach the script later."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:96
msgid "Modifying the token name and / or description"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:98
msgid "Can be done via an :ref:`update asset info transaction <02_decentralchain/03_transaction:Update Asset Info Transaction>`."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:101
msgid "Token Types"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:104
msgid "Non-Fungible Token"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:106
msgid "Non-fungible token or NFT is a special type of a :ref:`token <02_decentralchain/02_token(asset):Token (Asset)>` that is issued with the following parameters:"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:108
msgid "\"quantity\": :math:`1`"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:109
msgid "\"decimals\": :math:`0`"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:110
msgid "\"reissuable\": false"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:112
msgid "NFT is a singular entity that has a unique ID. This contrasts with a regular token, two coins of which (for example, two WBTC) cannot be distinguished from each other. NFTs can be used as in-game items, collectibles, certificates, or unique coupons."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:115
msgid "Issue of NFT"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:117
msgid "NFT can be issued in the same ways as a regular token, see :ref:`token issue <02_decentralchain/02_token(asset):Token Issue>`. The minimum fee for an NFT issue is :math:`0.001` DecentralCoins, :math:`1000` times less than for a regular token."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:120
msgid "Smart Asset"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:122
msgid "Smart asset is a :ref:`token <02_decentralchain/02_token(asset):Token (Asset)>` that has an :ref:`asset script <03_ride-language/04_script-types:Asset Script>` assigned to it. By default, tokens on the DecentralChain blockchain are not smart contracts, and any transactions with them are allowed. The script endows a token with functionality that sets the rules for its circulation. Each transaction involving a smart asset is automatically checked against the conditions specified in the script. If the asset's script allows the transaction, it will be executed; if the script denies the transaction, it is either not put onto the blockchain at all or saved as failed (for details, see the :ref:`transaction validation <02_decentralchain/03_transaction:Transaction Validation>` article)."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:125
msgid "Using smart assets, you can implement various financial instruments on the blockchain (options, interval trading, taxation), game mechanics (allowing transactions only between characters with certain properties). Please note:"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:127
msgid "If a token is issued without a script, then the script cannot be added later."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:128
msgid "The script cannot be removed, so it is impossible to turn a smart asset into a regular one."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:129
msgid "The asset script can be changed using the :ref:`set asset script transaction <02_decentralchain/03_transaction:Set Asset Script Transaction>`, unless prohibited by the asset script itself (as well as by the :ref:`dApp or account script <02_decentralchain/01_account:dApp and Smart Account>` assigned to the issuer account)."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:130
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for transaction is increased by :math:`0.004` DecentralCoins for each smart asset involved, except for:"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:132
#: ../../02_decentralchain/03_transaction.rst:60
msgid ":ref:`Invoke script transactions <02_decentralchain/03_transaction:Invoke Script Transaction>`,"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:133
msgid "Smart assets used as matcher fee in :ref:`exchange transaction <02_decentralchain/03_transaction:Exchange Transaction>`."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:136
msgid "Tokens of Other Blockchains"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:138
msgid "A token issued on another blockchain cannot be used directly on the DecentralChain blockchain. A new token representing the original one can be issued on the DecentralChain blockchain, and a gateway that pegs the two tokens :math:`1:1` can be deployed."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:141
msgid "DecentralCoin"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:143
msgid "DecentralCoin is the native :ref:`token <02_decentralchain/02_token(asset):Token (Asset)>` of the DecentralChain blockchain. :ref:`Block generators <02_decentralchain/05_node:Generating Node>` receive :ref:`transaction fees <02_decentralchain/03_transaction:Transaction Fees>` and :ref:`block rewards <02_decentralchain/05_node:Block Reward>` in DecentralCoins, which encourages generators to maintain and develop the blockchain network infrastructure. The more DecentralCoins the generator holds (by ownership or lease), the greater its chance to add the next block is."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:146
msgid "DecentralCoin Parameters"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:148
msgid "DecentralCoins are present on the blockchain since inception, there is no issue transaction for it, therefore the DecentralCoin token does not have an ID. The REST API uses null for DecentralCoins. The number of decimal places (decimals) for DecentralCoins is :math:`8`. The atomic unit called Decentralite is :math:`\\frac{1}{100,000,000}` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:152
msgid "Leasing"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:154
msgid "The owner of DecentralCoins can lease them via a :ref:`lease transaction <02_decentralchain/03_transaction:Lease Transaction>`. DecentralCoins received on lease are included in the :ref:`generating balance <02_decentralchain/01_account:Account Balance>`. Block generators send back different percentages as rewards to lessors. A lessor can cancel the lease at any time via a :ref:`lease cancel transaction <02_decentralchain/03_transaction:Lease Cancel Transaction>`. :ref:`More about leasing <02_decentralchain/05_node:Leased Proof of Stake>`."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:157
msgid "How to Get DecentralCoin"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:159
msgid "You can buy DecentralCoins tokens at `Decentral.Exchange <https://decentral.exchange/>`_, or at one of the centralized exchanges. In addition, cryptocurrency gateways can be used to transfer external cryptocurrencies such as Bitcoin, Ethereum etc. from the external blockchain to the DecentralChain blockchain and vice versa. The gateway provides the user with the address on the external blockchain. After receiving a confirmation of transfer to this external address, the gateway transfers the corresponding asset (minus the fee) to the user's DecentralChain address."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:162
#: ../../02_decentralchain/02_token(asset).rst:184
msgid "Token Custom Parameters"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:164
msgid "Below is an example of JSON representation returned by the GET /assets/details/{assetId} method of :ref:`Node REST API <documentation:placeholder>`:"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/006_Reissue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/007_Burn-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/008_Set-Asset-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/009_Update-Asset-Info-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/011_Transfer-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/012_Exchange-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/013_Create-Alias-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/014_Mass-Transfer-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/015_Data-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/016_Set-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/019_Lease-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/020_Lease-Cancel-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/021_Sponsor-Fee-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/056_Burn-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/059_Create-Alias-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/062_Data-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/064_Exchange-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/073_Lease-Cancel-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/076_Lease-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/081_Reissue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/084_Set-Asset-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/086_Set-Script-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/088_Sponsor-Fee-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/093_Update-Asset-Info-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "Field"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:9
#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/006_Reissue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/007_Burn-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/008_Set-Asset-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/009_Update-Asset-Info-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
#: ../../_static/02_decentralchain/tables/011_Transfer-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/012_Exchange-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/013_Create-Alias-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/014_Mass-Transfer-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/015_Data-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/016_Set-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/018_Network.csv:1
#: ../../_static/02_decentralchain/tables/019_Lease-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/020_Lease-Cancel-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/021_Sponsor-Fee-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/022_Genesis.csv:1
#: ../../_static/02_decentralchain/tables/023_Asset-Pair-Fields.csv:1
#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/056_Burn-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/059_Create-Alias-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/062_Data-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/064_Exchange-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/073_Lease-Cancel-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/076_Lease-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/081_Reissue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/084_Set-Asset-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/086_Set-Script-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/088_Sponsor-Fee-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/093_Update-Asset-Info-Transaction-Binary-Format-V1.csv:1
msgid "Description"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/006_Reissue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/007_Burn-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/008_Set-Asset-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/009_Update-Asset-Info-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/011_Transfer-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/014_Mass-Transfer-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/021_Sponsor-Fee-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "assetId"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "Token ID: base58 encoded byte array. The token ID is calculated as a hash of the token parameters upon issue. See also the :ref:`token ID <02_decentralchain/02_token(asset):Token ID>` article."
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "issueHeight"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "Blockchain height (the sequence number of the block) at which the token is issued."
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "issueTimestamp"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "Token issue timestamp: Unix time in milliseconds."
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "issuer"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` of issuer account: base58 encoded byte array."
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "issuerPublicKey"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid ":ref:`Public key <02_decentralchain/01_account:Account Keys>` of issuer account: base58 encoded byte array."
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/009_Update-Asset-Info-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/093_Update-Asset-Info-Transaction-Binary-Format-V1.csv:1
msgid "name"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
msgid "Token name. From :math:`4` to :math:`16` bytes (:math:`1` character can take up to :math:`4` bytes)."
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/009_Update-Asset-Info-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/093_Update-Asset-Info-Transaction-Binary-Format-V1.csv:1
msgid "description"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/009_Update-Asset-Info-Transaction-JSON.csv:1
msgid "Token description. From :math:`0` to :math:`1000` bytes."
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
msgid "decimals"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "Number of decimal places, from :math:`0` to :math:`8`."
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/006_Reissue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/081_Reissue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
msgid "reissuable"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
#: ../../_static/02_decentralchain/tables/006_Reissue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/081_Reissue-Transaction-Binary-Format-V3.csv:1
msgid "Reissue availability flag."
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/006_Reissue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
msgid "quantity"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "Total supply of token on the blockchain specified in :ref:`atomic units <02_decentralchain/02_token(asset):Atomic Unit>`. From :math:`1` to :math:`9,223,372,036,854,775,807`. Total supply can change as a result of reissue or burning, see :ref:`token operations <02_decentralchain/02_token(asset):Token Operations>` below."
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "scripted"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "There being a script: true for smart asset, false for regular token. :ref:`More about smart assets <02_decentralchain/02_token(asset):Smart Asset>`."
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
#: ../../_static/02_decentralchain/tables/021_Sponsor-Fee-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
msgid "minSponsoredAssetFee"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "For sponsored asset only: an amount of asset that is equivalent to :math:`0.001` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`. :ref:`More about sponsorship <02_decentralchain/03_transaction:Sponsored Fees>`."
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "originTransactionId"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "ID of the :ref:`transaction <02_decentralchain/03_transaction:Transaction>` that issued the token: base58 encoded byte array."
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "scriptDetails"
msgstr ""

#: ../../_static/02_decentralchain/tables/001_Token-Custom-Parameters.csv:1
msgid "For :ref:`smart asset <02_decentralchain/02_token(asset):Smart Asset>` only: :ref:`asset script <03_ride-language/04_script-types:Asset Script>` and its attributes."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:191
msgid "Atomic Unit"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:193
msgid "The amount of token is displayed differently in UIs and in the :ref:`JSON representation <02_decentralchain/03_transaction:JSON Representation>` used by the :ref:`Node REST API <documentation:placeholder>`. In API requests and responses, amount values are integers indicated in atomic units to avoid precision issues in floating-point calculations. An atomic unit is the minimum fraction (“cent”) of a token, it is equal to :math:`10^{-decimals}`. The amount of token in JSON is the real quantity multiplied by :math:`10^{decimals}`."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:195
msgid "For USD-N in the example above:"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:197
msgid "decimals = :math:`6`,"
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:198
msgid "atomic unit is :math:`\\frac{1}{1,000,000}` USD-N."
msgstr ""

#: ../../02_decentralchain/02_token(asset).rst:199
msgid "\"quantity\": :math:`999999999471258900` corresponds to :math:`999,999,999,471.258900` USD-N in UIs, \"minSponsoredAssetFee\": :math:`7420` corresponds to :math:`0.007420` USD-N."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:3
msgid "Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:6
msgid "Transaction Issue"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:9
msgid "How to Sign and Send Transactions"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:11
msgid "In `Decentral.Exchange <https://decentral.exchange/>`_ you can create some types of transactions such as transfer, issue/reissue/burn, sponsor fee transaction, set asset script, create alias."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:12
msgid "Via :ref:`Node REST API <documentation:placeholder>`:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:14
msgid "The POST /transactions/broadcast method sends a signed transaction to a node;"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:15
msgid "The POST /transactions/sign method generates transaction signature (but this method is only available to the node owner)."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:18
msgid "Transaction Sender and Signature"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:20
msgid "Each transaction contains the public key of the sender’s account, on behalf of which the action is performed on the blockchain. :ref:`Smart accounts and dApps <02_decentralchain/01_account:dApp and Smart Account>` can set their own rules for outgoing transactions verification."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:22
msgid "Transactions that are sent from an ordinary account (without script) must contain the sender's digital signature. The sender generates a signature using the account's private key. Along with the signature, the transaction contains the sender's public key, so the node (and anyone) can verify the integrity of the transaction data and the authenticity of the signature, that is, make sure that the signature of the transaction matches the public key."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:25
msgid "After Transaction is Sent"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:27
msgid "Upon receiving a transaction, the node validates its signature, checks the sender's balance, and so on, see the :ref:`transaction validation <02_decentralchain/03_transaction:Transaction Validation>` article for details. If the transaction is valid, the node puts the transaction to the UTX pool, which is a list of transactions awaiting to be added, and also broadcasts the transaction to other nodes of the blockchain network."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:29
msgid "Due to block size limitation (:math:`1` MB) the transaction may not get to the block immediately. First of all, nodes add the most “profitable” transactions with the highest fee per byte. After being added to a block, the transaction changes the blockchain state: account balances, records in the account data storage, and so on. The transaction may never be added to a block if it becomes invalid while waiting in the UTX pool. For example, the transaction has expired (the timestamp is more than :math:`2` hours behind current time) or another transaction has changed the blockchain state and now the sender's balance is insufficient to execute the transaction or the account or asset script denies the transaction."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:34
msgid "Transaction Proofs"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:37
msgid "Verification by Script"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:39
msgid "If the transaction sender is a :ref:`dApp or smart account <02_decentralchain/01_account:dApp and Smart Account>`, then the transaction is verified by the script assigned to the account instead of signature verification. The script allows or denies the transaction depending on whether it meets the specified conditions. In particular, the script can run various verifications of the proofs."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:41
msgid "A common example is a smart account with a multisignature where three co-owner users store shared funds."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:44
msgid "Transaction Fees"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:46
msgid "Transaction fee is a fee that an :ref:`account <02_decentralchain/01_account:Account>` owner pays to send a :ref:`transaction <02_decentralchain/03_transaction:Transaction>`. A transaction sender can specify any amount of fee but not less than the minimum amount. The larger the fee is, the quicker the transaction will be added to the new :ref:`block <02_decentralchain/04_block:Block>`. For :ref:`invoke script transactions <02_decentralchain/03_transaction:Invoke Script Transaction>` and :ref:`transfer transaction <02_decentralchain/03_transaction:Transfer Transaction>`, a sender can specify a transaction fee nominated in a sponsored asset instead of :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`, see the section :ref:`fee in sponsored asset <02_decentralchain/03_transaction:Fee in Sponsored Asset>` below."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:50
msgid "Regular Fees"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:53
msgid "Minimum Fee"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:55
msgid "The minimum fees in DecentralCoins for each type of transaction are listed below."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:57
msgid "If the transaction sender is a :ref:`dApp or smart account <02_decentralchain/01_account:dApp and Smart Account>`, and the complexity of the account script or dApp script verifier function exceeds the :ref:`sender complexity threshold <03_ride-language/07_dapp-to-app-invocation:Limitations>`, the minimum fee is increased by :math:`0.004` DecentralCoins. If the order sender in :ref:`exchange transaction <02_decentralchain/03_transaction:Exchange Transaction>` is a dApp or smart account, this does nor affect the minimum fee."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:58
msgid "The minimum fee is increased by :math:`0.004` DecentralCoins for each smart asset involved, except for:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:61
msgid ":ref:`Smart assets <02_decentralchain/02_token(asset):Smart Asset>` used as matcher fees in exchange transactions."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:63
#: ../../02_decentralchain/05_node.rst:107
msgid ":strong:`Example 1`"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:65
msgid "The minimum fee for a transfer transaction:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:66
msgid "No smart account or smart assets: :math:`0.001` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:67
msgid "Transfer from smart account*: :math:`0.001 + 0.004 = 0.005` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:68
msgid "Transfer of smart asset: :math:`0.001 + 0.004 = 0.005` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:69
msgid "Transfer of smart asset sent from smart account*: :math:`0.001 + 0.004 + 0.004 = 0.009` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:71
#: ../../02_decentralchain/03_transaction.rst:82
msgid "If the account script complexity is higher than the :ref:`sender complexity threshold <03_ride-language/07_dapp-to-app-invocation:Limitations>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:73
#: ../../02_decentralchain/05_node.rst:114
msgid ":strong:`Example 2`"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:75
msgid "The minimum fee for an Invoke Script transaction:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:77
msgid "No smart account, no assets issued: :math:`0.005` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:78
msgid "dApp script invocation is sent from a smart account*: :math:`0.005 + 0.004 = 0.009` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:79
msgid "dApp script invocation issues an asset that is not :ref:`non-fungible tokens <02_decentralchain/02_token(asset):Non-Fungible Token>`: :math:`0.005 + 1 = 1.005` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:80
msgid "dApp script invocation is sent from smart account*, and :math:`10` assets that are not non-fungible tokens are issued: :math:`0.005 + 0.004 + 10 × 1 = 10.009` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:84
msgid "Minimum Fees"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
msgid "Transaction type"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
#: ../../_static/02_decentralchain/tables/018_Network.csv:1
#: ../../_static/02_decentralchain/tables/022_Genesis.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Transaction type ID"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
msgid "Minimum transaction fee in :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
msgid ":ref:`Burn transaction <02_decentralchain/03_transaction:Burn Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid ":math:`6`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
msgid ":math:`0.001`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid ":ref:`Create alias transaction <02_decentralchain/03_transaction:Create Alias Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":math:`10`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid ":ref:`data transaction <02_decentralchain/03_transaction:Data Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid ":math:`12`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
msgid ":math:`0.001` per kilobyte. The size is rounded up to an integer number of kilobytes."
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid ":ref:`Exchange transaction <02_decentralchain/03_transaction:Exchange Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":math:`7`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
msgid ":math:`0.003`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid ":ref:`invoke script transaction <02_decentralchain/03_transaction:Invoke Script Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid ":math:`16`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
msgid ":math:`0.005 + K`. :math:`K` is the number of assets issued as a result of dApp script invocation that are not non-fungible tokens."
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
msgid ":ref:`Issue transaction <02_decentralchain/03_transaction:Issue Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid ":math:`3`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
msgid ":math:`1` for reqular token. :math:`0.001` for :ref:`non-fungible token <02_decentralchain/02_token(asset):Non-Fungible Token>`."
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/018_Network.csv:1
msgid ":ref:`Lease cancel transaction <02_decentralchain/03_transaction:Lease Cancel Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/018_Network.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":math:`9`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/018_Network.csv:1
msgid ":ref:`Lease transaction <02_decentralchain/03_transaction:Lease Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/018_Network.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":math:`8`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid ":ref:`Mass transfer transaction <02_decentralchain/03_transaction:Mass Transfer Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
msgid ":math:`11`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
msgid ":math:`0.001 + 0.0005 × N`. :math:`N` is the number of transfers inside of the transaction. The value is rounded up to the three decimals."
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
msgid ":ref:`Reissue transaction <02_decentralchain/03_transaction:Reissue Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid ":math:`5`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
msgid ":ref:`Set asset script transaction <02_decentralchain/03_transaction:Set Asset Script Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`15`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/022_Genesis.csv:1
#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid ":math:`1`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid ":ref:`set script transaction <02_decentralchain/03_transaction:Set Script Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid ":math:`13`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
msgid ":math:`0.01`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/018_Network.csv:1
msgid ":ref:`Sponsor fee transaction <02_decentralchain/03_transaction:Sponsor Fee Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/018_Network.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
msgid ":math:`14`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid ":ref:`Transfer transaction <02_decentralchain/03_transaction:Transfer Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid ":math:`4`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
msgid ":ref:`Update asset info transaction <02_decentralchain/03_transaction:Update Asset Info Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/002_Minimum-Fees.csv:1
#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
msgid ":math:`17`"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:91
msgid "Fee for Failed Transactions"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:93
msgid ":ref:`Invoke script transactions <02_decentralchain/03_transaction:Invoke Script Transaction>` and :ref:`exchange transactions <02_decentralchain/03_transaction:Exchange Transaction>` can be saved on the blockchain even if the result of a dApp script or asset script execution failed. In this case, the sender is charged a fee. For an exchange transaction, the matcher is charged the transaction fee but the order senders are not charged the matcher fee. :ref:`More about transaction validation<02_decentralchain/03_transaction:Transaction Validation>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:96
msgid "Fee in Sponsored Asset"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:98
msgid "An issuer of an asset can set up sponsorship — so that any user can specify a transaction fee in this asset for :ref:`invoke script transactions <02_decentralchain/03_transaction:Invoke Script Transaction>` and :ref:`transfer transactions <02_decentralchain/03_transaction:Transfer Transaction>`. To activate sponsorship, the issuer puts a :ref:`sponsor fee transaction<02_decentralchain/03_transaction:Sponsor Fee Transaction>` that specifies an amount of asset that is equivalent to the minimum fee of :math:`0.001` DecentralCoins. For example, if minSponsoredAssetFee: :math:`5`, then the fee in this asset for an invoke script transaction equals :math:`5 * \\frac{0.005}{0.001} = 25`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:102
msgid "Sponsored Fees"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:104
msgid "Users of DecentralChain-based apps should pay a fee for each transaction. This is the entry threshold for new users. Sometimes users don't know anything about :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` or don't understand how to get DecentralCoins or don't want to spend money. Sponsorship enables launching apps that do not require DecentralCoins from users."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:107
msgid "Sponsored Asset"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:109
msgid "An account that issued an asset can enable sponsorship, that is, allow all users to pay a fee in this asset for :ref:`invoke script transactions <02_decentralchain/03_transaction:Invoke Script Transaction>` and :ref:`transfer transactions <02_decentralchain/03_transaction:Transfer Transaction>`. The sponsor can distribute the sponsored asset among app users."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:112
msgid "How to Enable Sponsorship"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:114
msgid "You can use `Decentral.Exchange <https://decentral.exchange/>`_ online to enable sponsorship."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:116
msgid "Make sure you are logged into your account. Find the desired asset in the list, hover cursor over it and in its menu (⋮) click Enable Sponsorship."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:117
msgid "Carefully read the Terms and Conditions before proceeding and then in the Amount per transaction box specify the required amount of sponsored asset to be charged to users. Then click Continue."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:118
msgid "In the following window double-check the entered data and if everything is correct click Send or click Go Back to make corrections. Activation will be processed with the next block."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:119
msgid "After activation you'll be able to change the specified amount without deactivation. To do so, find your asset in the list, hover cursor over it and in its menu (⋮) click Change Sponsorship."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:121
msgid "The fee for this type of transaction is :math:`0.001` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:124
msgid "How to Disable Sponsorship"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:126
msgid "You can use `Decentral.Exchange <https://decentral.exchange/>`_ online to disable sponsorship."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:128
msgid "Make sure you are logged into your account. Find the desired asset in the list, hover cursor over it and in its menu (⋮) click Disable Sponsorship."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:129
msgid "In the following window click Sign to deactivate the sponsorship. Deactivation will be processed with the next block."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:132
msgid "Restrictions"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:134
msgid "Only the issuer of the asset can be a sponsor."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:135
msgid "Smart assets cannot be sponsored assets."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:136
msgid "Sponsorship only works if the sponsor's account balance is greater than :math:`1.005` DecentralCoins. If the account balance becomes less than :math:`1.005` DecentralCoins, the sponsorship is suspended, and if the balance becomes more than :math:`1.005` DecentralCoins the sponsorship is resumed."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:137
msgid "The fee in the sponsored asset can only be specified for :ref:`invoke script transactions <02_decentralchain/03_transaction:Invoke Script Transaction>` and :ref:`transfer transactions <02_decentralchain/03_transaction:Transfer Transaction>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:140
msgid "How It Works"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:142
msgid "After :ref:`enabling sponsorship <02_decentralchain/03_transaction:How to Enable Sponsorship>`, if the requirements described in the :ref:`restrictions <02_decentralchain/03_transaction:Restrictions>` section are met, the sponsorship works as follows:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:144
msgid "A user broadcasts a transaction and specifies a fee in the sponsored asset."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:145
msgid "The sponsor receives the fee in the sponsored asset from the user's account."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:146
msgid "Block generators receive the fee in DecentralCoins from the sponsor's account (in accordance with the :ref:`DecentralChain-M5 protocol <02_decentralchain/09_protocol:DecentralChain-M5 Protocol>`, the fee is distributed between the current block generator and the next block generator in a ratio of :math:`\\frac{40}{60}`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:148
msgid "The script on the sponsor's account is not executed and does not affect the sponsorship because the transaction is sent from the user's account."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:152
msgid "The fee in :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` charged to the sponsor is proportional to the fee specified by the transaction sender:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:158
msgid "minSponsoredAssetFee is the amount of sponsored asset equivalent to :math:`0.001` DecentralCoins. The sponsor sets this value when enabling sponsorship. For example, if the sponsor sets :math:`3` tokens = :math:`0.001` DecentralCoins, then the minimum fee for :ref:`invoke script transactions <02_decentralchain/03_transaction:Invoke Script Transaction>` is :math:`15` tokens, which corresponds to :math:`0.005` DecentralCoins. Please note:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:161
msgid "The user can use the sponsored asset to pay for transactions that are not related to a certain app."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:162
msgid "The user can specify any amount of fee, such as the one significantly exceeding the minimum."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:165
msgid "Transaction Representations"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:168
#: ../../02_decentralchain/03_transaction.rst:190
msgid "JSON Representation"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:170
msgid "The :ref:`Node REST API <documentation:placeholder>` of DecentralChain nodes uses the JSON representation of transactions. You can send transactions to a node and read transactions stored on the blockchain via REST API in JSON. Here is an example of JSON representation:"
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "senderPublicKey"
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid ":ref:`Public key <02_decentralchain/01_account:Account Keys>` of the transaction sender: base58 encoded byte array."
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid "sender"
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` of the transaction sender: base58 encoded byte array."
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "feeAssetId"
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid "ID of the fee token. null means that the fee is in :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`. The sender can specify the fee for :ref:`invoke script transactions <02_decentralchain/03_transaction:Invoke Script Transaction>` and :ref:`transfer transactions <02_decentralchain/03_transaction:Transfer Transaction>` in a sponsored asset, see the :ref:`sponsored fee <02_decentralchain/03_transaction:Sponsored Fees>` article for details."
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "proofs"
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid "Array of :ref:`transaction proofs <02_decentralchain/03_transaction:Transaction Proofs>`. Up to :math:`8` proofs, each proof up to :math:`64` bytes base58 encoded."
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "fee"
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid ":ref:`Transaction fee <02_decentralchain/03_transaction:Transaction Fees>`: an integer value indicated in the minimum fraction (“cent”) of the fee asset. For example, if the fee is :math:`0.001` DecentralCoins, :math:`100000` is indicated in the JSON representation, so far as :math:`1` DecentralCoin = :math:`10^{8}` Decentralites."
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid "id"
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid "Transaction ID. For the transaction ID calculation method, see the :ref:`cryptographic practical details <02_decentralchain/09_protocol:Cryptographic Practical Details>` article."
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "type"
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid "Transaction type. Type IDs are listed in the :ref:`transaction type <02_decentralchain/03_transaction:Transaction Types>` article."
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "version"
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid "Transaction version. Versions for each type of transaction are listed in :ref:`transaction binary format <02_decentralchain/10_binary-format:Transaction Binary Format>` descriptions."
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid "applicationStatus"
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid "Status of transaction execution: 1) succeeded: transaction is successful. 2) script_execution_failed: the dApp script or the asset script failed. See the :ref:`transaction validation <02_decentralchain/03_transaction:Transaction Validation>` article for details."
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "timestamp"
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid "Transaction timestamp specified by the sender: Unix time in milliseconds. The transaction cannot be added to the blockchain if the timestamp value is more than :math:`2` hours behind or :math:`1.5` hours ahead of current block timestamp.\""
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid "height"
msgstr ""

#: ../../_static/02_decentralchain/tables/003_JSON-Representation.csv:1
msgid "The sequence number of the block that contains the transaction."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:196
msgid "The sender, id, applicationStatus, and height fields do not need to be filled when sending a transaction, and they are not stored on the blockchain. The node calculates these fields when providing transaction data via the Node REST API. The fields that depend on the type of transaction are listed in the description of each :ref:`type of transaction <02_decentralchain/03_transaction:Transaction Types>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:202
msgid "Transactions are stored on the blockchain in the binary format (byte representation). :ref:`Node extensions <documentation:placeholder>` such as :ref:`gRPC server <documentation:placeholder>` can work directly with data in binary format. The transaction signature and ID are also formed on the basis of the binary format. The guideline for generating a signature and ID is given in the :ref:`cryptographic practical details <02_decentralchain/09_protocol:Cryptographic Practical Details>` article. Transaction binary format is described in the :ref:`transaction binary format <02_decentralchain/10_binary-format:Transaction Binary Format>` article."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:206
msgid "You can get the transaction by ID, or the list of transactions by certain account address, or the list of all transactions in the block:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:208
msgid "In `DecentralChain Explorer <https://decentralscan.com/>`_."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:209
msgid "Via :ref:`Node REST API <documentation:placeholder>` using the following methods:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:211
msgid "GET /transactions/info/{id} returns transaction data by transaction ID."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:212
msgid "GET /transactions/address/{address}/limit/{limit} returns the list of transactions where the specified address is involved."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:213
msgid "GET /blocks/at/{height} returns block data at the specified height including all transactions in the block."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:216
msgid "Transaction Types"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:219
#: ../../02_decentralchain/03_transaction.rst:221
msgid "Tokenization"
msgstr ""

#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
#: ../../_static/02_decentralchain/tables/018_Network.csv:1
#: ../../_static/02_decentralchain/tables/022_Genesis.csv:1
msgid "Name"
msgstr ""

#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
msgid "Issues a token."
msgstr ""

#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
msgid "Reissues a token."
msgstr ""

#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
msgid "Decreases the amount of token."
msgstr ""

#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
msgid "Modifies the asset script."
msgstr ""

#: ../../_static/02_decentralchain/tables/004_Tokenization.csv:1
msgid "Changes the token name and description."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:228
msgid "Issue Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:230
msgid "Issue transaction creates a new :ref:`token <02_decentralchain/02_token(asset):Token (Asset)>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:232
#: ../../02_decentralchain/03_transaction.rst:286
#: ../../02_decentralchain/03_transaction.rst:336
#: ../../02_decentralchain/03_transaction.rst:385
#: ../../02_decentralchain/03_transaction.rst:434
#: ../../02_decentralchain/03_transaction.rst:494
#: ../../02_decentralchain/03_transaction.rst:652
#: ../../02_decentralchain/03_transaction.rst:699
#: ../../02_decentralchain/03_transaction.rst:770
#: ../../02_decentralchain/03_transaction.rst:838
#: ../../02_decentralchain/03_transaction.rst:888
#: ../../02_decentralchain/03_transaction.rst:999
#: ../../02_decentralchain/03_transaction.rst:1051
#: ../../02_decentralchain/03_transaction.rst:1113
msgid ":strong:`Fee`"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:234
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for an issue transaction is :math:`1` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`, in case of issue of a :ref:`non-fungible tokens (NFT) <02_decentralchain/02_token(asset):Non-Fungible Token>` :math:`0.001` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:236
#: ../../02_decentralchain/03_transaction.rst:290
#: ../../02_decentralchain/03_transaction.rst:340
#: ../../02_decentralchain/03_transaction.rst:389
#: ../../02_decentralchain/03_transaction.rst:438
#: ../../02_decentralchain/03_transaction.rst:498
#: ../../02_decentralchain/03_transaction.rst:554
#: ../../02_decentralchain/03_transaction.rst:656
#: ../../02_decentralchain/03_transaction.rst:703
#: ../../02_decentralchain/03_transaction.rst:774
#: ../../02_decentralchain/03_transaction.rst:842
#: ../../02_decentralchain/03_transaction.rst:1003
#: ../../02_decentralchain/03_transaction.rst:1055
#: ../../02_decentralchain/03_transaction.rst:1117
msgid "If the transaction sender is a :ref:`dApp or smart account <02_decentralchain/01_account:dApp and Smart Account>`, and the complexity of the account script or dApp script verifier function exceeds the :ref:`sender complexity threshold <03_ride-language/07_dapp-to-app-invocation:Limitations>`, the minimum fee is increased by :math:`0.004` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:238
#: ../../02_decentralchain/03_transaction.rst:292
#: ../../02_decentralchain/03_transaction.rst:342
#: ../../02_decentralchain/03_transaction.rst:391
#: ../../02_decentralchain/03_transaction.rst:440
#: ../../02_decentralchain/03_transaction.rst:500
#: ../../02_decentralchain/03_transaction.rst:564
#: ../../02_decentralchain/03_transaction.rst:658
#: ../../02_decentralchain/03_transaction.rst:705
#: ../../02_decentralchain/03_transaction.rst:776
#: ../../02_decentralchain/03_transaction.rst:844
#: ../../02_decentralchain/03_transaction.rst:903
#: ../../02_decentralchain/03_transaction.rst:1005
#: ../../02_decentralchain/03_transaction.rst:1057
#: ../../02_decentralchain/03_transaction.rst:1119
msgid ":strong:`JSON Representation`"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:265
msgid "Issue Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
msgid "Token quantity: an integer value specified in the minimum fraction (“cents”), that is, the real quantity multiplied by :math:`10^{decimals}`. From :math:`1` to :math:`9,223,372,036,854,775,807`. :math:`1` for NFT."
msgstr ""

#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
msgid "Number of decimal places, from :math:`0` to :math:`8`. :math:`0` for NFTs."
msgstr ""

#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
msgid "Reissue availability flag, see the :ref:`reissue transaction <02_decentralchain/03_transaction:Reissue Transaction>` article. False for NFTs."
msgstr ""

#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/008_Set-Asset-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/016_Set-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/084_Set-Asset-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/086_Set-Script-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
msgid "script"
msgstr ""

#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
msgid "For the :ref:`smart asset <02_decentralchain/02_token(asset):Smart Asset>`: the compiled :ref:`Asset script <03_ride-language/04_script-types:Asset Script>`, up to :math:`8192` bytes, base64 encoded. For the token without a script: null. The token issued without a script cannot be converted to a smart asset."
msgstr ""

#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/006_Reissue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/007_Burn-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/008_Set-Asset-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/009_Update-Asset-Info-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/016_Set-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/020_Lease-Cancel-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
msgid "chainId"
msgstr ""

#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/006_Reissue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/007_Burn-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/008_Set-Asset-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/009_Update-Asset-Info-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/016_Set-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/020_Lease-Cancel-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
msgid ":ref:`Chain ID <02_decentralchain/08_mainnet-testnet-stagenet:Chain ID>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/005_Issue-Transaction-JSON.csv:1
msgid "Token ID base58 encoded. The token ID is the same as the Issue transaction ID."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:271
msgid "The assetId field does not need to be filled when sending a transaction, and it is not stored on the blockchain. The node calculates these fields when providing transaction data via the REST API. The fields that are common to all types of transactions are described in the :ref:`transaction <02_decentralchain/03_transaction:Transaction>` article."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:273
#: ../../02_decentralchain/03_transaction.rst:323
#: ../../02_decentralchain/03_transaction.rst:372
#: ../../02_decentralchain/03_transaction.rst:421
#: ../../02_decentralchain/03_transaction.rst:472
#: ../../02_decentralchain/03_transaction.rst:533
#: ../../02_decentralchain/03_transaction.rst:639
#: ../../02_decentralchain/03_transaction.rst:686
#: ../../02_decentralchain/03_transaction.rst:753
#: ../../02_decentralchain/03_transaction.rst:825
#: ../../02_decentralchain/03_transaction.rst:873
#: ../../02_decentralchain/03_transaction.rst:975
#: ../../02_decentralchain/03_transaction.rst:1038
#: ../../02_decentralchain/03_transaction.rst:1098
#: ../../02_decentralchain/03_transaction.rst:1148
#: ../../02_decentralchain/03_transaction.rst:1170
msgid ":strong:`Binary Format`"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:275
msgid "See the :ref:`issue transaction binary format <02_decentralchain/10_binary-format:Issue Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:277
#: ../../02_decentralchain/03_transaction.rst:327
#: ../../02_decentralchain/03_transaction.rst:376
#: ../../02_decentralchain/03_transaction.rst:425
#: ../../02_decentralchain/03_transaction.rst:476
#: ../../02_decentralchain/03_transaction.rst:537
#: ../../02_decentralchain/03_transaction.rst:643
#: ../../02_decentralchain/03_transaction.rst:690
#: ../../02_decentralchain/03_transaction.rst:757
#: ../../02_decentralchain/03_transaction.rst:829
#: ../../02_decentralchain/03_transaction.rst:877
#: ../../02_decentralchain/03_transaction.rst:979
#: ../../02_decentralchain/03_transaction.rst:1042
#: ../../02_decentralchain/03_transaction.rst:1102
#: ../../02_decentralchain/03_transaction.rst:1152
msgid ":strong:`Ride Structure`"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:279
msgid "The :ref:`IssueTransaction structure <03_ride-language/05_structures:IssueTransaction>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:282
msgid "Reissue Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:284
msgid "Reissue transaction increases the amount of the :ref:`token <02_decentralchain/02_token(asset):Token (Asset)>` on the blockchain and/or prohibits its reissue. Only the token issuer can send a reissue transaction. The additional amount of token increases the balance of the transaction sender. The reissuable field of the token determines whether the token can be reissued."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:288
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for a reissue transaction is :math:`0.001` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`. If the token is a smart asset, the minimum fee is increased by :math:`0.004` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:315
msgid "Reissue Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/006_Reissue-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/007_Burn-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/008_Set-Asset-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/009_Update-Asset-Info-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/021_Sponsor-Fee-Transaction-JSON.csv:1
msgid "Token ID base58 encoded."
msgstr ""

#: ../../_static/02_decentralchain/tables/006_Reissue-Transaction-JSON.csv:1
msgid "Amount of token to reissue: an integer value specified in the minimum fraction (“cents”) of token. The total quantity of token as a result of the reissue should not exceed :math:`9,223,372,036,854,775,807`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:321
#: ../../02_decentralchain/03_transaction.rst:370
#: ../../02_decentralchain/03_transaction.rst:419
#: ../../02_decentralchain/03_transaction.rst:470
#: ../../02_decentralchain/03_transaction.rst:531
#: ../../02_decentralchain/03_transaction.rst:637
#: ../../02_decentralchain/03_transaction.rst:684
#: ../../02_decentralchain/03_transaction.rst:751
#: ../../02_decentralchain/03_transaction.rst:823
#: ../../02_decentralchain/03_transaction.rst:871
#: ../../02_decentralchain/03_transaction.rst:973
#: ../../02_decentralchain/03_transaction.rst:1036
#: ../../02_decentralchain/03_transaction.rst:1096
#: ../../02_decentralchain/03_transaction.rst:1146
msgid "The fields that are common to all types of transactions are described in the :ref:`transaction <02_decentralchain/03_transaction:Transaction>` article."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:325
msgid "See the :ref:`reissue transaction binary format <02_decentralchain/10_binary-format:Reissue Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:329
msgid "The :ref:`ReissueTransaction structure <03_ride-language/05_structures:ReissueTransaction>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:332
msgid "Burn Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:334
msgid "Burn transaction decreases the amount of token on sender's account and thereby the total amount of the token on the blockchain. Any account that owns a token (not necessarily the token issuer) can send the burn transaction. Burned tokens cannot be restored back to the account."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:338
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for a burn transaction is :math:`0.001` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`, in case of burning a smart asset :math:`0.005` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:364
msgid "Burn Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/007_Burn-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/011_Transfer-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/012_Exchange-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/019_Lease-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/064_Exchange-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/076_Lease-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "amount"
msgstr ""

#: ../../_static/02_decentralchain/tables/007_Burn-Transaction-JSON.csv:1
msgid "Amount of token to burn: an integer value specified in the minimum fraction (“cents”) of token."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:374
msgid "See the :ref:`burn transaction binary format <02_decentralchain/10_binary-format:Burn Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:378
msgid "The :ref:`BurnTransaction structure <03_ride-language/05_structures:BurnTransaction>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:381
msgid "Set Asset Script Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:383
msgid "Set asset script transaction replaces the :ref:`asset script <03_ride-language/04_script-types:Asset Script>`. Only the token issuer can send an asset script transaction. If a token is issued without a script, then no script can be assigned to it. It is also impossible to remove the script and turn the smart asset into a regular one."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:387
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for a set asset script transaction is :math:`1` :ref:`DecentralCoin <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:413
msgid "Set Asset Script Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/008_Set-Asset-Script-Transaction-JSON.csv:1
msgid "Compiled asset script, up to :math:`8192` bytes, base64 encoded."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:423
msgid "See the :ref:`set asset script transaction binary format <02_decentralchain/10_binary-format:Set Asset Script Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:427
msgid "The :ref:`SetAssetScriptTransaction structure <03_ride-language/05_structures:SetAssetScriptTransaction>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:430
msgid "Update Asset Info Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:432
msgid "Update asset info transaction modifies the name and description of the token."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:436
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for an update asset info transaction is :math:`0.001` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`, in case of a smart asset :math:`0.005` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:464
msgid "Update Asset Info Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/009_Update-Asset-Info-Transaction-JSON.csv:1
msgid "Token name. From :math:`4` to :math:`16` bytes."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:474
msgid "See the :ref:`update asset info transaction binary format <02_decentralchain/10_binary-format:Update Asset Info Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:478
msgid "The :ref:`UpdateAssetInfoTransaction structure <03_ride-language/05_structures:UpdateAssetInfoTransaction>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:481
#: ../../02_decentralchain/03_transaction.rst:483
msgid "Usage"
msgstr ""

#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid "Transfers a token to another account."
msgstr ""

#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid "Exchanges two different tokens between two accounts. Contains two counter orders: a buy order and a sell order."
msgstr ""

#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid "Creates alias for the sender's address."
msgstr ""

#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid "Transfers a token, up to :math:`100` recipients."
msgstr ""

#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid "Adds, modifies and deletes data entries in the sender's account data storage."
msgstr ""

#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid "Assigns the dApp script or account script to the sender's account."
msgstr ""

#: ../../_static/02_decentralchain/tables/010_Usage.csv:1
msgid "Invokes a callable function of a dApp."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:490
msgid "Transfer Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:492
msgid "Transfer transaction transfers a certain amount of token to another account."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:496
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for a transfer transaction is :math:`0.001` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`, in case of transferring a smart asset :math:`0.005` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:525
msgid "Transfer Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/011_Transfer-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/014_Mass-Transfer-Transaction-JSON.csv:1
msgid "Token ID base58 encoded. null means :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../_static/02_decentralchain/tables/011_Transfer-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/014_Mass-Transfer-Transaction-JSON.csv:1
msgid "Amount of token to transfer: an integer value specified in the minimum fraction (“cents”) of token."
msgstr ""

#: ../../_static/02_decentralchain/tables/011_Transfer-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/014_Mass-Transfer-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "attachment"
msgstr ""

#: ../../_static/02_decentralchain/tables/011_Transfer-Transaction-JSON.csv:1
msgid "Arbitrary binary data (typically a comment to transfer) base58 encoded, up to :math:`4` bytes."
msgstr ""

#: ../../_static/02_decentralchain/tables/011_Transfer-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/019_Lease-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "recipient"
msgstr ""

#: ../../_static/02_decentralchain/tables/011_Transfer-Transaction-JSON.csv:1
msgid "Recipient address base58 encoded or recipient alias with alias:<chain_id>: prefix, for example alias:T:merry (See :ref:`chain ID <02_decentralchain/08_mainnet-testnet-stagenet:Chain ID>`)."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:535
msgid "See the :ref:`transfer transaction binary format <02_decentralchain/10_binary-format:Transfer Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:539
msgid "The :ref:`TransferTransaction structure <03_ride-language/05_structures:TransferTransaction>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:542
msgid "Exchange Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:544
msgid "Exchange transaction exchanges two different tokens between two accounts. Commonly the exchange transaction is created by the matcher service that executes orders to buy and sell tokens. The exchange transaction contains two counter orders: a buy order and a sell order. The blockchain guarantees that the terms of the exchange are not worse than those indicated in each order."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:546
msgid "An order can be filled partially. An order can participate in several exchange transactions, with different counter orders. One of the two exchanged tokens is the amount asset (base currency): it represents the amount of token in orders and in the Exchange transaction. Another token is a price asset (quote currency): it represents the price."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:550
msgid ":strong:`Transaction Fee`"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:552
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for an exchange transaction is :math:`0.003` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`. In case of exchange of a :ref:`smart asset <02_decentralchain/02_token(asset):Smart Asset>` for an ordinary asset the minimum fee is :math:`0.007` DecentralCoins, in case of exchange of two smart assets the minimum fee is :math:`0.011` DecentralCoins."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:556
msgid ":strong:`Matcher Fee`"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:558
msgid "The matcher receives a fee for order execution from each order sender. The minimum matcher fee is set by the matcher. The order sender specifies the fee not less than the minimum amount."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:560
msgid "If the order is fully filled with one exchange transaction, the matcher receives the entire fee specified in the order. If the order is partially filled, the matcher receives a part of the fee. The blockchain guarantees that the total matcher fee received from the order sender in all exchange transactions does not exceed the fee specified in the order."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:631
msgid "Exchange Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/012_Exchange-Transaction-JSON.csv:1
msgid "Amount of the amount asset: an integer value specified in the minimum fraction (“cent”) of asset."
msgstr ""

#: ../../_static/02_decentralchain/tables/012_Exchange-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/064_Exchange-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
msgid "price"
msgstr ""

#: ../../_static/02_decentralchain/tables/012_Exchange-Transaction-JSON.csv:1
msgid "Price for the amount asset nominated in the price asset, multiplied by the factor: 1) :math:`10^{8}` for the exchange transaction version 3. 2) :math:`10^{(8 + priceAssetDecimals – amountAssetDecimals)}`. Where amountAssetDecimals, priceAssetDecimals are decimals of the assets, for the exchange transaction version 2 or 1."
msgstr ""

#: ../../_static/02_decentralchain/tables/012_Exchange-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
msgid "buyMatcherFee"
msgstr ""

#: ../../_static/02_decentralchain/tables/012_Exchange-Transaction-JSON.csv:1
msgid "Matcher fee for the buy order execution. The fee token ID is indicated in buy order."
msgstr ""

#: ../../_static/02_decentralchain/tables/012_Exchange-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
msgid "sellMatcherFee"
msgstr ""

#: ../../_static/02_decentralchain/tables/012_Exchange-Transaction-JSON.csv:1
msgid "Matcher fee for the sell order execution. The fee token ID is indicated in sell order."
msgstr ""

#: ../../_static/02_decentralchain/tables/012_Exchange-Transaction-JSON.csv:1
msgid "order1, order2"
msgstr ""

#: ../../_static/02_decentralchain/tables/012_Exchange-Transaction-JSON.csv:1
msgid "Buy and sell orders. See the :ref:`order <02_decentralchain/06_order:Order>` article for details."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:641
msgid "See the :ref:`exchange transaction binary format <02_decentralchain/10_binary-format:Exchange Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:645
msgid "The :ref:`ExchangeTransaction structure <03_ride-language/05_structures:ExchangeTransaction>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:648
msgid "Create Alias Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:650
msgid "Create Alias transaction creates an :ref:`alias <02_decentralchain/01_account:Alias>` for the sender's address.A created alias cannot be deleted."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:654
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for a Create Alias transaction is :math:`0.001` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:678
msgid "Create Alias Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/013_Create-Alias-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/059_Create-Alias-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
msgid "alias"
msgstr ""

#: ../../_static/02_decentralchain/tables/013_Create-Alias-Transaction-JSON.csv:1
msgid "Alias. From :math:`4` to :math:`30` bytes (:math:`1` character can take up to :math:`4` bytes)."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:688
msgid "See the :ref:`create alias transaction binary format <02_decentralchain/10_binary-format:Create Alias Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:692
msgid "The :ref:`CreateAliasTransaction structure <03_ride-language/05_structures:CreateAliasTransaction>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:695
msgid "Mass Transfer Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:697
msgid "Mass transfer transaction transfers a :ref:`token <02_decentralchain/02_token(asset):Token (Asset)>` to several accounts, from :math:`1` :ref:`DecentralCoin <02_decentralchain/02_token(asset):DecentralCoin>` to :math:`100` DecentralCoins ."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:701
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for a Mass Transfer transaction is :math:`0.001 + 0.0005 × N` DecentralCoins, in case of transferring a :ref:`smart asset <02_decentralchain/02_token(asset):Smart Asset>` :math:`0.001 + 0.0005 × N` DecentralCoins, where :math:`N` DecentralCoins is the number of recipients. The fee value is rounded up to three decimals."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:743
msgid "Mass Transfer Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/014_Mass-Transfer-Transaction-JSON.csv:1
msgid "Arbitrary binary data (typically a comment to transfer) base58 encoded, up to :math:`140` bytes."
msgstr ""

#: ../../_static/02_decentralchain/tables/014_Mass-Transfer-Transaction-JSON.csv:1
msgid "transfers.recipient"
msgstr ""

#: ../../_static/02_decentralchain/tables/014_Mass-Transfer-Transaction-JSON.csv:1
msgid "Recipient address base58 encoded or recipient alias with alias:<chain_id>: prefix, for example alias:T:merry (See :ref:`Chain ID <02_decentralchain/08_mainnet-testnet-stagenet:Chain ID>`)."
msgstr ""

#: ../../_static/02_decentralchain/tables/014_Mass-Transfer-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
msgid "transfers.amount"
msgstr ""

#: ../../_static/02_decentralchain/tables/014_Mass-Transfer-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid "transferCount"
msgstr ""

#: ../../_static/02_decentralchain/tables/014_Mass-Transfer-Transaction-JSON.csv:1
msgid "Number of recipients."
msgstr ""

#: ../../_static/02_decentralchain/tables/014_Mass-Transfer-Transaction-JSON.csv:1
msgid "totalAmount"
msgstr ""

#: ../../_static/02_decentralchain/tables/014_Mass-Transfer-Transaction-JSON.csv:1
msgid "Total amount of transfers in transaction."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:749
msgid "The transferCount and totalAmount fields do not need to be filled when sending a transaction, and they are not stored on the blockchain. The node calculates these fields when providing transaction data via the REST API."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:755
msgid "See the :ref:`mass transfer transaction binary format <02_decentralchain/10_binary-format:Mass Transfer Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:759
msgid "The :ref:`MassTransferTransaction structure <03_ride-language/05_structures:MassTransferTransaction>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:762
msgid "Data Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:764
msgid "Data transaction adds, modifies and deletes data entries in sender's :ref:`account data storage <02_decentralchain/01_account:Account Data Storage>`. Limitations are as follows:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:766
msgid "The maximum number of entries is :math:`100`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:767
msgid "For a transaction version 2 the maximum data size (keys + values) is :math:`165,890` bytes."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:768
msgid "For a transaction version 1 the maximum transaction size (except proofs) is :math:`153,600` bytes."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:772
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for a Data transaction is :math:`0.001` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` per kilobyte, the size is rounded up to an integer number of kilobytes."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:817
msgid "Data Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/015_Data-Transaction-JSON.csv:1
msgid "data.key"
msgstr ""

#: ../../_static/02_decentralchain/tables/015_Data-Transaction-JSON.csv:1
msgid "Entry key. String, up to :math:`400` bytes for version 2, up to :math:`100` characters for version 1."
msgstr ""

#: ../../_static/02_decentralchain/tables/015_Data-Transaction-JSON.csv:1
msgid "data.type"
msgstr ""

#: ../../_static/02_decentralchain/tables/015_Data-Transaction-JSON.csv:1
msgid "Entry type: 1) binary. 2) boolean. 3) integer. 4) string. 5) null – delete entry."
msgstr ""

#: ../../_static/02_decentralchain/tables/015_Data-Transaction-JSON.csv:1
msgid "data.value"
msgstr ""

#: ../../_static/02_decentralchain/tables/015_Data-Transaction-JSON.csv:1
msgid "Entry value. Up to :math:`32,767` bytes. Binary value is base64 encoded. null – delete entry."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:827
msgid "See the :ref:`data transaction binary format <02_decentralchain/10_binary-format:Data Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:831
msgid "The :ref:`DataTransaction structure <03_ride-language/07_dapp-to-app-invocation:Limitations>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:834
msgid "Set Script Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:836
msgid "Set script transaction assigns the dApp script :ref:`dApp script <03_ride-language/04_script-types:dApp Script>` or :ref:`account script <03_ride-language/04_script-types:Account Script>` to the sender's account."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:840
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for a Set Script transaction is :math:`0.001` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:865
msgid "Set Script Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/016_Set-Script-Transaction-JSON.csv:1
msgid "Compiled script, base64 encoded. Account script up to :math:`8192` bytes, dApp script up to :math:`32,767` bytes. null – delete script."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:875
msgid "See the :ref:`set script transaction binary format <02_decentralchain/10_binary-format:Set Script Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:879
msgid "The :ref:`SetScriptTransaction structure <03_ride-language/05_structures:SetScriptTransaction>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:882
msgid "Invoke Script Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:884
msgid "Invoke script transaction invokes the :ref:`callable function <03_ride-language/03_functions:Callable Functions>` of the :ref:`dApp <02_decentralchain/01_account:dApp and Smart Account>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:886
msgid "In addition to the dApp address, callable function name, and arguments, the Invoke Script transaction can contain payments to dApp. The maximum number of payments is 10."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:890
msgid "The sender can specify a transaction fee nominated in a sponsored asset instead of DecentralCoins, see the :ref:`sponsored fee <02_decentralchain/03_transaction:Sponsored Fees>` article."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:892
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` in :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` for an invoke script transaction is Fee :math:`= 0.005 + S + 1 × I`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:894
msgid "If the transaction sender is a dApp or smart account, and that the complexity of the account script or dApp script verifier function exceeds the sender complexity threshold, then :math:`S = 0.004`, otherwise :math:`S = 0`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:895
msgid ":math:`I` is the number of issued assets that are not :ref:`NFT <02_decentralchain/02_token(asset):Non-Fungible Token>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:897
msgid ":strong:`Total Complexity`"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:899
msgid "A dApp callable function can invoke a callable function of another dApp, or another callable function of the same dApp, or even itself. All invoked functions are executed within a single Invoke Script transaction. :ref:`More about dApp-to-dApp invocation <03_ride-language/07_dapp-to-app-invocation:dApp-to-App Invocation>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:901
msgid "The total :ref:`complexity <03_ride-language/07_dapp-to-app-invocation:Script Complexity>` is limited by :math:`26,000` for all callable functions and asset scripts of involved smart assets in a single invoke script transaction. The sender's account script complexity is not included in that limit."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:965
msgid "Invoke Script Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
msgid "call.function"
msgstr ""

#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
msgid "Callable function name. Up to :math:`255` bytes (:math:`1` character can take up to :math:`4` bytes)."
msgstr ""

#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
msgid "call.args.type"
msgstr ""

#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
msgid "Argument type: 1) binary. 2) boolean. 3) integer. 4) string. 5) list."
msgstr ""

#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
msgid "call.args.value"
msgstr ""

#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
msgid "Argument value. 1) integer: from :math:`-9,223,372,036,854,775,808` to :math:`9,223,372,036,854,755,807` inclusive. 2) string or binary: up to :math:`32,767` bytes. Binary value should be base64 encoded. 3) list: up to :math:`1000` elements."
msgstr ""

#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "dApp"
msgstr ""

#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
msgid "dApp address base58 encoded or dApp alias with alias:<chain_id>: prefix, for example alias:T:merry (See :ref:`Chain ID <02_decentralchain/08_mainnet-testnet-stagenet:Chain ID>`)."
msgstr ""

#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
msgid "payment.amount"
msgstr ""

#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
msgid "Amount of token in payment: an integer value specified in atomic units."
msgstr ""

#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
msgid "payment.assetId"
msgstr ""

#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
msgid "ID of token in payment, base58 encoded. null means that the payment is in :ref:`DecentralCoin <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
msgid "stateChanges"
msgstr ""

#: ../../_static/02_decentralchain/tables/017_Invoke-Script-Transaction-JSON.csv:1
msgid "Script actions performed by the callable function and dApp-to-dApp invocation results."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:971
msgid "The stateChanges structure does not need to be filled when sending a transaction, and it is not stored on the blockchain. The node returns this structure when providing transaction data via the REST API."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:977
msgid "See the :ref:`invoke script transaction binary format <02_decentralchain/10_binary-format:Invoke Script Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:981
msgid "The :ref:`InvokeScriptTransaction structure <03_ride-language/05_structures:InvokeScriptTransaction>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:984
#: ../../02_decentralchain/03_transaction.rst:986
msgid "Network"
msgstr ""

#: ../../_static/02_decentralchain/tables/018_Network.csv:1
msgid "Leases :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../_static/02_decentralchain/tables/018_Network.csv:1
msgid "Cancels the leasing."
msgstr ""

#: ../../_static/02_decentralchain/tables/018_Network.csv:1
msgid "Configures sponsorship."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:993
msgid "Lease Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:995
msgid "Lease transaction leases :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` to another account. After :math:`1000` block the leased tokens are accounted for by the recipient's generating balance. The larger the generating balance of the node is, the higher the chances for that node to be selected to generate the next block. Commonly node owners share the reward for generated blocks with lessors. :ref:`More about leasing <02_decentralchain/05_node:Leased Proof of Stake>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:997
msgid "Leased tokens remain locked on the sender's account with the full control of their owner. The sender can cancel the lease at any time by the :ref:`lease cancel transaction <02_decentralchain/03_transaction:Lease Cancel Transaction>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1001
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for a lease transaction is :math:`0.001` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1028
msgid "Lease Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/019_Lease-Transaction-JSON.csv:1
msgid "Amount of :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` to lease."
msgstr ""

#: ../../_static/02_decentralchain/tables/019_Lease-Transaction-JSON.csv:1
msgid "Recipient address base58 encoded or recipient alias."
msgstr ""

#: ../../_static/02_decentralchain/tables/019_Lease-Transaction-JSON.csv:1
msgid "status"
msgstr ""

#: ../../_static/02_decentralchain/tables/019_Lease-Transaction-JSON.csv:1
msgid "Lease status: 1) active: lease is active. 2) canceled: lease is cancelled, see :ref:`lease cancel transaction <02_decentralchain/03_transaction:Lease Cancel Transaction>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1034
msgid "The status field does not need to be filled when sending a transaction, and it is not stored on the blockchain. The node calculates these fields when providing transaction data via the REST API."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1040
msgid "See the :ref:`lease transaction binary format <02_decentralchain/10_binary-format:Lease Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1044
msgid "The :ref:`LeaseTransaction structure <03_ride-language/05_structures:LeaseTransaction>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1047
msgid "Lease Cancel Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1049
msgid "Lease cancel transaction cancels the leasing. See the :ref:`lease transaction <02_decentralchain/03_transaction:Lease Transaction>` article."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1053
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for a lease cancel transaction is :math:`0.001` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1088
msgid "Lease Cancel Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/020_Lease-Cancel-Transaction-JSON.csv:1
msgid "leaseId"
msgstr ""

#: ../../_static/02_decentralchain/tables/020_Lease-Cancel-Transaction-JSON.csv:1
msgid "Lease transaction ID."
msgstr ""

#: ../../_static/02_decentralchain/tables/020_Lease-Cancel-Transaction-JSON.csv:1
msgid "lease"
msgstr ""

#: ../../_static/02_decentralchain/tables/020_Lease-Cancel-Transaction-JSON.csv:1
msgid "Parameters of canceled lease."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1094
msgid "The lease structure does not need to be filled when sending a transaction, and it is not stored on the blockchain. The node returns this structure when providing transaction data via the REST API."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1100
msgid "See the :ref:`lease cancel transaction binary format <02_decentralchain/10_binary-format:Lease Cancel Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1104
msgid "The :ref:`LeaseCancelTransaction structure <03_ride-language/05_structures:LeaseCancelTransaction>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1107
msgid "Sponsor Fee Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1109
msgid "Sponsor fee transaction enables or disables sponsorship. Sponsorship allows any user to pay a fee in the sponsored asset (instead of DecentralCoins) for invoke script transactions and transfer transactions. :ref:`More about sponsorship <02_decentralchain/03_transaction:Sponsored Fees>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1111
msgid "Only the asset issuer can set up sponsorship. Smart asset cannot be a sponsored asset."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1115
msgid "The :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` for the sponsor fee transaction is :math:`0.001` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1140
msgid "Sponsor Fee Transaction JSON Representation"
msgstr ""

#: ../../_static/02_decentralchain/tables/021_Sponsor-Fee-Transaction-JSON.csv:1
msgid "Amount of asset that is equivalent to :math:`0.001` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` (:math:`100,000` Decentralites): an integer value specified in the minimum fraction (“cents”) of asset. null – disable sponsorship."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1150
msgid "See the :ref:`sponsor fee transaction binary format <02_decentralchain/10_binary-format:Sponsor Fee Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1154
msgid "The :ref:`SponsorFeeTransaction structure <03_ride-language/05_structures:SponsorFeeTransaction>` is used for transaction handling in smart contracts."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1157
#: ../../02_decentralchain/03_transaction.rst:1159
msgid "Genesis"
msgstr ""

#: ../../_static/02_decentralchain/tables/022_Genesis.csv:1
msgid ":ref:`Genesis transaction <02_decentralchain/03_transaction:Genesis Transaction>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/022_Genesis.csv:1
msgid "Accrues :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` to an account upon the initial distribution during the creation of the blockchain."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1166
msgid "Genesis Transaction"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1168
msgid "Genesis transaction accrues :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` to account upon the initial distribution of DecentralCoins during the creation of the blockchain. The first block of the blockchain, the genesis block, consists of genesis transactions."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1172
msgid "See the :ref:`genesis transaction binary format <02_decentralchain/10_binary-format:Genesis Transaction Binary Format>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1175
msgid "Transaction Validation"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1177
msgid "A DecentralChain node validates each transaction in the following cases:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1179
msgid "The node receives the transaction via the broadcast endpoint of :ref:`Node extensions <documentation:placeholder>` or :ref:`gRPC server <documentation:placeholder>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1180
msgid "The node receives the transaction from another node of the blockchain network using the binary protocol."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1181
msgid "The block generator adds the transaction to a block."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1182
msgid "The node receives a block (or microblock) from another node in the network."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1184
msgid "Full transaction validation includes the following checks:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1186
msgid "Transaction fields check including:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1188
msgid "Timestamp check: the transaction timestamp should be not more than :math:`2` hours ago or :math:`1.5` hours ahead from the current block timestamp."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1189
msgid "Transaction version check: all the features required to support this version should be activated."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1190
msgid "Transaction type check: all the features required to support this type should be activated."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1191
msgid "Check of token amounts: the values must be non-negative."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1192
msgid "Check different fields depending on the transaction type."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1194
msgid "Sender's balance check."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1196
msgid "The sender should have enough funds to pay the fee. If a sponsored asset is used for the fee, the sponsor's balance is also checked."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1197
msgid "Depending on the type of transaction, the sender should have enough assets for transfer or for payments attached to the :ref:`invoke script transactions <02_decentralchain/03_transaction:Invoke Script Transaction>`. Order senders in the :ref:`exchange transaction <02_decentralchain/03_transaction:Exchange Transaction>` should have enough funds to exchange."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1199
msgid "The sender's signature verification"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1201
msgid "For ordinary accounts (without script)."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1202
msgid "For account script execution if the sender is a :ref:`smart account <02_decentralchain/01_account:dApp and Smart Account>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1203
msgid "For verifier function execution if the sender is :ref:`dApp <02_decentralchain/01_account:dApp and Smart Account>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1204
msgid "A similar check is performed for orders in an :ref:`exchange transaction <02_decentralchain/03_transaction:Exchange Transaction>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1206
#: ../../02_decentralchain/03_transaction.rst:1226
msgid "For the invoke script transaction:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1208
msgid "Calculation of the result of dApp callable function."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1209
msgid "dApp balance check: dApp account should have enough funds for :ref:`dApp script actions <03_ride-language/05_structures:Script Actions>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1210
msgid "Check that the transaction fee is not less than the :ref:`minimum fee <02_decentralchain/03_transaction:Minimum Fee>` based on script actions."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1212
msgid "Execution of asset scripts if the transaction uses :ref:`smart assets <02_decentralchain/02_token(asset):Smart Asset>`, including scripts of assets used in dApp script actions."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1214
msgid "When receiving the transaction via the broadcast endpoint, or adding a transaction to a block, or receiving a block over the network, the node performs full validation of the transaction. When receiving an invoke script transaction over the network, the node performs calculations of the callable function (check 4.1) up to the :ref:`threshold for saving unsuccessful transactions <03_ride-language/07_dapp-to-app-invocation:Limitations>`."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1217
msgid "Validation Result"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1219
msgid "When the transaction is received via broadcast or over the network:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1221
#: ../../02_decentralchain/03_transaction.rst:1241
msgid "If one of the checks fails, the transaction is discarded."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1222
msgid "If all the checks passed, the transaction is added to the UTX pool, which is the list of transactions waiting to be added to the block."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1224
msgid "When adding the transaction to the block, the result of validation depends on the transaction type."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1228
#: ../../02_decentralchain/03_transaction.rst:1235
msgid "If one of the checks 1–3 failed, the transaction is discarded."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1229
msgid "If checks 1–3 passed, and the calculation of the result of the dApp callable function (check 4.1) failed with an error or :ref:`throwing an exception <03_ride-language/01_syntax-basics:Exceptions>` before the :ref:`complexity <03_ride-language/07_dapp-to-app-invocation:Script Complexity>` of performed calculations exceeded the :ref:`threshold for saving failed transactions <03_ride-language/07_dapp-to-app-invocation:Limitations>`, the transaction is also discarded."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1230
msgid "If checks 1–3 passed but checks 4–5 failed and besides the result of the callable function is calculated successfully or the complexity exceeded the threshold, the transaction is saved on the blockchain but marked as failed: \"applicationStatus\": \"script_execution_failed\". The sender is charged the transaction fee. The transaction doesn't entail any other changes to the state of the blockchain."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1231
msgid "If all checks passed, the transaction is saved on the blockchain as successful: \"applicationStatus\": \"succeeded\" and the sender is charged the fee."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1233
msgid "For the exchange transaction:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1236
msgid "If checks 1–3 passed but check 5 failed, the transaction is saved on the blockchain but marked as failed: \"applicationStatus\": \"script_execution_failed\". The sender of the transaction (matcher) is charged the transaction fee. The transaction doesn't entail any other changes in balances, in particular, the order senders don't pay the matcher fee."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1237
msgid "If all checks passed, the transaction is saved on the blockchain as successful: \"applicationStatus\": \"succeeded\". The matcher is charged the transaction fee as well as the order senders are charged the matcher fee."
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1239
msgid "For the other transactions:"
msgstr ""

#: ../../02_decentralchain/03_transaction.rst:1242
msgid "If all checks passed, the transaction is saved on the blockchain as successful and the sender is charged the fee."
msgstr ""

#: ../../02_decentralchain/04_block.rst:3
msgid "Block"
msgstr ""

#: ../../02_decentralchain/04_block.rst:5
msgid "A block is a link in the chain of the blockchain. Block contains transactions. A block has its height."
msgstr ""

#: ../../02_decentralchain/04_block.rst:7
msgid "The maximum block size is :math:`1` MB. The maximum total complexity of scripts in transactions of the block is :math:`2,500,000`. The complexity of all executed scripts is taken into account: dApp scripts, account scripts, and asset scripts."
msgstr ""

#: ../../02_decentralchain/04_block.rst:10
msgid "Block Generation"
msgstr ""

#: ../../02_decentralchain/04_block.rst:12
msgid "A block generation is a creation of a new :ref:`block <02_decentralchain/04_block:Block>` on the blockchain. Blocks are generated by :ref:`generating nodes <02_decentralchain/05_node:Generating Node>` according to :ref:`FPoS algorithm <02_decentralchain/09_protocol:Fair Proof of Stake>` and the :ref:`DecentralChain-M5 protocol <02_decentralchain/09_protocol:DecentralChain-M5 Protocol>`. The block generator signs the block headers only. The block headers contain the merkle root hash of the block transactions. This makes it possible to verify the block headers apart from transactions and to provide evidence of the presence of transactions in the block without the presence of all transactions. See details in the :ref:`transactions root hash <02_decentralchain/04_block:Transactions Root Hash>` article."
msgstr ""

#: ../../02_decentralchain/04_block.rst:17
msgid "Base Target"
msgstr ""

#: ../../02_decentralchain/04_block.rst:19
msgid "The base target is the variable in the average block generation time formula that adjusts :ref:`block generation <02_decentralchain/04_block:Block Generation>` time to :math:`60` seconds."
msgstr ""

#: ../../02_decentralchain/04_block.rst:22
msgid "Generation Signature"
msgstr ""

#: ../../02_decentralchain/04_block.rst:24
msgid "Generation signature is the variable in the average block generation time formula. It is used to check whether the current :ref:`generating node <02_decentralchain/05_node:Generating Node>` is eligible to generate the next block. The generation signature is calculated using VRF (verifiable random function with short proofs and keys) — a pseudo-random function that uses a message and the private key of an account to provide a non-interactively verifiable proof for the correctness of its output."
msgstr ""

#: ../../02_decentralchain/04_block.rst:27
msgid "This improvement allows resisting stake grinding attacks aimed at influencing block generation randomness to skip miner's opportunity to create a block. The use of VRF makes signature generation unpredictable because of the need to know the private key for calculation. Only the holder of the private key can compute the hash, but verifying the correctness of the hash using the public key from block header is available to anyone."
msgstr ""

#: ../../02_decentralchain/04_block.rst:30
msgid "The VRF contains calculateVRF function, which calculates proof for some message, and verifyVRF function, which verifies proof from calculateVRF function with a message and the public key of the signer. Considering that a block’s generation signature is equal to calculateVRF output for a previous generation signature with account private key sk (of generator of :math:`i+1` th block):"
msgstr ""

#: ../../02_decentralchain/04_block.rst:37
msgid "The output of calculateVRF function is a VRF proof, which means that the validity of the signature can be checked. The output of function verifyVRF(pk :math:`_i`, generationSignature :math:`_i`) is used to define the time delay between :math:`i+99` and :math:`i+100` blocks for concrete block generator."
msgstr ""

#: ../../02_decentralchain/04_block.rst:41
msgid "Block Height"
msgstr ""

#: ../../02_decentralchain/04_block.rst:43
msgid "The block height is a sequence number of a :ref:`block <02_decentralchain/04_block:Block>` in the blockchain."
msgstr ""

#: ../../02_decentralchain/04_block.rst:46
msgid "Block Signature"
msgstr ""

#: ../../02_decentralchain/04_block.rst:48
msgid "A block signature is a hash that a :ref:`generating node <02_decentralchain/05_node:Generating Node>` acquires when it signs the :ref:`generated block <02_decentralchain/04_block:Block Generation>` with the private key of the account from the node's wallet."
msgstr ""

#: ../../02_decentralchain/04_block.rst:51
msgid "Block Timestamp"
msgstr ""

#: ../../02_decentralchain/04_block.rst:53
msgid "A block timestamp is a time of :ref:`block generation <02_decentralchain/04_block:Block Generation>`. The time is specified in milliseconds that have passed since the beginning of the unix epoch."
msgstr ""

#: ../../02_decentralchain/04_block.rst:55
msgid "When the :ref:`node <02_decentralchain/05_node:Node>` receives a new block from the blockchain network, it verifies that the timestamp value of the block does not outpace the UTC time by more than :math:`100` milliseconds. The timestamp value of the block is validated by nodes using the formula from FPoS."
msgstr ""

#: ../../02_decentralchain/04_block.rst:59
msgid "Genesis Block"
msgstr ""

#: ../../02_decentralchain/04_block.rst:61
msgid "A genesis block is the first :ref:`block <02_decentralchain/04_block:Block>` of the blockchain. A genesis block contains one or more :ref:`genesis transactions <02_decentralchain/03_transaction:Genesis Transaction>`. There is one genesis block in the blockchain."
msgstr ""

#: ../../02_decentralchain/04_block.rst:64
msgid "Transactions Root Hash"
msgstr ""

#: ../../02_decentralchain/04_block.rst:66
msgid "The transactionsRoot field in the block header contains the root hash of the Merkle tree of transactions of the block. The root hash is the proof that the block contains all the transactions in the proper order. The transactions root hash in the block header has the following purposes:"
msgstr ""

#: ../../02_decentralchain/04_block.rst:69
msgid "To prove the integrity of transactions in the block without presenting all transactions."
msgstr ""

#: ../../02_decentralchain/04_block.rst:70
msgid "To sign the block header only, separately from its transactions."
msgstr ""

#: ../../02_decentralchain/04_block.rst:73
msgid "transactions Root Сalculation"
msgstr ""

#: ../../02_decentralchain/04_block.rst:77
msgid "The hash of each transaction in the block is calculated. For example:"
msgstr ""

#: ../../02_decentralchain/04_block.rst:79
msgid ":math:`H_A` = hash(:math:`T_A`)"
msgstr ""

#: ../../02_decentralchain/04_block.rst:80
msgid ":math:`H_B` = hash(:math:`T_B`)"
msgstr ""

#: ../../02_decentralchain/04_block.rst:82
msgid "Each pair of adjacent hashes is concatenated, and the hash is calculated for each resulting concatenation:"
msgstr ""

#: ../../02_decentralchain/04_block.rst:84
msgid ":math:`H_{AB}` = hash(:math:`H_A` + :math:`H_B`)"
msgstr ""

#: ../../02_decentralchain/04_block.rst:85
msgid "If the last hash does not have a pair, it is concatenated with the zero byte hash: :math:`H_{GH}` = hash(:math:`H_G` + hash(0))"
msgstr ""

#: ../../02_decentralchain/04_block.rst:87
msgid "Step 2 is repeated until the root hash is obtained:"
msgstr ""

#: ../../02_decentralchain/04_block.rst:89
msgid ":math:`H_{ABCDEFGH}`"
msgstr ""

#: ../../02_decentralchain/04_block.rst:90
msgid "The root hash is written in the transactionsRoot field."
msgstr ""

#: ../../02_decentralchain/04_block.rst:92
msgid "If the block is empty, then transactionsRoot = hash(0). DecentralChain blockchain uses BLAKE2b-256 hashing function."
msgstr ""

#: ../../02_decentralchain/04_block.rst:95
msgid "Proof of Transaction in Block"
msgstr ""

#: ../../02_decentralchain/04_block.rst:97
msgid "Let's suppose that side :math:`1` stores the full blockchain data and side :math:`2` stores the block headers only. To prove that the block contains a given transaction, side :math:`1` provides the following data:"
msgstr ""

#: ../../02_decentralchain/04_block.rst:99
msgid "T: Transaction to check."
msgstr ""

#: ../../02_decentralchain/04_block.rst:100
msgid "merkleProofs: Array of sibling hashes of the Merkle tree, bottom-to-top."
msgstr ""

#: ../../02_decentralchain/04_block.rst:101
msgid "index: Index of the transaction in the block."
msgstr ""

#: ../../02_decentralchain/04_block.rst:105
msgid "For example, for the :math:`T_D` transaction:"
msgstr ""

#: ../../02_decentralchain/04_block.rst:107
msgid "merkleProofs = [ :math:`H_C`, :math:`H_{AB}`, :math:`H_{EFGH}` ]"
msgstr ""

#: ../../02_decentralchain/04_block.rst:108
msgid "index = :math:`3`"
msgstr ""

#: ../../02_decentralchain/04_block.rst:110
msgid "Side 2 checks the proof:"
msgstr ""

#: ../../02_decentralchain/04_block.rst:112
msgid "It calculates the hash of the transaction being checked (all the transaction data is hashed, including the signature): :math:`H_D` = hash(:math:`T_D`)"
msgstr ""

#: ../../02_decentralchain/04_block.rst:114
msgid "2. It concatenates the current hash with the corresponding hash of the merkleProofs array and calculates the hash of concatenation. index determines in which order to concatenate the hashes:"
msgstr ""

#: ../../02_decentralchain/04_block.rst:117
msgid "If the nth bit of index from the end is :math:`0`, then the order is: the current hash + the nth hash of the merkleProofsarray (proof hash is on the right)."
msgstr ""

#: ../../02_decentralchain/04_block.rst:118
msgid "If the nth bit is :math:`1` , the order is: the nth hash of the merkleProofsarray + the current hash (proof hash is on the left). For example, index = :math:`3_{10}` = :math:`11_2` , thus:"
msgstr ""

#: ../../02_decentralchain/04_block.rst:120
msgid "merkleProofs[0] = :math:`H_{C}` is on the left,"
msgstr ""

#: ../../02_decentralchain/04_block.rst:121
msgid "merkleProofs[1] = :math:`H_{AB}` is on the left,"
msgstr ""

#: ../../02_decentralchain/04_block.rst:122
msgid "merkleProofs[2] = :math:`H_{EFGH}` is on the right."
msgstr ""

#: ../../02_decentralchain/04_block.rst:124
msgid "It repeats step 2 until the root hash is obtained: :math:`H_{ABCDEFGH}`"
msgstr ""

#: ../../02_decentralchain/04_block.rst:126
msgid "It compares the root hash obtained with the already known transactionsRoot from the block header. If the hashes match, then the transaction exists in the block."
msgstr ""

#: ../../02_decentralchain/04_block.rst:129
#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:26
msgid "Tools"
msgstr ""

#: ../../02_decentralchain/04_block.rst:131
msgid "The following Node API methods accept transaction IDs and provide the proof that the transaction is in a block for each transaction:"
msgstr ""

#: ../../02_decentralchain/04_block.rst:133
msgid "GET /transactions/merkleProof"
msgstr ""

#: ../../02_decentralchain/04_block.rst:134
msgid "POST /transactions/merkleProof"
msgstr ""

#: ../../02_decentralchain/04_block.rst:136
msgid "The methods are described in the :ref:`transaction <02_decentralchain/03_transaction:Transaction>` article. You can check a transaction on the same blockchain without using a root hash, since the DecentralChain nodes store the entire blockchain data, including all transactions. Use the following built-in Ride function:"
msgstr ""

#: ../../02_decentralchain/04_block.rst:142
msgid "The function returns the block height if the transaction with the specified ID exists. Otherwise, it returns a unit. See the function description in the :ref:`blockchain functions <03_ride-language/03_functions:Blockchain Functions>` article. To check a transaction in a block on the external blockchain you can use the following built-in Ride function:"
msgstr ""

#: ../../02_decentralchain/04_block.rst:148
msgid "This function is applicable if the external blockchain uses the same algorithm for calculating the root hash of transactions. The createMerkleRoot function calculates the root hash from the transaction hash and sibling hashes of the merkle tree (see Steps 1–3). To check a transaction in a block, compare the calculated root hash with the transactionsRoot value in the block header."
msgstr ""

#: ../../02_decentralchain/05_node.rst:3
msgid "Node"
msgstr ""

#: ../../02_decentralchain/05_node.rst:5
msgid "A node is a host connected to the blockchain network. Node functions are:"
msgstr ""

#: ../../02_decentralchain/05_node.rst:7
msgid ":ref:`Block <02_decentralchain/04_block:Block>` storage."
msgstr ""

#: ../../02_decentralchain/05_node.rst:8
msgid ":ref:`Transaction validation <02_decentralchain/03_transaction:Transaction Validation>`."
msgstr ""

#: ../../02_decentralchain/05_node.rst:9
msgid "Sending :ref:`transactions <02_decentralchain/03_transaction:Transaction>`."
msgstr ""

#: ../../02_decentralchain/05_node.rst:12
msgid "Generating Node"
msgstr ""

#: ../../02_decentralchain/05_node.rst:14
msgid "Generating node is a node that generates blocks. Each generating node is a :ref:`validating node <02_decentralchain/05_node:Validating Node>`. Generating account is an :ref:`account <02_decentralchain/01_account:Account>` that a node uses for :ref:`signing <02_decentralchain/04_block:Block Signature>` generated blocks. A node can generate blocks if the following conditions are met:"
msgstr ""

#: ../../02_decentralchain/05_node.rst:16
msgid "The node's generating balance is at least :math:`10000` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`. This means that the account balance in DecentralCoins, taking into account leasing, was not less than :math:`10000` DecentralCoins in each of the last :math:`1000` blocks (more details in the :ref:`account balance <02_decentralchain/01_account:Account Balance>` article). The greater the generating balance, the higher is your chance of being eligible to generate the next block."
msgstr ""

#: ../../02_decentralchain/05_node.rst:17
msgid "Node's account is not a :ref:`smart account or dApp <02_decentralchain/01_account:dApp and Smart Account>`."
msgstr ""

#: ../../02_decentralchain/05_node.rst:18
msgid "Block generation is not disabled in node settings. By default, block generation is enabled."
msgstr ""

#: ../../02_decentralchain/05_node.rst:19
msgid "The node is connected to at least the number of peers specified in the required parameters (:math:`1` by default)."
msgstr ""

#: ../../02_decentralchain/05_node.rst:22
msgid "Validating Node"
msgstr ""

#: ../../02_decentralchain/05_node.rst:24
msgid "A validating node is a node that :ref:`validates <02_decentralchain/03_transaction:Transaction Validation>` transactions."
msgstr ""

#: ../../02_decentralchain/05_node.rst:27
msgid "Generator’s Income"
msgstr ""

#: ../../02_decentralchain/05_node.rst:29
msgid "A node's income from adding a new block to the blockchain consists of the following amounts:"
msgstr ""

#: ../../02_decentralchain/05_node.rst:31
msgid "Block reward: The current reward size is :math:`6` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` but it can be changed by voting, see the :ref:`block reward <02_decentralchain/05_node:Block Reward>` article."
msgstr ""

#: ../../02_decentralchain/05_node.rst:33
msgid ":math:`40\\%` of the total transaction fees in the current block. The exact value is calculated as follows:"
msgstr ""

#: ../../02_decentralchain/05_node.rst:35
msgid ":math:`\\sum_{i}^{} 2 * (\\frac{f_i}{5})`"
msgstr ""

#: ../../02_decentralchain/05_node.rst:36
msgid "Here f :math:`_i` is the fee for the :math:`i`-th transaction. For each transaction fee, an integer division by :math:`5` is performed, then a multiplication by :math:`2`, and finally they are summed up."
msgstr ""

#: ../../02_decentralchain/05_node.rst:38
msgid ":math:`60\\%` of the total transaction fees in the previous block."
msgstr ""

#: ../../02_decentralchain/05_node.rst:40
msgid ":math:`\\sum_{i}^{} (f_i - 2 * (\\frac{f_i}{5}))`"
msgstr ""

#: ../../02_decentralchain/05_node.rst:41
msgid "The block generator receives exactly the part of the fee that the previous block generator did not receive."
msgstr ""

#: ../../02_decentralchain/05_node.rst:43
msgid "If the :ref:`transaction fees <02_decentralchain/03_transaction:Transaction Fees>` are specified in a sponsored asset, then the block generators receive the fee equivalent in DecentralCoins instead of the fee (as a general rule, in a :math:`\\frac{40}{60}` ratio):"
msgstr ""

#: ../../02_decentralchain/05_node.rst:49
msgid "minSponsoredAssetFee is the amount of the sponsored asset equivalent to :math:`0.001` DecentralCoins. The sponsor sets this value when enabling sponsorship. For details, see the :ref:`sponsored fees <02_decentralchain/03_transaction:Sponsored Fees>` article."
msgstr ""

#: ../../02_decentralchain/05_node.rst:52
msgid "Block Reward"
msgstr ""

#: ../../02_decentralchain/05_node.rst:54
msgid "Block reward is a blockchain feature under which :ref:`generating nodes <02_decentralchain/05_node:Generating Node>` receive a fixed fee in :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` for each :ref:`generated block <02_decentralchain/04_block:Block Generation>`. Block rewards are paid due to the additional issue of the DecentralCoin token. The community of generating nodes can change the size of reward through voting."
msgstr ""

#: ../../02_decentralchain/05_node.rst:59
msgid "Current Reward Size"
msgstr ""

#: ../../02_decentralchain/05_node.rst:61
msgid "You can view the current reward size by making a request to the :ref:`Node REST API <documentation:placeholder>`. In response to the request, a JSON file is returned,  the value of the currentReward field of which is the current block reward size in Decentralites."
msgstr ""

#: ../../02_decentralchain/05_node.rst:63
msgid "Example of response:"
msgstr ""

#: ../../02_decentralchain/05_node.rst:83
msgid "In the example above, the value of the JSON's currentReward field is 600,000,000 Decentralites— i.e. it's 6 :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../02_decentralchain/05_node.rst:86
msgid "The Change of Block Reward Size Over Time"
msgstr ""

#: ../../02_decentralchain/05_node.rst:88
msgid "Every :math:`100,000` blocks, i.e. approximately every :math:`70` days, a new voting for the current reward size change begins among the generators. The voting duration is :math:`10,000` blocks. During this time, generating nodes vote to increase, decrease or leave the current reward size unchanged. The elected reward size remains unchanged for :math:`100,000` blocks following the end of voting."
msgstr ""

#: ../../02_decentralchain/05_node.rst:93
msgid "Voting"
msgstr ""

#: ../../02_decentralchain/05_node.rst:95
msgid "A generating node specifies the new desired reward size via settings in the node configuration file, the setting value is specified in Decentralites. If the value is greater than the current reward size, then the generator votes for the current reward size increase; if the value is smaller — for the decrease. If the setting value is not specified in the configuration file, then the generator votes for keeping the current reward size. When a node generates a block, it writes into that block the value of the desired reward size specified in the setting from its own node configuration file. If the setting value is not specified in the configuration file, then :math:`-1` is written to the block. During the voting time in :math:`10,000` blocks, a single node can generate several blocks, therefore one node can vote several times. How often a node generates blocks is determined by the LPoS consensus."
msgstr ""

#: ../../02_decentralchain/05_node.rst:100
msgid "How Votes are Counted"
msgstr ""

#: ../../02_decentralchain/05_node.rst:102
msgid "To count the votes, all :math:`10,000` blocks generated during the voting period are inspected. If either :math:`-1` or the value that is equal to the current reward size is recorded to the block, then the generator votes for keeping the current reward size. If the value recorded to the block is greater than the current reward size, then the generator votes for the current reward size increase; if the value is smaller — for the decrease. The block reward is increased/decreased only if more than half of the :math:`10,000` votes — i.e. :math:`5,001` votes or more — were given for increase/decrease. The amount of the current reward is increased/decreased by :math:`0.5` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../02_decentralchain/05_node.rst:109
msgid "At the blockchain height of :math:`2,000,000`, the block reward equals :math:`5` DecentralCoins. At the height of :math:`2,090,000`, another voting starts. During the :math:`10,000` blocks of voting :math:`6,000` votes were given for reward increase, :math:`1,000` — for decrease, :math:`3,000` — for keeping the current reward size. From the height of :math:`2`, :math:`100,000` to the height of :math:`2,199,999`, the new reward size will be :math:`5.5` DecentralCoins, because the reward change step is :math:`0.5` DecentralCoins. The next voting will take place from the height of :math:`2,190,000` to :math:`2,199,999`."
msgstr ""

#: ../../02_decentralchain/05_node.rst:116
msgid "At the blockchain height of :math:`2,100,000`, the block reward equals :math:`5.5` DecentralCoins. At the height of :math:`2,190,000`, another voting starts. During the :math:`10,000` blocks of voting :math:`4,500` votes were given for reward increase, :math:`4,000` — for decrease, :math:`1,500` — for keeping the current reward size. From the height of :math:`2,200,000` to the height of :math:`2,299,999`, the \"new\" reward size will be the same — :math:`5.5` DecentralCoins. Although the highest number of votes were given for the reward increase, it was not enough to change the current reward size. In order for the current reward size to be increased, at least :math:`5,001` votes must be given for the increase. The next voting will take place from the height of :math:`2,290,000` to :math:`2,299,999`."
msgstr ""

#: ../../02_decentralchain/05_node.rst:122
msgid "Leased Proof of Stake"
msgstr ""

#: ../../02_decentralchain/05_node.rst:124
msgid "Leased Proof of Stake (LPoS) is an enhanced type of proof of stake consensus algorithm by which the DecentralChain blockchain network aims to achieve the distributed consensus to secure the network."
msgstr ""

#: ../../02_decentralchain/05_node.rst:128
msgid "Leasing Benefits for the Node Owner"
msgstr ""

#: ../../02_decentralchain/05_node.rst:130
msgid ":ref:`Nodes <02_decentralchain/05_node:Node>` can use the leased tokens to generate blocks and get the :ref:`mining reward <02_decentralchain/05_node:Block Reward>`. For that purpose, the generating balance of a node must be at least :math:`10000` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../02_decentralchain/05_node.rst:133
msgid "Leasing Benefits for the Token Holder"
msgstr ""

#: ../../02_decentralchain/05_node.rst:135
msgid "LPoS allows the token holders to lease their tokens to the DecentralChain nodes and earn a percentage of the payout as a reward. By using LPoS, lessors will be able to participate in the process of generating new blocks because the larger the amount that is leased to a DecentralChain node, the higher the chances for that node to be selected to generate the next block. If that node is selected, then the leaser will receive a reward. When the user starts leasing the tokens, those leased tokens are locked and remain in the same address with the full control of their owner (they are not transferred to the node, they just remain unspendable until the lease is canceled by the lessor). The only thing to consider when leasing is to choose the right node operator, as the operator's node may work with different efficiency and send back different percentages as rewards."
msgstr ""

#: ../../02_decentralchain/05_node.rst:141
msgid "Rewards"
msgstr ""

#: ../../02_decentralchain/05_node.rst:143
msgid "The node owner may send the lessor a part of the rewards according to his conditions."
msgstr ""

#: ../../02_decentralchain/05_node.rst:144
msgid "The more transactions that are made on the network, the more rewards the lessors get."
msgstr ""

#: ../../02_decentralchain/05_node.rst:145
msgid "These rewards mostly are in :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` but also they can be in the form of different tokens with the unique DecentralCoins feature where different tokens can be accepted as a fee."
msgstr ""

#: ../../02_decentralchain/05_node.rst:148
msgid "LPoS Transactions"
msgstr ""

#: ../../02_decentralchain/05_node.rst:150
msgid "To start leasing, the token holder needs to create a lease transaction and specify the recipient address (node address) along with the amount of :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` to lease. There are two types of transactions which are used in the LPoS:"
msgstr ""

#: ../../02_decentralchain/05_node.rst:152
msgid ":ref:`Lease transaction <02_decentralchain/03_transaction:Lease Transaction>` to activate the leasing process."
msgstr ""

#: ../../02_decentralchain/05_node.rst:153
msgid ":ref:`Lease cancel transaction <02_decentralchain/03_transaction:Lease Cancel Transaction>` to deactivate the leasing process."
msgstr ""

#: ../../02_decentralchain/05_node.rst:156
msgid "Create a Lease"
msgstr ""

#: ../../02_decentralchain/05_node.rst:158
msgid "You can use `Decentral.Exchange <https://decentral.exchange/>`_ online to create a lease."
msgstr ""

#: ../../02_decentralchain/05_node.rst:160
msgid "Make sure you are logged into your account. On the main screen navigate to Wallet > Leasing."
msgstr ""

#: ../../02_decentralchain/05_node.rst:161
msgid "On the next screen click Start Lease and then select the recipient between the list of nodes and indicate the amount you want to lease."
msgstr ""

#: ../../02_decentralchain/05_node.rst:162
msgid "Verify all the information and click Start Lease again to confirm."
msgstr ""

#: ../../02_decentralchain/06_order.rst:3
msgid "Order"
msgstr ""

#: ../../02_decentralchain/06_order.rst:5
msgid "Order is the instruction from the :ref:`account <02_decentralchain/01_account:Account>` to matcher to buy or sell a :ref:`token <02_decentralchain/02_token(asset):Token (Asset)>` on the exchange."
msgstr ""

#: ../../02_decentralchain/06_order.rst:8
msgid "Asset Pair"
msgstr ""

#: ../../02_decentralchain/06_order.rst:10
msgid "Each order contains amount asset / price asset pair, also called asset pair."
msgstr ""

#: ../../02_decentralchain/06_order.rst:12
#: ../../02_decentralchain/09_protocol.rst:25
#: ../../02_decentralchain/09_protocol.rst:62
#: ../../02_decentralchain/09_protocol.rst:117
#: ../../02_decentralchain/09_protocol.rst:138
msgid ":strong:`Example`"
msgstr ""

#: ../../02_decentralchain/06_order.rst:21
msgid ":strong:`Asset Pair Fields`"
msgstr ""

#: ../../02_decentralchain/06_order.rst:23
msgid "Asset Pair Fields"
msgstr ""

#: ../../_static/02_decentralchain/tables/023_Asset-Pair-Fields.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "Field name"
msgstr ""

#: ../../_static/02_decentralchain/tables/023_Asset-Pair-Fields.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "amountAsset"
msgstr ""

#: ../../_static/02_decentralchain/tables/023_Asset-Pair-Fields.csv:1
msgid "ID of the pair's first asset, that the order's sender wants to buy or sell."
msgstr ""

#: ../../_static/02_decentralchain/tables/023_Asset-Pair-Fields.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "priceAsset"
msgstr ""

#: ../../_static/02_decentralchain/tables/023_Asset-Pair-Fields.csv:1
msgid "ID of the pair's second asset, in which the price of the order is expressed. null value means that asset is :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../02_decentralchain/06_order.rst:30
msgid "Order's Amount and Price"
msgstr ""

#: ../../02_decentralchain/06_order.rst:32
msgid "In the user interface, the amount and price are usually presented as values with a fractional part (for example, :math:`0.74585728` DecentralCoins), i.e. in the denormalized form. The denormalized form is convenient for humans, but not for calculations. To solve the problem of calculation accuracy, the normalization is performed."
msgstr ""

#: ../../02_decentralchain/06_order.rst:34
msgid "In the user interface, the amount and price are usually presented as values with a fractional part (for example, :math:`0.74585728` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`), i.e. in the denormalized form. The denormalized form is convenient for humans, but not for calculations. To solve the problem of calculation accuracy, the normalization is performed, i.e. amount and price are represented as an integer. So, :math:`0.74585728` DecentralCoins is :math:`0.74585728 × 10^{8}` or :math:`74585728` Decentralites. In this case, the exponent is :math:`8`, because DecentralCoins has :math:`8` decimals after the decimal point. Other assets may have different amount of decimals. For example, TDX has 2 decimals."
msgstr ""

#: ../../02_decentralchain/06_order.rst:37
#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
msgid "Amount"
msgstr ""

#: ../../02_decentralchain/06_order.rst:39
msgid "Consider buying :math:`2.13` TDX at the price of :math:`0.35016774` DecentralCoins for one TDX. Here the asset pair is TDX / DecentralCoins. The amount in the order is the number of units sold or bought in conventional \"pennies\". This value in the current case is :math:`213`, since :math:`2.13` TDX :math:`= 2.13 × 10^{2}` = 213` \"pennies\" of TDX. So, to bring the amount to the normalized form, it is multiplied by :math:`10^{amountAssetDecimals}`."
msgstr ""

#: ../../02_decentralchain/06_order.rst:42
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "Price"
msgstr ""

#: ../../02_decentralchain/06_order.rst:44
msgid "Price is the value of 1 unit of the amount asset, expressed in the price asset. In the TDX / DecentralCoins example above, this is the price in DecentralCoins for 1 TDX. To normalize price, it is multiplied by:"
msgstr ""

#: ../../02_decentralchain/06_order.rst:48
msgid "In orders of versions 1, 2, 3: :math:`10^{(8 + priceAssetDecimals - amountAssetDecimals)}`."
msgstr ""

#: ../../02_decentralchain/06_order.rst:49
msgid "In orders of version 4: at :math:`10^{8}`."
msgstr ""

#: ../../02_decentralchain/06_order.rst:51
msgid "The exponent of :math:`8` is selected because there cannot be an asset with the exceeding quantity of decimals on the DecentralChain blockchain. The matcher algorithm has a limitation in relation to price: the last N digits of the normalized price must be zeros (N is price_decimals minus amount_decimals). If this is not so, then the matcher rejects the order on placement."
msgstr ""

#: ../../02_decentralchain/06_order.rst:55
msgid "Price Asset Quantity Calculation"
msgstr ""

#: ../../02_decentralchain/06_order.rst:57
msgid "The quantity of price asset in normalized form which:"
msgstr ""

#: ../../02_decentralchain/06_order.rst:59
msgid "Will be given by sender if order is BUY."
msgstr ""

#: ../../02_decentralchain/06_order.rst:60
msgid "Will be acquired by sender if order is SELL."
msgstr ""

#: ../../02_decentralchain/06_order.rst:62
msgid "Is calculated by the following formula: amount × price × :math:`10^{(priceAssetDecimals - amountAssetDecimals - 8)}`."
msgstr ""

#: ../../02_decentralchain/06_order.rst:64
msgid "In orders of versions 1, 2, 3: amount × price × :math:`10^{-8}`"
msgstr ""

#: ../../02_decentralchain/06_order.rst:65
msgid "In orders of version 4: amount × price × :math:`10^{(priceAssetDecimals - amountAssetDecimals - 8)}`."
msgstr ""

#: ../../02_decentralchain/06_order.rst:67
msgid "If the result of the calculation is a value with a fractional part, then the fractional part is discarded. Designations in the above formula:"
msgstr ""

#: ../../02_decentralchain/06_order.rst:69
msgid "Amount — amount in normalized form."
msgstr ""

#: ../../02_decentralchain/06_order.rst:70
msgid "Price — price in normalized form."
msgstr ""

#: ../../02_decentralchain/06_order.rst:71
msgid "PriceAssetDecimals — the number of decimal places of the price asset."
msgstr ""

#: ../../02_decentralchain/06_order.rst:72
msgid "AmountAssetDecimals — the number of decimal places of the amount asset."
msgstr ""

#: ../../02_decentralchain/06_order.rst:75
msgid "Order Cancellation"
msgstr ""

#: ../../02_decentralchain/06_order.rst:77
msgid "The order sender may cancel the order before it is executed. Unexecuted orders are automatically canceled at the date and time specified by the order sender."
msgstr ""

#: ../../02_decentralchain/06_order.rst:80
msgid "Order Expiration Date"
msgstr ""

#: ../../02_decentralchain/06_order.rst:82
msgid "Order expiration date is the date and time of automatic cancellation of an unexecuted order. The date is specified in milliseconds which have passed since the beginning of the unix epoch. The expiration time can't be earlier than matcher time + :math:`1` minute and later than matcher time + :math:`30` days."
msgstr ""

#: ../../02_decentralchain/06_order.rst:86
msgid "Order Timestamp"
msgstr ""

#: ../../02_decentralchain/06_order.rst:88
msgid "Order timestamp is the time when the matcher added the order to the order book. The time is specified in milliseconds that have passed since the beginning of the unix epoch."
msgstr ""

#: ../../02_decentralchain/06_order.rst:91
#: ../../02_decentralchain/10_binary-format.rst:229
msgid "Order Binary Format"
msgstr ""

#: ../../02_decentralchain/06_order.rst:93
msgid "See the :ref:`order binary format <02_decentralchain/10_binary-format:Order Binary Format>` page."
msgstr ""

#: ../../02_decentralchain/07_oracle.rst:3
msgid "Oracle"
msgstr ""

#: ../../02_decentralchain/07_oracle.rst:5
msgid "Oracle is a data provider from the outside world on the blockchain."
msgstr ""

#: ../../02_decentralchain/07_oracle.rst:8
msgid "Sources of the Outside World"
msgstr ""

#: ../../02_decentralchain/07_oracle.rst:10
msgid "Software oracles handle data accessible on the web. For example, the temperature, costs of products and merchandise, flight or train delays, etc. The information originates from online sources, e.g. API. The product prophet extricates the required data and pushes it into the blockchain."
msgstr ""

#: ../../02_decentralchain/07_oracle.rst:12
msgid "Hardware oracles track real-world objects with devices and sensors. For example, a video camera with an analytics function virtual line crossing tracks vehicles entering a specific zone. If an event is detected, the oracle writes about it on the blockchain. Based on the data of such oracle, some script of decentralized application on the blockchain may be triggered. In this case, for example, a fine and the write-off of tokens from the account of the vehicle owner. But it is not in oracle scope, it is in the scope of the script that is based on the data of such an oracle."
msgstr ""

#: ../../02_decentralchain/07_oracle.rst:14
msgid "Human oracles imply that the data is entered by a human being."
msgstr ""

#: ../../02_decentralchain/07_oracle.rst:17
msgid "Oracles Issue"
msgstr ""

#: ../../02_decentralchain/07_oracle.rst:19
msgid "The oracle is a way of connecting the blockchain with the outside world. The major problem that is solved by the usage of oracles is the very point that blockchains can only access data that is stored on the blockchain. Here, in blockchain, the point is that it is important that decentralized applications can only access data that is stored on the blockchain so that every execution of the script leads to the same result at a given point in time. Therefore, decentralized applications are not able to access data from outside the blockchain, e.g., provided by web services or other external sources of data. Nevertheless, many interesting applications need access to the outside world, e.g., decentralized applications for insurances, decentralized betting systems, financial services and so forth."
msgstr ""

#: ../../02_decentralchain/07_oracle.rst:21
msgid "Here, the solution is quite straightforward: if external data is necessary for the execution of a decentralized application, this data needs to be stored on the blockchain. To achieve this, there are usually small programs implemented that access the necessary data and write it to the blockchain. Those little programs are called oracles."
msgstr ""

#: ../../02_decentralchain/07_oracle.rst:24
msgid "Consensus of Oracles"
msgstr ""

#: ../../02_decentralchain/07_oracle.rst:26
msgid "One source may be unsafe if it does not have the authority or high rating. However, several oracles can be used to stay away from the monopoly and be safer. For example, get information from ten oracles and only if the data of :math:`6` out of :math:`10` oracles coincide, to accept them. This is the consensus of the oracles."
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:3
msgid "Mainnet, Testnet, Stagenet"
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:6
msgid "Connecting Node to Blockchain Network"
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:8
msgid "You can launch your node in any blockchain network. Select the network in the node configuration file."
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:10
msgid "For more information about the configuration file, see the :ref:`node configuration <documentation:placeholder>` article."
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:11
msgid "For installing a node, see the :ref:`install DecentralChain node <documentation:placeholder>` article."
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:12
msgid "For starting your own blockchain network, see the :ref:`custom blockchain <documentation:placeholder>` article."
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:15
#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:19
#: ../../_static/02_decentralchain/tables/024_Chain-ID.csv:1
msgid "Chain ID"
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:17
#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:31
msgid "Chain ID is a symbol that is passed over a network during a handshake and allows nodes not to connect to the nodes of other networks. The chain ID is used while building account addresses, therefore, an address on one blockchain network cannot be used on another network. The chain ID is also indicated in transactions so it is impossible to move transactions between different blockchain networks."
msgstr ""

#: ../../_static/02_decentralchain/tables/024_Chain-ID.csv:1
msgid "Blockchain Network"
msgstr ""

#: ../../_static/02_decentralchain/tables/024_Chain-ID.csv:1
#: ../../_static/02_decentralchain/tables/025_API-of-Pool-of-Public-Nodes.csv:1
#: ../../_static/02_decentralchain/tables/026_Data-Service-API.csv:1
#: ../../_static/02_decentralchain/tables/027_Decentral.Exchange.csv:1
#: ../../_static/02_decentralchain/tables/028_API-of-Decentral.Exchange-Matcher.csv:1
#: ../../_static/02_decentralchain/tables/029_DecentralChain-Explorer.csv:1
#: ../../_static/02_decentralchain/tables/030_Faucet-Obtaining-Tokens.csv:1
msgid "Mainnet"
msgstr ""

#: ../../_static/02_decentralchain/tables/024_Chain-ID.csv:1
msgid "W or :math:`87` (ASCII code of W)."
msgstr ""

#: ../../_static/02_decentralchain/tables/024_Chain-ID.csv:1
#: ../../_static/02_decentralchain/tables/025_API-of-Pool-of-Public-Nodes.csv:1
#: ../../_static/02_decentralchain/tables/026_Data-Service-API.csv:1
#: ../../_static/02_decentralchain/tables/027_Decentral.Exchange.csv:1
#: ../../_static/02_decentralchain/tables/028_API-of-Decentral.Exchange-Matcher.csv:1
#: ../../_static/02_decentralchain/tables/029_DecentralChain-Explorer.csv:1
#: ../../_static/02_decentralchain/tables/030_Faucet-Obtaining-Tokens.csv:1
msgid "Testnet"
msgstr ""

#: ../../_static/02_decentralchain/tables/024_Chain-ID.csv:1
msgid "T or :math:`84` (ASCII code of T)."
msgstr ""

#: ../../_static/02_decentralchain/tables/024_Chain-ID.csv:1
#: ../../_static/02_decentralchain/tables/025_API-of-Pool-of-Public-Nodes.csv:1
#: ../../_static/02_decentralchain/tables/026_Data-Service-API.csv:1
#: ../../_static/02_decentralchain/tables/027_Decentral.Exchange.csv:1
#: ../../_static/02_decentralchain/tables/028_API-of-Decentral.Exchange-Matcher.csv:1
#: ../../_static/02_decentralchain/tables/029_DecentralChain-Explorer.csv:1
#: ../../_static/02_decentralchain/tables/030_Faucet-Obtaining-Tokens.csv:1
msgid "Stagenet"
msgstr ""

#: ../../_static/02_decentralchain/tables/024_Chain-ID.csv:1
msgid "S or :math:`83` (ASCII code of s)."
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:29
#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:33
msgid "API of Pool of Public Nodes"
msgstr ""

#: ../../_static/02_decentralchain/tables/025_API-of-Pool-of-Public-Nodes.csv:1
msgid "https://mainnet-node.decentralchain.io"
msgstr ""

#: ../../_static/02_decentralchain/tables/025_API-of-Pool-of-Public-Nodes.csv:1
msgid "https://testnet-node.decentralchain.io"
msgstr ""

#: ../../_static/02_decentralchain/tables/025_API-of-Pool-of-Public-Nodes.csv:1
#: ../../_static/02_decentralchain/tables/026_Data-Service-API.csv:1
#: ../../_static/02_decentralchain/tables/027_Decentral.Exchange.csv:1
#: ../../_static/02_decentralchain/tables/028_API-of-Decentral.Exchange-Matcher.csv:1
#: ../../_static/02_decentralchain/tables/030_Faucet-Obtaining-Tokens.csv:1
msgid "TBA"
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:40
#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:42
msgid "Data Service API"
msgstr ""

#: ../../_static/02_decentralchain/tables/026_Data-Service-API.csv:1
msgid "https://data-service.decentralchain.io"
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:49
#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:53
msgid "Decentral.Exchange"
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:51
msgid "`Decentral.Exchange <https://decentral.exchange/>`_ is a decentralized exchange."
msgstr ""

#: ../../_static/02_decentralchain/tables/027_Decentral.Exchange.csv:1
msgid "https://decentral.exchange/"
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:60
#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:64
msgid "API of Decentral.Exchange Matcher"
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:62
msgid "The addresses for order sending and market data obtaining are as follows:"
msgstr ""

#: ../../_static/02_decentralchain/tables/028_API-of-Decentral.Exchange-Matcher.csv:1
msgid "https://mainnet-matcher.decentralchain.io/api-docs/index.html"
msgstr ""

#: ../../_static/02_decentralchain/tables/028_API-of-Decentral.Exchange-Matcher.csv:1
msgid "https://matcher.decentralchain.io/api-docs/index.html"
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:71
#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:75
msgid "DecentralChain Explorer"
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:73
msgid "`DecentralChain Explorer <https://decentralscan.com/>`_ is a service for browsing blockchain data."
msgstr ""

#: ../../_static/02_decentralchain/tables/029_DecentralChain-Explorer.csv:1
msgid "Go to http://decentralscan.com/ and click the three lines, then switch to Mainnet."
msgstr ""

#: ../../_static/02_decentralchain/tables/029_DecentralChain-Explorer.csv:1
msgid "Go to http://decentralscan.com/ and click the three lines, then switch to Testnet."
msgstr ""

#: ../../_static/02_decentralchain/tables/029_DecentralChain-Explorer.csv:1
msgid "Go to http://decentralscan.com/ and click the three lines, then switch to Stagenet."
msgstr ""

#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:82
#: ../../02_decentralchain/08_mainnet-testnet-stagenet.rst:84
msgid "Faucet: Obtaining Tokens"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:3
msgid "Protocol"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:6
msgid "Cryptographic Practical Details"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:11
msgid "This section describes all the details of cryptographic algorithms which are used to:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:13
msgid "Create private and public keys from seed."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:14
msgid "Create addresses from public keys."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:15
msgid "Create blocks and transactions signing."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:17
msgid "We use Blake2b256 and Keccak256 algorithms (in the form of hash chain) to create cryptographic hashes. And Curve25519 (ED25519 with X25519 keys) to create and verify signatures. Base58 to create the string form of bytes."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:21
msgid "Bytes Encoding Base58"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:23
msgid "All arrays of bytes in the project are encoded by Base58 algorithm with Bitcoin alphabet to make it ease human readable (text readability)."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:27
msgid "The string teststring is coded into the bytes :math:`[5, 83, 9, -20, 82, -65, 120, -11]`. The bytes :math:`[1, 2, 3, 4, 5]` are coded into the string 7bWpTW."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:30
msgid "Creating a Private Key From a Seed"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:32
msgid "A seed string is a representation of entropy, from which you can re-create deterministically all the private keys for one wallet. It should be long enough so that the probability of selection is an unrealistic negligible. In fact, seed should be an array of bytes but for ease of memorization lite wallet uses Brainwallet, to ensure that the seed is made up of words and easy to write down or remember. The application takes the UTF-8 bytes of the string and uses them to create keys and addresses. For example,"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:40
msgid "After reading this string as UTF-8 bytes and encoding them to Base58, the string will be coded as:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:46
msgid "A seed string is involved with the creation of private keys. To create a private key using the official web wallet or the node, to :math:`4` bytes of int 'nonce' field (big-endian representation), which initially has a value of :math:`0` and increases every time you create the new address, should be prepended to seed bytes. Then we use this array of bytes to calculate hash keccak256(blake2b256(bytes)). This resulting array of bytes we call account seed, from it you can definitely generate one private and public key pair. Then this bytes hash passed in the method of creating a pair of public and private key of Curve25519 algorithm. DecentralChain uses Curve25519-ED25519 signature with X25519 keys (montgomery form), but most embedded cryptography devices and libraries don't support X25519 keys. There are libraries with conversion functions from:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:50
msgid "ED25519 keys to X25519 (Curve25519) crypto_sign_ed25519_pk_to_curve25519(curve25519_pk, ed25519_pk) for public key."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:51
msgid "Crypto_sign_ed25519_sk_to_curve25519(curve25519_sk, ed25519_skpk) for private key."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:53
msgid "NOTE: Not all random :math:`32` bytes can be used as private keys (but any bytes of any size can be a seed). The signature scheme for the ED25519 introduces restrictions on the keys, so create the keys only through the methods of the Curve25519 libraries and be sure to make a test of the ability to sign data with a private key and then check it with a public key, however obvious this test might seem. There are valid Curve25519 realizations for different languages:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:56
msgid "`Java <https://github.com/signalapp/curve25519-java/>`_"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:57
msgid "`C <https://github.com/signalapp/curve25519-java/tree/master/android/jni>`_"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:58
msgid "`Python <https://github.com/tgalal/python-axolotl-curve25519>`_"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:60
msgid "Also some Curve25519 libraries (as the one used in our project) have the Sha256 hashing integrated, some not (such as most of c/c++/python libraries), so you may need to apply it manually. Note that the private key is clamped, so not any random :math:`32` bytes can be a valid private key."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:64
msgid "Brainwallet seed string"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:70
msgid "As UTF-8 bytes encoded"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:76
msgid "Account seed bytes with nonce :math:`0` before apply hash function in Base58"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:82
msgid "blake2b256(account seed bytes)"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:88
msgid "Account seed ( keccak256(blake2b256(account seed bytes)))"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:94
msgid "Account seed after Sha256 hashing (optional, if your library does not do it yourself)"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:100
msgid "Created private key"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:106
msgid "Created public key"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:113
msgid "Creating Address from a Public Key"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:115
msgid "Our network address obtained from the public key depends on the byte chainID ('T' for Testnet, 'W' for Mainnet, 'S' for Stagenet), so different networks obtained a different address for a single seed (and hence public keys)."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:119
msgid "For the public key:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:125
msgid "Created public key:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:132
msgid "Signing"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:134
msgid "Curve25519 is used for all the signatures in the project. The process is as follows: create the special bytes for signing for transaction or block, then create a signature using these bytes and the private key bytes. For the validation of signatures it’s enough with signature bytes, signed object bytes and the public key. Do not forget that there are many valid (not unique!) signatures for a one array of bytes (block or transaction). Also you should not assume that the ID of the block or transaction is unique. The collision can occur one day! They have already taken place for some weak keys."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:140
msgid "Transaction Data:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:142
msgid "Transaction Data"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Value"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
msgid "Sender address (not used, just for information)"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
msgid "3N9Q2sdkkhAnbR4XCveuRaSMLiVtvebZ3wp"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
msgid "Private key (used for signing, not in tx data)"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
msgid "7VLYNhmuvAo5Us4mNGxWpzhMSdSSdEbEPFUDKSnA6eBv"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
msgid "Public key"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "EENPV1mRhUD9gSKbcWt84cqnfSGQP5LkCu5gMBfAanYH"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
msgid "Recipient address"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "3NBVqYXrapgJP9atQccdBPAgJPwHDKkh6A8"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
msgid "Asset id"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "BG39cCNUFWPQYeyLnu7tjKHaiUGRxYwJjvntt9gdDPxG"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "Fee"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
msgid "Fee asset id"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "Timestamp"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`1479287120875`"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
msgid "Attachment (as byte array)"
msgstr ""

#: ../../_static/02_decentralchain/tables/031_Signing-Transaction-Data.csv:1
msgid ":math:`1[1, 2, 3, 4]`"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:148
msgid "Bytes:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:150
#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "Bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "#"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "Type"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "Position"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "Length"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "Base58 bytes value"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "Transaction type (0x04)"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid ":ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
msgid ":math:`0`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid ":math:`2`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "Sender's public key"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":math:`32`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "..."
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "Amount's asset flag (0-DecentralCoins, 1-Asset)"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`33`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "Amount's asset ID (*if used)"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`34`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`0 (32*)`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "Fee's asset flag (0-DecentralCoins, 1-Asset)"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`34 (66*)`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "Fee's asset ID (**if used)"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`35 (67*)`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`0 (32**)`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":ref:`Long <02_decentralchain/09_protocol:Blockchain Data Types>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`35 (67\\_ ) (99*\\_ )`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "11frnYASv"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`43 (75\\_ ) (107*\\_ )`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`11111112`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`51 (83\\_ ) (115*\\_ )`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "\":math:`8`\""
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "Recipient's address"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`59  (91\\_ ) (123*\\_ )`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
msgid ":math:`26`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "Attachment's length (N)"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
msgid ":ref:`Short<02_decentralchain/09_protocol:Blockchain Data Types>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`85 (117\\_ ) (149*\\_ )`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "Attachment's bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`87 (119\\_ ) (151*\\_ )`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
msgid "N"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid ":math:`[1,2,3,4]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/032_Signing-Bytes.csv:1
msgid "2VfUX"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:156
msgid "Total data bytes for sign"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:162
msgid "Signature of transaction data bytes (one of an infinite number of valid signatures)"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:168
msgid "Total transaction bytes with signature:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:175
msgid "Calculating Transaction ID"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:177
msgid "Transaction ID is not stored in the transaction bytes and for most transactions (except Payment) it can be easily calculated from the special bytes for signing using blake2b256(bytes_for_signing). For payments, the transaction ID is just the signature of this transaction."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:180
msgid "DecentralChain-M5 Solution"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:183
msgid "Reasoning"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:185
msgid "The maximum rate of transactions in blockchain systems is limited by the choice of two parameters: block size and block interval."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:187
msgid "The block interval defines the average amount of time that passes between the creation of two blocks. If we reduce this time, forks will appear more frequently, which will lead to either non-resolved forks or to decreased throughput since a considerable amount of time would be spent on resolving these forks. Larger blocks lead to huge network usage spikes during block propagation, which in turn will lead to throughput problems and huge forks."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:191
msgid "DecentralChain-M5 Solution With Technical Details"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:193
msgid "DecentralChain addresses this issue by allowing the miner to continuously farm a block during the time of mining. This continuously increasing block is called liquid block, which becomes immutable when the next block referencing it is built and appended. A liquid block consists of a key block and chain of microblocks. The process of creating liquid block goes as follows:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:195
msgid "When a miner node observes it has the right to create a block, it creates and sends keyBlock, which is regularly just an empty block."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:196
msgid "After that, it creates and sends microblocks every :math:`3` seconds. Microblock is very similar to a regular block: it's a non-empty pack of transactions, which references its parent: previous microblock or key block."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:197
msgid "Microblocks are continuously mined and propagated to the network until a new key block, referencing the current liquid block appears."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:200
#: ../../02_decentralchain/09_protocol.rst:214
msgid "Microblock Structure"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:210
msgid "totalResBlockSigis the new total signature of a block with all transactions from blockId=prevResBlockSigand owntransactionData. This means that having a_liquid block_consisting of 1_keyblock_and 3_microblock_s: KEYBLOCK() <-MICRO1(tx1,tx2) <-MICRO2(tx3,tx4) <-MICRO3(tx5,tx6) We have 4 versions of last block:"
msgstr ""

#: ../../_static/02_decentralchain/tables/033_Microblock-Structure.csv:1
msgid "ID"
msgstr ""

#: ../../_static/02_decentralchain/tables/033_Microblock-Structure.csv:1
msgid "Transactions"
msgstr ""

#: ../../_static/02_decentralchain/tables/033_Microblock-Structure.csv:1
msgid "KEYBLOCK.uniqueId"
msgstr ""

#: ../../_static/02_decentralchain/tables/033_Microblock-Structure.csv:1
msgid "MICRO1.totalResBlockSig"
msgstr ""

#: ../../_static/02_decentralchain/tables/033_Microblock-Structure.csv:1
msgid "tx1,tx2"
msgstr ""

#: ../../_static/02_decentralchain/tables/033_Microblock-Structure.csv:1
msgid "MICRO2.totalResBlockSig"
msgstr ""

#: ../../_static/02_decentralchain/tables/033_Microblock-Structure.csv:1
msgid "tx1,tx2,tx3,tx4"
msgstr ""

#: ../../_static/02_decentralchain/tables/033_Microblock-Structure.csv:1
msgid "MICRO3.totalResBlockSig"
msgstr ""

#: ../../_static/02_decentralchain/tables/033_Microblock-Structure.csv:1
msgid "tx1,tx2,tx3,tx4,tx5,tx6"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:220
msgid "Next miner can reference any of these ids in its keyBlock."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:223
msgid "Economy"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:225
msgid "For a miner, it might seem a good idea to reference KEYBLOCK from previous example and pack all txs from microblocks to its own (micro)block(s). In order to make 'stealing' transactions less profitable than referencing the best-known version of liquid block(= the last known microblock), we change the mechanics of fees: After activating M5, miner will receive :math:`40\\%` of fees from the block it creates and  :math:`60\\%` of fees from the block he references."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:228
msgid "Related Protocol Changes"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:230
msgid "A block can contain up to :math:`65535` transactions and doesn't require transaction sorting."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:231
msgid "By default miners will first create an empty key block. It's a regular block, propagated byBlockForgedmessage, but it now gets broadcasted if it's empty."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:232
msgid "Microblocks are propagated by broadcasting its header for every node which applied it (MicroBlockInv)MicroBlockInv contains a verifiable signature to prevent a node from being flooded. Microblock will be requested afterward via MicroBlockRequestand received back withinMicroBlockResponse.Microblocks will be re-requested from another node which has it if a node doesn't respond."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:235
msgid "Configuration"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:236
msgid "The following miner parameters can be tuned(though it's best not to change them in order to maximize final version of your liquid block in the resulting blockchain):"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:238
msgid "KeyBlock size (maxTransactionsInKeyBlock, default = :math:`0`). If changed, it won't be rebroadcasted and the usual extension requesting mechanics will be used."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:239
msgid "Microblock mining interval (microBlockInterval, default = :math:`3` s)."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:240
msgid "Max amount of transactions per microblock (maxTransactionsInMicroBlock, default = :math:`200`)."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:241
msgid "Miner will try to reference the best-known microblock with at leastminMicroBlockAgeage(default = :math:`3` s). This is required in order for a miner to reference already-propagated block so its key block doesn't get orphaned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:242
msgid "Microblock synchronization mechanism can be tuned with waitResponseTimeout(default = :math:`2` s), processedMicroBlocksCacheTimeout(default = :math:`10` s),invCacheTimeout(default = :math:`10` s) which are basically time of awaiting a microblock and times to cache a processed microblock ids and a list of nodes which have a microblock(by id)."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:245
msgid "API changes"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:247
msgid "Upon applying every microblock, the last block gets changed, which means/blocks/lastand/blocks/at/...will reflect that."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:248
msgid "/peers/blacklistednow expose ban reason, one can clear a node's blacklist via/peers/clearblacklist"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:249
msgid "/debug/and/consensus/section are expanded, _stateHash _doesn't take _liquid block _into consideration."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:252
msgid "DecentralChain-M5 Protocol"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:255
msgid "Scalability Limits and Challenges in Current Blockchain Systems"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:258
msgid "Problem Statement and Motivation"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:260
msgid "Blockchains protocols have some scalability limits and challenges that tradeoff between throughput and latency. The current blockchain technology is not fast enough and does not scale to include more transactions into the system so we have a performance challenge to be considered. There is a united agreement between miners, consumers, and developers with several perspectives that we need to deploy scalability measures, and there has been an ongoing argument on how to improve Bitcoin’s scalability. Current proposals have focused on how big to make the blocks and how to handle the block size increases in the future."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:263
msgid "All proposals suffer from a major scalability bottleneck: No matter what block size is chosen, the blockchain system can at best reach a proper transaction throughput, increasing from ~ :math:`3` transactions per second to ~ :math:`7` transactions per second. This is so far from the :math:`30,000` transactions per second which are necessary to compete with the existing systems such as VISA transactions. The same major limitations apply to litecoin, Ethereum, and all other currencies that share Bitcoin’s blockchain protocol."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:266
msgid "DecentralChain-M5 will address the scalability bottleneck by making the network reach the highest throughput depending on the network conditions. It will not only enhance the transaction throughput, it will also reduce transaction latencies. So it will be possible to get an initial transaction confirmation in seconds rather than in minutes."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:269
msgid "Weaknesses of Current Proposals to Improve Scalability"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:271
msgid "Blockchain Systems can process transactions and the maximum rate of these transactions is limited by the choice of two parameters: block size and block interval."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:273
msgid "The block interval defines the average amount of time that passes between the creation of two blocks. By deciding to reduce the block interval to solve the latency limit, the system will have less security (increase forks probability) due to the reason of new miners for every second which will lead to instability where the blockchain is subject to reorganization and the system is in disagreement (Figure 1). If we reduce the time per block, then we will have a situation where a significant number of blocks are solved in less time than it takes to relay a solved block throughout the network. So there will be no way to know which block is the \"real\" one and which one is a \"fork\" because the transactions that appeared to have multiple confirmations suddenly have fewer confirmations (or possibly go back to being unconfirmed)."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:277
msgid "Figure 1: Increasing block frequency with static block size will result in less security."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:279
msgid "The throughput of a system is bounded by the maximum block size (given a fixed block interval), as the maximum number of included transactions is directly dependent on the block size."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:280
msgid "Larger blocks do however cause slower propagation speeds, which causes more discarded blocks (orphaning risk). An unlimited blocksize could, for example, result in a DoS attack on the system by creating a block that takes a long time to validate. If the choice is to Increase block size in order to improve throughput, there will be Network spikes with longer time to propagate in the network (Figure 2)."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:284
msgid "Figure 2: Increasing block size with Static block frequency will lead to more discarded blocks and network spikes."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:287
msgid "Brief Summary of Bitcoin-M5"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:289
msgid "It is a next-generation blockchain protocol which is an alternative bitcoin scaling solution that does not involve increasing the size of blocks or decreasing the block time interval. This reduces the risk of forks amongst other advantages. Bitcoin-M5 describes that the basic tradeoffs in Bitcoin can be reduced with an alternative blockchain protocol, offering a consensus delay and bandwidth limited only by the Network Plane. The protocol splits time into time periods(epoch). In each time period, a particular leader is responsible for serializing transactions (Figure 3). The leaders take the rule of generating blocks:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:291
msgid "Key blocks for the election of a leader."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:292
msgid "Micro blocks for ledger records."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:296
msgid "Figure 3: Bitcoin-M5 time periods structure with serializing transactions."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:299
msgid "DecentralChain-M5 Overlay"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:301
msgid "DecentralChain-M5 is based on the bitcoin next generation protocol that serializes transactions and offers important improvements in the transaction latency(lower latency) and bandwidth(higher throughput) in comparison to Bitcoin without sacrificing other properties. DecentralChain approaches this scalability matter by providing the miner with the ability to farm a block during the time of mining in a continuous approach. This block continues increments called liquid blocks. This liquid block is unchangeable over time once the next block referencing is created and appended. This approach increases effective bandwidth and speed of block creation, which is described as being “especially significant for businesses” using the DecentralChain-M5 protocol since it allows for conducting micro-transactions - without any delays that are typical with traditional blockchain systems. Furthermore, it allows the blockchain to withstand high loads, such as distribution of tokens following crowdsales and airdrops of bonus tokens. The speed of processing trading transactions on the exchange gets increased as well."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:307
msgid "DecentralChain-M5 Operations"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:309
msgid "The main and core idea of DecentralChain-M5 is to split the Liquid block into two types, Key blocks and Micro blocks. The process of creating liquid block works as follows:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:311
msgid "The miner node gets the permission to create a block."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:312
msgid "The miner node creates and sends the key block (which does not contain transactions)."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:313
msgid "The miner node creates and sends the micro blocks (which contain transactions just as in normal blocks with a reference to previous micro blocks or key blocks) with a mining time interval of three seconds."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:314
msgid "Miners will mine those micro blocks and propagate them directly to the network until the next new key block appears with a reference to the liquid block."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:316
msgid "All of the transactions are part of the same block and are contributed all together. In between blocks, the traditional Bitcoin system appears idle to an onlooker, as miners are working to discover the next block, but without apparent progress on the consensus front. In contradiction, in DecentralChain-M5, the key-blocks can be small because they need to contain only the coinbase transaction, which defines the public key that the miner will be using to sign microblocks. Because a key-block requires proof of stake, miners can not just produce one and expropriate the leadership at will. Following the key-block, the lead miner can quickly issue microblocks, simply by signing them with the private key corresponding to the public key named in the key-block’s coinbase (Figure 4)."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:323
msgid "Figure 4: Key-blocks and Micro-blocks signing process."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:325
msgid ":strong:`Leader Blocks`"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:327
msgid "They’re also called \"Key Blocks\", these blocks are generated with proof of stake but do not contain transactions. They serve as a leader election mechanism and contain a public key that identifies the chosen leader. Each block has a header that contains, among other fields, the unique reference of its predecessor which is a cryptographic hash of the predecessor header (either a key block or a microblock)."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:331
msgid ":strong:`Micro Blocks`"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:333
msgid "Once a node generates a key block it becomes the leader. As a leader, the node is allowed to generate microblocks at a set rate smaller than a predefined maximum. These micro blocks will contain the ledger entries with no requirement for any Proof of Stake and they're generated by the elected leader in every block-generation cycle. This block-generation cycle is initiated by a leader block. The only requirement is to sign the micro blocks with the elected leader's private key. The micro blocks can be generated at a very high speed by the elected leader(miner), thus resulting in increased performance and transaction speed."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:339
msgid "For a microblock to be valid, all its entries must be valid according to the specification of the state machine, and the signature has to be valid. Figure 5 illustrates the structure. Note that microblocks do not affect the weight of the chain, as they do not contain proof of stake. When all micro blocks have been validated, they will be merged with their key block into one block."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:344
msgid "DecentralChain-M5 Reward Mechanisms"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:346
msgid "Remuneration consists of two parts. First, each key block entitles its generator a set amount. Second, each ledger entry carries a fee. This fee is split by the leader that places this entry in a microblock and the subsequent leader that generates the next key block."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:349
msgid "In order to motivate participants to follow the protocol, DecentralChain-M5 uses the following mechanisms: Each transaction pays a fee to the system, but unlike Bitcoin, this fee is distributed, with :math:`40\\%` to the leader, and :math:`60\\%` to the subsequent leader. Finally, if a leader forks the chain by generating two microblocks with the same parent, it is punished by revoking the subsidy revenue; whoever detects the fraud wins a nominal fee, (Figure 5)."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:355
msgid "Figure 5: chain structure of the DecentralChain-M5 Protocol. Microblocks (circles) are signed with the private key matching with the public key in the last key block (squares). The fee is distributed  :math:`40\\%` to the leader and :math:`60\\%` to the next one."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:357
msgid "In practice, the remuneration is implemented by having each key block contain a single coinbase transaction that mints new coins and deposits the funds to the current and previous leaders. As in Bitcoin, this transaction can only be spent after a maturity period of :math:`100` key blocks, to avoid non-mergeable transactions following a fork."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:361
msgid "Fair Proof of Stake"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:363
msgid "In this model, the choice of account that has the right to generate the next block and receive the corresponding transaction fees is based on the number of tokens in the account. The more tokens that are held in the account, the greater the chance that account will earn the right to generate a block."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:365
msgid "In DecentralChain, we are convinced that each participant in the blockchain should participate in the block generation process proportionally to his stake: we have decided to correct the PoS formula. At the moment we do not have the goal of completely changing the algorithm, since there is no need; we simply want to make some adjustments. We presented an improved PoS algorithm that makes the choice of block creator fair and reduces vulnerability to the multi-branching attacks, in accordance with the shortcomings of the current algorithm."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:368
msgid "We analyzed the model of the new algorithm for its correspondence to the stake share and the share of blocks, and the results were positive. Also, the algorithm was analyzed for vulnerability to attacks, and results obtained with the new model were better than with the old one. The attacks’ results for the attacker were not so successful in terms of the profits gained. The number of forks and their length decreased."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:371
#: ../../02_decentralchain/09_protocol.rst:375
msgid "Blockchain Data Types"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:373
msgid "The blockchain data types are the data types that are used to describe 02_decentralchain of blockchain entities. Here’s a list of blockchain data types:"
msgstr ""

#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
msgid "Keyword"
msgstr ""

#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
msgid "Possible values"
msgstr ""

#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
msgid "Variable size in bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
msgid ":math:`0` and :math:`1`."
msgstr ""

#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
msgid "Integer from :math:`-128` to :math:`127` inclusive."
msgstr ""

#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":ref:`Int <02_decentralchain/09_protocol:Blockchain Data Types>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
msgid "Integer from :math:`-2,147,483,648` to :math:`2,147,483,647` inclusive."
msgstr ""

#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
msgid "Integer from :math:`-9,223,372,036,854,775,808` to :math:`9,223,372,036,854,775,807` inclusive."
msgstr ""

#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
msgid "Integer from :math:`-32,768` to :math:`32,767` inclusive."
msgstr ""

#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
msgid ":ref:`String<02_decentralchain/09_protocol:Blockchain Data Types>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
msgid "From :math:`0` to :math:`2,147,483,647` characters inclusive."
msgstr ""

#: ../../_static/02_decentralchain/tables/034_Blockchain-Data-Types.csv:1
msgid "From :math:`1` to :math:`4` bytes per character."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:382
msgid "Validation Rules"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:385
msgid "Account Validation"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:387
msgid "Account is valid then it is a valid Base58 string and the length of the corresponding array is :math:`26` bytes. Version of address (1st byte) is equal to :math:`1`. The network byte (2nd byte) is equal to network ID. The checksum of address (last :math:`4` bytes) is correct."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:390
msgid "Transactions Validation"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:393
msgid "Transfer Transaction Validation"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:395
msgid "Transfer transaction is valid then:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:397
msgid "Recipient address is valid. If not, InvalidAddress validation result will be returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:398
msgid "Size of attachment is less than or equals MaxAttachementSize(:math:`140` bytes). In other case TooBigArray validation result will be returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:399
msgid "Transaction's amount is more than :math:`0`, otherwise NegativeAmount validation result is returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:400
msgid "Transaction's fee is positive, otherwise InsufficientFee validation result is returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:401
msgid "Adding fee to amount does not lead to Long overflow. In case of Long overflow OverflowError validation result will be returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:402
#: ../../02_decentralchain/09_protocol.rst:415
#: ../../02_decentralchain/09_protocol.rst:425
msgid "Transaction's signature is valid, otherwise InvalidSignature validation result is returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:405
msgid "Issue Transaction Validation"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:407
msgid "Issue transaction is valid then:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:409
msgid "Sender's address is valid. If not, InvalidAddress validation result will be returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:410
msgid "Quantity of asset is positive, otherwise NegativeAmount validation result is returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:411
msgid "Transaction's fee is more than or equals MinFee(:math:`100000000` Decentralites = :math:`1` DecentralCoin), in other case InsufficientFee validation result is returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:412
msgid "Size of description is less than or equals MaxDescriptionLength(:math:`1000` bytes), otherwise TooBigArray is returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:413
msgid "Size of name is more than or equals MinAssetNameLength and less or equals MaxAssetNameLength, in other case InvalidName validation result will be returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:414
msgid "Decimals is positive and less than or equals MaxDecimals, in other case TooBigArray is returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:418
msgid "Reissue Transaction Validation"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:420
msgid "Reissue transaction is valid then:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:422
msgid "Sender's account is valid. Otherwise InvalidAddress validation result is returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:423
msgid "Quantity is positive, in other case NegativeAmount validation result will be returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:424
msgid "Transaction's fee is positive, in other case InsufficientFee result will be returned."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:428
msgid "Block Validations"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:430
msgid "Block is valid then:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:432
msgid "Block chain contains referenced blocks."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:433
msgid "Block's signature is valid."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:434
msgid "Block's consensus data is valid."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:435
msgid "Block's transactions are valid."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:438
msgid "Consensus Data Validation"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:440
msgid "Block's consensus data is valid then:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:442
msgid "Block creation time is no more than MaxTimeDrift(:math:`15` seconds) in future."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:443
msgid "Block's transactions are sorted. This rule works only after :math:`1477958400000` on Testnet and :math:`1479168000000` on Mainnet."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:444
msgid "Block chain contains parent block or block chain height is equal :math:`1`."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:445
msgid "Block's base target is valid."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:446
msgid "Block's generator signature is valid."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:447
msgid "Generator's balance is more than or equals MinimalEffectiveBalanceForGeneration(:math:`1000000000000` Decentralites). This rule always works on Testnet and works only after :math:`1479168000000` on Mainnet."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:448
msgid "Block's hit is less than calculated block's target."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:449
msgid "Voted features are sorted in ascending order and are not repeated."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:452
msgid "Transactions Data Validation"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:454
msgid "Block's transactions are valid then:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:456
msgid "Creation time of every transaction in block is less than block's creation time no more than on MaxTxAndBlockDiff(:math:`2` hours)."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:457
msgid "All transactions are valid against state."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:459
msgid "Transaction validation against state. Transactions are valid then:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:461
#: ../../02_decentralchain/09_protocol.rst:473
msgid "Transaction is valid by transaction validation rules."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:462
msgid "Transaction creation time more than block's creation time no more than on MaxTimeForUnconfirmed(:math:`90` minutes). This limitation works always on Testnet and only after :math:`1479168000000` on Mainnet."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:463
msgid "Application of transaction to accounts should not lead to temporary negative balance. This rule works after :math:`1479168000000` on Mainnet and after :math:`1477958400000` on Testnet."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:464
msgid "Changes made by transaction should be sorted by their amount. This rule works on both Mainnet and Testnet after :math:`1479416400000`."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:465
msgid "Application of transaction's amount to current balance should not lead to Long overflow."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:466
msgid "After application of all block's transactions affected balances should not be negative."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:469
msgid "Unconfirmed Transactions Pool Validation"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:471
msgid "Transaction could be inserted in unconfirmed transactions pool then:"
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:474
msgid "If transaction's fee is more than or equals minimum fee that was set by the owner of a node."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:475
msgid "There is a space for a new transaction if unconfirmed transactions pool. By default the pool is limited by :math:`1000` transactions."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:476
msgid "unconfirmed transactions pool does not contain transaction with the same ID."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:477
msgid "Transaction created not later than MaxTimeForUncofimed(:math:`90` minutes) after the last block was created."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:478
msgid "Transaction creation time is no more than MaxTimeDrift(:math:`15` seconds) in future."
msgstr ""

#: ../../02_decentralchain/09_protocol.rst:479
msgid "Transaction is valid against state."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:5
msgid ":ref:`Address binary format <02_decentralchain/10_binary-format:Address Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:6
msgid ":ref:`Alias binary format <02_decentralchain/10_binary-format:Alias Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:7
msgid ":ref:`Block binary format <02_decentralchain/10_binary-format:Block Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:8
msgid ":ref:`Network message binary format <02_decentralchain/10_binary-format:Network Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:10
#: ../../02_decentralchain/10_binary-format.rst:119
msgid ":ref:`Block message binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:11
#: ../../02_decentralchain/10_binary-format.rst:120
msgid ":ref:`Checkpoint message binary format <02_decentralchain/10_binary-format:Checkpoint Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:12
#: ../../02_decentralchain/10_binary-format.rst:121
msgid ":ref:`Get block message binary format <02_decentralchain/10_binary-format:Get Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:13
#: ../../02_decentralchain/10_binary-format.rst:122
msgid ":ref:`Get peers message binary format <02_decentralchain/10_binary-format:Get Peers Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:14
#: ../../02_decentralchain/10_binary-format.rst:123
msgid ":ref:`Get signatures message binary format <02_decentralchain/10_binary-format:Get Signatures Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:15
#: ../../02_decentralchain/10_binary-format.rst:124
msgid ":ref:`Handshake message binary format <02_decentralchain/10_binary-format:Handshake Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:16
#: ../../02_decentralchain/10_binary-format.rst:125
msgid ":ref:`Peers message binary format <02_decentralchain/10_binary-format:Peers Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:17
#: ../../02_decentralchain/10_binary-format.rst:126
msgid ":ref:`Score message binary format <02_decentralchain/10_binary-format:Score Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:18
#: ../../02_decentralchain/10_binary-format.rst:127
msgid ":ref:`Signatures message binary format <02_decentralchain/10_binary-format:Signatures Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:19
#: ../../02_decentralchain/10_binary-format.rst:128
msgid ":ref:`Transaction message binary format <02_decentralchain/10_binary-format:Transaction Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:21
msgid ":ref:`Order binary format <02_decentralchain/10_binary-format:Order Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:22
msgid ":ref:`Transaction binary format <02_decentralchain/10_binary-format:Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:24
msgid ":ref:`Burn transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:25
msgid ":ref:`Create alias transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:26
msgid ":ref:`Data transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:27
msgid ":ref:`Exchange transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:28
msgid ":ref:`Genesis transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:29
msgid ":ref:`Invoke script transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:30
msgid ":ref:`Issue transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:31
msgid ":ref:`Lease cancel transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:32
msgid ":ref:`Lease transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:33
msgid ":ref:`Mass transfer transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:34
msgid ":ref:`Reissue transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:35
msgid ":ref:`Set asset script transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:36
msgid ":ref:`Set script transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:37
msgid ":ref:`Sponsor fee transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:38
msgid ":ref:`Transfer transaction binary format <02_decentralchain/10_binary-format:Block Message Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:40
msgid ":ref:`Transaction proofs binary format <02_decentralchain/10_binary-format:Transaction Proofs Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:43
#: ../../02_decentralchain/10_binary-format.rst:47
msgid "Address Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:45
msgid "Learn more about :ref:`address <02_decentralchain/01_account:Address>`."
msgstr ""

#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
msgid "Field order number"
msgstr ""

#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Field type"
msgstr ""

#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Field size in bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid "Comments"
msgstr ""

#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
msgid "Entity type"
msgstr ""

#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
msgid "Value must be :math:`1`."
msgstr ""

#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`87` — for Mainnet. :math:`84` — for Testnet. :math:`83` — for Stagenet."
msgstr ""

#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
msgid "Account public key hash"
msgstr ""

#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
msgid ":math:`20`"
msgstr ""

#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
msgid "First :math:`20` bytes of the result of the Keccak256 (Blake2b256 (publicKey)) hashing function. Here publicKey is the array of bytes of the account public key."
msgstr ""

#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
msgid "Checksum"
msgstr ""

#: ../../_static/02_decentralchain/tables/035_Address-Binary-Format.csv:1
msgid "First :math:`4` bytes of the result of the Keccak256 (Blake2b256 (data)) hashing function. Here data is the array of bytes of three fields put together: 1) Entity type. 2) Chain ID. 3) Account public key hash."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:54
#: ../../02_decentralchain/10_binary-format.rst:58
msgid "Alias Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:56
msgid "Learn more about :ref:`alias <02_decentralchain/01_account:Alias>`."
msgstr ""

#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "Value must be :math:`2`."
msgstr ""

#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
msgid "Number of characters in the alias"
msgstr ""

#: ../../_static/02_decentralchain/tables/036_Alias-Binary-Format.csv:1
msgid "From :math:`4` to :math:`30`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:65
msgid "Block Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:67
msgid "Learn more about :ref:`block <02_decentralchain/04_block:Block>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:69
msgid "Blocks are stored on the blockchain in a binary format (byte representation). :ref:`Node extensions <documentation:placeholder>` such as :ref:`gRPC server <documentation:placeholder>` can work directly with data in binary format."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:71
msgid ":strong:`Version 5`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:94
msgid "Block Binary Format Version 5"
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
msgid "chain_id"
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "reference"
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "BLAKE2b-256 hash of the previous block header."
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "base_target"
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid ":ref:`Base target <02_decentralchain/04_block:Base Target>`: а variable that is used in the block generation algorithm."
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "generation_signature"
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "\":ref:`Generation signature <02_decentralchain/04_block:Block Generation>`: а variable that is used in the block generation algorithm (:math:`32` bytes).\""
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "feature_votes"
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "List of features for which the block generator votes. See the :ref:`features <documentation:placeholder>`."
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid ":ref:`Block timestamp <02_decentralchain/04_block:Block Timestamp>`: Unix time in milliseconds."
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "Block version: :math:`5`."
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "generator"
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "Block generator's account public key (:math:`32` bytes)."
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "reward_vote"
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid ":ref:`Block generation reward <02_decentralchain/05_node:Block Reward>` for which the block generator votes. :math:`-1` means that block generator votes for the current reward size."
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "transactions_root"
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid ":ref:`Transactions Root Hash <02_decentralchain/04_block:Transactions Root Hash>` (:math:`32` bytes)."
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "signature"
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid ":ref:`Block header signature <02_decentralchain/04_block:Block Signature>` (:math:`64` bytes)."
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "transactions"
msgstr ""

#: ../../_static/02_decentralchain/tables/037_Block-Binary-Format-V5.csv:1
msgid "For each transaction: 1) Body bytes: up to :math:`165,487` bytes. 2) Proofs: up to :math:`531` bytes. See the :ref:`transaction binary format <02_decentralchain/10_binary-format:Transaction Binary Format>` article for details."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:100
#: ../../02_decentralchain/10_binary-format.rst:237
msgid ":strong:`Version 4`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:102
msgid "Block Binary Format Version 4"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid "Block version"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid "The value must be :math:`4`."
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid ":ref:`Block timestamp <02_decentralchain/04_block:Block Timestamp>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid "Unix time in milliseconds."
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid ":ref:`Signature <02_decentralchain/04_block:Block Signature>` of the previous block"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`]"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid ":math:`64`"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid ":ref:`Base target <02_decentralchain/04_block:Base Target>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid ":ref:`Generation signature <02_decentralchain/04_block:Block Generation>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid "Number of transactions in the block"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid ":ref:`Integer <02_decentralchain/09_protocol:Blockchain Data Types>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
msgid ":math:`7.1`"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid "Transaction 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid "Body bytes: up to :math:`165,996` bytes. Proofs: up to :math:`531` bytes."
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid "Bytes of the 1st transaction in binary format."
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
msgid ":math:`7.2`"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid "Transaction 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid "Bytes of the 2nd transaction in binary format."
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid ":math:`7.[N]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid "Transaction N"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid "Bytes of the Nth transaction in binary format."
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
msgid "Number of features for which the block generator votes"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
msgid ":math:`9.1`"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
msgid "Feature 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid ":ref:`Short <02_decentralchain/09_protocol:Blockchain Data Types>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
msgid ":math:`9.[M]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
msgid "Feature M"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
msgid ":ref:`Block generation reward <02_decentralchain/05_node:Block Reward>` for which the block generator votes"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
msgid ":math:`-1` means that block generator votes for the current reward size."
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid "Block generator’s account public key"
msgstr ""

#: ../../_static/02_decentralchain/tables/038_Block-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/039_Block-Binary-Format-V3.csv:1
msgid ":ref:`Block signature <02_decentralchain/04_block:Block Signature>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:108
#: ../../02_decentralchain/10_binary-format.rst:277
#: ../../02_decentralchain/10_binary-format.rst:437
#: ../../02_decentralchain/10_binary-format.rst:503
#: ../../02_decentralchain/10_binary-format.rst:658
#: ../../02_decentralchain/10_binary-format.rst:853
#: ../../02_decentralchain/10_binary-format.rst:924
#: ../../02_decentralchain/10_binary-format.rst:995
#: ../../02_decentralchain/10_binary-format.rst:1139
#: ../../02_decentralchain/10_binary-format.rst:1365
msgid ":strong:`Version 3`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:110
msgid "Block Binary Format Version 3"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:117
msgid "Network Message Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:131
#: ../../02_decentralchain/10_binary-format.rst:135
msgid "Block Message Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:133
msgid "Block message is a reply to GetBlock message."
msgstr ""

#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "Length in Bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
msgid "Packet length (BigEndian)"
msgstr ""

#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
msgid "Magic Bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
msgid "Content ID (0x17)"
msgstr ""

#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
msgid "Payload length"
msgstr ""

#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
msgid "Payload checksum"
msgstr ""

#: ../../_static/02_decentralchain/tables/040_Block-Message-Binary-Format.csv:1
msgid "Block bytes (N)"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:142
#: ../../02_decentralchain/10_binary-format.rst:144
msgid "Checkpoint Message Binary Format"
msgstr ""

#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
msgid "Content ID (0x64)"
msgstr ""

#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
msgid "Checkpoint items count (N)"
msgstr ""

#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
msgid "Checkpoint #1 height"
msgstr ""

#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
msgid "Checkpoint #1 signature"
msgstr ""

#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
msgid ":math:`6 + 2 * N - 1`"
msgstr ""

#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
msgid "Checkpoint #N height"
msgstr ""

#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
msgid ":math:`6 + 2 * N`"
msgstr ""

#: ../../_static/02_decentralchain/tables/041_Checkpoint-Message-Binary-Format.csv:1
msgid "Checkpoint #N signature"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:151
#: ../../02_decentralchain/10_binary-format.rst:153
msgid "Get Block Message Binary Format"
msgstr ""

#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
msgid "Content ID (0x16)"
msgstr ""

#: ../../_static/02_decentralchain/tables/042_Get-Block-Message-Binary-Format.csv:1
msgid "Block ID"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:160
#: ../../02_decentralchain/10_binary-format.rst:164
msgid "Get Peers Message Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:162
msgid "Get peers message is sent when one sending node wants to know about other nodes on the network."
msgstr ""

#: ../../_static/02_decentralchain/tables/043_Get-Peers-Message-Binary-Format.csv:1
msgid "Content ID (0x01)"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:171
#: ../../02_decentralchain/10_binary-format.rst:173
msgid "Get Signatures Message Binary Format"
msgstr ""

#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
msgid "Content ID (0x14)"
msgstr ""

#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
msgid "Block IDs count (N)"
msgstr ""

#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
msgid "Block #1 ID"
msgstr ""

#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
msgid ":math:`6 + N`"
msgstr ""

#: ../../_static/02_decentralchain/tables/044_Get-Signatures-Message-Binary-Format.csv:1
msgid "Block #N ID"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:180
#: ../../02_decentralchain/10_binary-format.rst:184
msgid "Handshake Message Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:182
msgid "Handshake is used to start communication between two nodes."
msgstr ""

#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
msgid "Application name length (N)"
msgstr ""

#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
msgid "Application name (UTF-8 encoded bytes)"
msgstr ""

#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
msgid "Application version major"
msgstr ""

#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
msgid "Application version minor"
msgstr ""

#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
msgid "Application version patch"
msgstr ""

#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
msgid "Node name length (M)"
msgstr ""

#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
msgid "Node name (UTF-8 encoded bytes)"
msgstr ""

#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
msgid "M"
msgstr ""

#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
msgid "Node nonce"
msgstr ""

#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
msgid "Declared address length (K) or :math:`0` if no declared address was set"
msgstr ""

#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
msgid "Declared address bytes (if length is not :math:`0`)"
msgstr ""

#: ../../_static/02_decentralchain/tables/045_Handshake-Message-Binary-Format.csv:1
msgid "K"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:191
#: ../../02_decentralchain/10_binary-format.rst:195
msgid "Peers Message Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:193
msgid "Peers message is a response to get peers message."
msgstr ""

#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
msgid "Content ID (0x02)"
msgstr ""

#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
msgid "Peers count (N)"
msgstr ""

#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
msgid "Peer #1 IP address"
msgstr ""

#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
msgid "Peer #1 port"
msgstr ""

#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
msgid "Peer #N IP address"
msgstr ""

#: ../../_static/02_decentralchain/tables/046_Peers-Message-Binary-Format.csv:1
msgid "Peer #N port"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:202
#: ../../02_decentralchain/10_binary-format.rst:204
msgid "Score Message Binary Format"
msgstr ""

#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
msgid "Content ID (0x18)"
msgstr ""

#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
msgid "Score (N bytes)"
msgstr ""

#: ../../_static/02_decentralchain/tables/047_Score-Message-Binary-Format.csv:1
msgid ":math:`N`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:211
#: ../../02_decentralchain/10_binary-format.rst:213
msgid "Signatures Message Binary Format"
msgstr ""

#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
msgid "Content ID (0x15)"
msgstr ""

#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
msgid "Block signatures count (N)"
msgstr ""

#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
msgid "Block #1 signature"
msgstr ""

#: ../../_static/02_decentralchain/tables/048_Signatures-Message-Binary-Format.csv:1
msgid "Block #N signature"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:220
#: ../../02_decentralchain/10_binary-format.rst:222
msgid "Transaction Message Binary Format"
msgstr ""

#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
msgid "Content ID (0x19)"
msgstr ""

#: ../../_static/02_decentralchain/tables/049_Transaction-Message-Binary-Format.csv:1
msgid "Transaction (N bytes)"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:231
msgid "Learn more about :ref:`order <02_decentralchain/06_order:Order>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:233
msgid "An exchange transaction of version 3 can accept orders of versions 1–4."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:234
msgid "An exchange transaction of version 2 can accept orders of versions 1–3."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:235
msgid "An exchange transaction of version 1 can accept orders of version 1 only."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:271
msgid "Order Binary Format Version 4"
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/056_Burn-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/059_Create-Alias-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/062_Data-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/064_Exchange-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/073_Lease-Cancel-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/076_Lease-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/081_Reissue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/084_Set-Asset-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/086_Set-Script-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/088_Sponsor-Fee-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/093_Update-Asset-Info-Transaction-Binary-Format-V1.csv:1
msgid "Size"
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/081_Reissue-Transaction-Binary-Format-V3.csv:1
msgid ":math:`1` byte"
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
msgid "sender_public_key"
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/056_Burn-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/073_Lease-Cancel-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/081_Reissue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/084_Set-Asset-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/088_Sponsor-Fee-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/093_Update-Asset-Info-Transaction-Binary-Format-V1.csv:1
msgid ":math:`32` bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "Public key of the order sender."
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "matcher_public_key"
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "Public key of matcher."
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "asset_pair.amount_asset_id"
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid ":math:`32` bytes for asset. :math:`0` for DecentralCoins."
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "ID of the amount asset."
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "asset_pair.price_asset_id"
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "ID of the price asset."
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "order_side"
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "Order type: buy or sell."
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/056_Burn-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/064_Exchange-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/076_Lease-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/081_Reissue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/088_Sponsor-Fee-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
msgid ":math:`8` bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "Amount of the amount asset, specified in the minimum fraction (“cent”) of asset."
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "Price for the amount asset nominated in the price asset, multiplied by :math:`108`."
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "Order timestamp: Unix time in milliseconds."
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "expiration"
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "Unix time in milliseconds when the order will be expired."
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "matcher_fee.asset_id"
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "Matcher fee token ID."
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "matcher_fee.amount"
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "Matcher fee"
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "Order version: 4."
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "Each proof up to :math:`64`  bytes, up to :math:`8` proofs."
msgstr ""

#: ../../_static/02_decentralchain/tables/050_Order-Binary-Format-V4.csv:1
msgid "Order proofs that are used to check the validity of the order."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:279
msgid "Order Binary Format Version 3"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "JSON field name"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Length in bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid ":ref:`Order <02_decentralchain/06_order:Order>` binary format version number"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Must be :math:`3`."
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Order sender public key"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Matcher public key"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "matcherPublicKey"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid ":math:`4.1`"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Asset B (amount asset) flag"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "If token is DecentralCoins, then value is :math:`0`, else :math:`1`."
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid ":math:`4.2`"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Asset B (amount Asset) ID"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "S"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "If token is not DecentralCoins, then :math:`S = 32`, else the field should be absent."
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":math:`5.1`"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Asset A (price asset) flag"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":math:`5.2`"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Asset A (price asset) ID"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Order type"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "orderType"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "If order is for buying, then value is :math:`0`, if order is for selling, then value is  :math:`1`."
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Amount of asset B (amount asset), which the order sender offers for one price asset(asset A)"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Bytes in big-endian notation."
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid ":math:`8``"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Amount of asset B (price asset), which the order sender wants to buy or send depending on order type"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Amount of milliseconds from the beginning of Unix epoch till the moment of validation of order by matcher"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Amount of milliseconds from the beginning of Unix epoch till the unfulfilled order cancellation"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "matcherFee"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Matcher fee token flag"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "If token is DecentralCoins, then value is :math:`0`, else :math:`1`"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Matcher fee token"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "matcherFeeAssetId"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "F"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "If token is not DecentralCoins, then :math:`F = 32`, else the field should be absent."
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
msgid "Proofs"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "Array[Proof]"
msgstr ""

#: ../../_static/02_decentralchain/tables/051_Order-Binary-Format-V3.csv:1
msgid "If the array is empty, then :math:`S = 3`. If the array is not empty, then :math:`S = 3 + 2 × N + (P_{1} + P_{2} + ... + P_{n})`, where :math:`N` is amount of proofs in the array, :math:`P_{n}` — size N-th proof in bytes. Maximum amount of proofs in the array is :math:`8`. Maximum length of each proof is :math:`64` bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:285
msgid "JSON Representation of Order Version 3"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:310
#: ../../02_decentralchain/10_binary-format.rst:456
#: ../../02_decentralchain/10_binary-format.rst:517
#: ../../02_decentralchain/10_binary-format.rst:562
#: ../../02_decentralchain/10_binary-format.rst:678
#: ../../02_decentralchain/10_binary-format.rst:755
#: ../../02_decentralchain/10_binary-format.rst:872
#: ../../02_decentralchain/10_binary-format.rst:938
#: ../../02_decentralchain/10_binary-format.rst:1017
#: ../../02_decentralchain/10_binary-format.rst:1064
#: ../../02_decentralchain/10_binary-format.rst:1159
#: ../../02_decentralchain/10_binary-format.rst:1208
#: ../../02_decentralchain/10_binary-format.rst:1262
#: ../../02_decentralchain/10_binary-format.rst:1310
#: ../../02_decentralchain/10_binary-format.rst:1392
msgid ":strong:`Version 2`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:312
msgid "Order Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
msgid "Version"
msgstr ""

#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
msgid ":ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>` (constant, value = :math:`2`)"
msgstr ""

#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "PublicKey (Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`])"
msgstr ""

#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "Matcher's public key"
msgstr ""

#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "Amount asset flag (:math:`1` - asset, :math:`0` - DecentralCoins)"
msgstr ""

#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "Amount asset"
msgstr ""

#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "AssetId (ByteStr = Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`])"
msgstr ""

#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid ":math:`32` or :math:`0` (depends on the byte in 4.1)."
msgstr ""

#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
msgid "Price asset flag (:math:`1` - asset, :math:`1` - DecentralCoins)"
msgstr ""

#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "Price asset"
msgstr ""

#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
msgid ":math:`32` or :math:`0` (depends on the byte in 5.1)."
msgstr ""

#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "Order type (:math:`0` - Buy, :math:`1` - Sell)"
msgstr ""

#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "Expiration"
msgstr ""

#: ../../_static/02_decentralchain/tables/052_Order-Binary-Format-V2.csv:1
msgid "Matcher's fee"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:318
#: ../../02_decentralchain/10_binary-format.rst:488
#: ../../02_decentralchain/10_binary-format.rst:547
#: ../../02_decentralchain/10_binary-format.rst:643
#: ../../02_decentralchain/10_binary-format.rst:712
#: ../../02_decentralchain/10_binary-format.rst:838
#: ../../02_decentralchain/10_binary-format.rst:909
#: ../../02_decentralchain/10_binary-format.rst:980
#: ../../02_decentralchain/10_binary-format.rst:1049
#: ../../02_decentralchain/10_binary-format.rst:1124
#: ../../02_decentralchain/10_binary-format.rst:1193
#: ../../02_decentralchain/10_binary-format.rst:1247
#: ../../02_decentralchain/10_binary-format.rst:1297
#: ../../02_decentralchain/10_binary-format.rst:1350
#: ../../02_decentralchain/10_binary-format.rst:1424
#: ../../02_decentralchain/10_binary-format.rst:1437
msgid ":strong:`Version 1`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:320
msgid "Order Binary Format Version 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid ":math:`3.1`"
msgstr ""

#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid ":math:`3.2`"
msgstr ""

#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid ":math:`32` or :math:`0` (depends on the byte in 3.1)."
msgstr ""

#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/054_Order-Binary-Format-V1-Bytes.csv:1
msgid "Price asset flag (:math:`1` - asset, :math:`0` - DecentralCoins)"
msgstr ""

#: ../../_static/02_decentralchain/tables/053_Order-Binary-Format-V1.csv:1
msgid "Signature"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:326
msgid "The price listed for amount asset in price asset :math:`* 10^8`. Expiration is order time to live, timestamp in future, max :math:`= 30` days in future. The signature is calculated from the following bytes:"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:328
msgid "Order Binary Format Version 1 Bytes"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:335
#: ../../02_decentralchain/10_binary-format.rst:407
msgid "Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:337
msgid "Learn more about :ref:`transaction <02_decentralchain/03_transaction:Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:339
msgid "Transactions are stored on the blockchain in a binary format (byte representation). :ref:`Node extensions <documentation:placeholder>` such as :ref:`gRPC server <documentation:placeholder>` can work directly with data in binary format. The transaction signature and ID are also formed on the basis of the binary format, namely the transaction body bytes. The contents of transaction body bytes is given in the description of the binary format of each type and version of the transaction. Normally the transaction body bytes include all transaction fields, with the exception of the following fields:"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:342
msgid "Transaction ID (it is not stored on the blockchain),"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:343
msgid "Version flag,"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:344
msgid "Proofs or signature, depending on the version of the transaction."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:346
msgid "The guideline for generating a signature and ID is given in the :ref:`cryptographic practical details <02_decentralchain/09_protocol:Cryptographic Practical Details>` article. All strings are UTF-8 encoded."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:349
msgid "Protobuf"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:351
msgid "Protobuf facilitates the development of client libraries for the DecentralChain blockchain, as it avoids serialization errors and streamlines the creation of a correctly signed transaction. How to generate a transaction signature using protobuf:"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:353
msgid "Download the `protocol buffers package <https://github.com/protocolbuffers/protobuf/releases/>`_ for your programming language. Generate the Transaction class on the basis of transaction.proto."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:354
msgid "Fill in the transaction fields."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:356
msgid "Asset IDs should be specified in the binary format."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:357
msgid "Addresses should be specified in the shortened binary format (without the first two and the last four bytes). See the :ref:`address binary format <02_decentralchain/10_binary-format:Address Binary Format>`) article."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:359
msgid "Serialize the transaction object to get transaction body bytes. Detailed instructions for various programming languages are provided in `protocol buffers tutorials <https://developers.google.com/protocol-buffers/docs/tutorials>`_."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:360
msgid "Generate the signature for the transaction body bytes with the Curve25519 function using sender private key bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:362
msgid "The byte representation of a transaction based on the protobuf schema must not contain default values. Make sure that your protocol buffers compiler does not write the field value when serializing if it is equal to the default value for this data type, otherwise the transaction signature will be invalid. Send the signed transaction to a node:"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:364
msgid "If you use your own node and :ref:`gRPC server <documentation:placeholder>`, send the SignedTransaction object."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:365
msgid "If you use :ref:`Node REST API <documentation:placeholder>`, compose the JSON representation of the transaction and add the base58-encoded signature to the proof array. Send the transaction to a node using POST /transactions/broadcast method."
msgstr ""

#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
msgid "Public key of the transaction sender."
msgstr ""

#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
msgid "fee.amount"
msgstr ""

#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
msgid ":ref:`Transaction fee <02_decentralchain/03_transaction:Transaction Fees>` in the minimum fraction (“cent”) of the fee asset."
msgstr ""

#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
msgid "fee.asset_id"
msgstr ""

#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
msgid ":math:`32` bytes for the fee in a sponsored asset. :math:`0` for the fee in DecentralCoins"
msgstr ""

#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
msgid "ID of the token of the fee. The fee in a sponsored asset is only available for invoke script transactions and transfer transactions. See the :ref:`sponsored fee <02_decentralchain/03_transaction:Sponsored Fees>` article."
msgstr ""

#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
msgid "Transaction timestamp: Unix time in milliseconds. The transaction won't be added to the blockchain if the timestamp value is more than :math:`2` hours back or :math:`1.5` hours forward of the current block timestamp."
msgstr ""

#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
msgid "Transaction version."
msgstr ""

#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
msgid "Each proof up to :math:`64` bytes,up to :math:`8` proofs."
msgstr ""

#: ../../_static/02_decentralchain/tables/055_Transaction-Binary-Format.csv:1
msgid ":ref:`Transaction proofs <02_decentralchain/03_transaction:Transaction Proofs>` that are used to check the validity of the transaction. The array can contain several transaction signatures (but not limited to signatures only)."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:413
msgid "The fields that depend on the type of transaction are described in the following articles:"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:415
msgid ":ref:`Burn transaction binary format <02_decentralchain/10_binary-format:Burn Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:416
msgid ":ref:`Create alias transaction binary format <02_decentralchain/10_binary-format:Create Alias Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:417
msgid ":ref:`Data transaction binary format <02_decentralchain/10_binary-format:Data Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:418
msgid ":ref:`Exchange transaction binary format <02_decentralchain/10_binary-format:Exchange Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:419
msgid ":ref:`Genesis transaction binary format <02_decentralchain/10_binary-format:Genesis Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:420
msgid ":ref:`Invoke script transaction binary format <02_decentralchain/10_binary-format:Invoke Script Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:421
msgid ":ref:`Issue transaction binary format <02_decentralchain/10_binary-format:Issue Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:422
msgid ":ref:`Lease cancel transaction binary format <02_decentralchain/10_binary-format:Lease Cancel Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:423
msgid ":ref:`Lease transaction binary format <02_decentralchain/10_binary-format:Lease Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:424
msgid ":ref:`Mass transfer transaction binary format <02_decentralchain/10_binary-format:Mass Transfer Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:425
msgid ":ref:`Reissue transaction binary format <02_decentralchain/10_binary-format:Reissue Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:426
msgid ":ref:`Set asset script transaction binary format <02_decentralchain/10_binary-format:Set Asset Script Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:427
msgid ":ref:`Set script transaction binary format <02_decentralchain/10_binary-format:Set Script Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:428
msgid ":ref:`Sponsor fee transaction binary format <02_decentralchain/10_binary-format:Sponsor Fee Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:429
msgid ":ref:`Transfer transaction binary format <02_decentralchain/10_binary-format:Transfer Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:430
msgid ":ref:`Update asset info transaction binary format <02_decentralchain/10_binary-format:Update Asset Info Transaction Binary Format>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:433
msgid "Burn Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:435
msgid "Learn more about :ref:`burn transaction <02_decentralchain/03_transaction:Burn Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:450
msgid "Burn Transaction Binary Format Version 3"
msgstr ""

#: ../../_static/02_decentralchain/tables/056_Burn-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/081_Reissue-Transaction-Binary-Format-V3.csv:1
msgid "asset_amount.amount"
msgstr ""

#: ../../_static/02_decentralchain/tables/056_Burn-Transaction-Binary-Format-V3.csv:1
msgid "Amount of token to burn, specified in the minimum fraction (“cents”)."
msgstr ""

#: ../../_static/02_decentralchain/tables/056_Burn-Transaction-Binary-Format-V3.csv:1
msgid "asset_amount.asset_id"
msgstr ""

#: ../../_static/02_decentralchain/tables/056_Burn-Transaction-Binary-Format-V3.csv:1
msgid ":ref:`ID <02_decentralchain/02_token(asset):Token ID>` of token to burn."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:458
msgid "Burn Transaction Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "Comment"
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "Version flag"
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "Indicates the transaction version is :math:`2` or higher. Value must be :math:`0`."
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":ref:`Transaction type ID <02_decentralchain/03_transaction:Transaction Types>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
msgid "Value must be :math:`6`."
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "Transaction version"
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
msgid "1"
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Public key of the transaction sender"
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
msgid ":ref:`ID <02_decentralchain/02_token(asset):Token ID>` of the token to burn"
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
msgid "Amount of tokens to burn"
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":ref:`Transaction fee <02_decentralchain/03_transaction:Transaction Fees>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Transaction timestamp"
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "Transaction proofs"
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "See :ref:`transaction proofs binary format <02_decentralchain/10_binary-format:Transaction Proofs Binary Format>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/057_Burn-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
msgid "If the array is empty, then :math:`S = 3`. If the array is not empty, then :math:`S = 3 + 2 × N + 64 × N`, where :math:`N` is the number of proofs in the array. The maximum number of proofs in the array is :math:`8`. The size of each proof is :math:`64` bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:464
#: ../../02_decentralchain/10_binary-format.rst:1025
msgid "The fields :math:`2`, :math:`3`, :math:`4`, :math:`5`, :math:`6`, :math:`7`, :math:`8` and :math:`9` are the transaction body bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:466
#: ../../02_decentralchain/10_binary-format.rst:527
#: ../../02_decentralchain/10_binary-format.rst:572
#: ../../02_decentralchain/10_binary-format.rst:690
#: ../../02_decentralchain/10_binary-format.rst:735
#: ../../02_decentralchain/10_binary-format.rst:785
#: ../../02_decentralchain/10_binary-format.rst:882
#: ../../02_decentralchain/10_binary-format.rst:948
#: ../../02_decentralchain/10_binary-format.rst:1027
#: ../../02_decentralchain/10_binary-format.rst:1093
#: ../../02_decentralchain/10_binary-format.rst:1170
#: ../../02_decentralchain/10_binary-format.rst:1225
#: ../../02_decentralchain/10_binary-format.rst:1276
#: ../../02_decentralchain/10_binary-format.rst:1329
#: ../../02_decentralchain/10_binary-format.rst:1400
msgid ":strong:`JSON Representation of Transaction`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:490
msgid "Burn Transaction Binary Format Version 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/058_Burn-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Transaction signature"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:496
#: ../../02_decentralchain/10_binary-format.rst:555
#: ../../02_decentralchain/10_binary-format.rst:1057
msgid "The fields :math:`1`, :math:`2`, :math:`3`, :math:`4`, :math:`5` and :math:`6` are the transaction body bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:499
msgid "Create Alias Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:501
msgid "Learn more about :ref:`create alias transaction <02_decentralchain/03_transaction:Create Alias Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:511
msgid "Create Alias Transaction Binary Format Version 3"
msgstr ""

#: ../../_static/02_decentralchain/tables/059_Create-Alias-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/076_Lease-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
msgid "From :math:`4` to :math:`30` bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/059_Create-Alias-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
msgid ":ref:`Alias <02_decentralchain/01_account:Alias>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:519
msgid "Create Alias Transaction Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
msgid "Value must be :math:`10`."
msgstr ""

#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
msgid "Alias length"
msgstr ""

#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
msgid "Number of characters in the alias name."
msgstr ""

#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
msgid ":ref:`String <02_decentralchain/09_protocol:Blockchain Data Types>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/060_Create-Alias-Transaction-Binary-Format-V2.csv:1
msgid "from :math:`4` to :math:`30`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:525
msgid "The fields :math:`2`, :math:`3`, :math:`4`, :math:`5`, :math:`6`, :math:`7` and :math:`8` are the transaction body bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:549
msgid "Create Alias Transaction Binary Format Version 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/061_Create-Alias-Transaction-Binary-Format-V1.csv:1
msgid "From :math:`4` to :math:`30`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:558
msgid "Data Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:560
msgid "Learn more about :ref:`data transaction <02_decentralchain/03_transaction:Data Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:564
msgid "Data Transaction Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/062_Data-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "key"
msgstr ""

#: ../../_static/02_decentralchain/tables/062_Data-Transaction-Binary-Format-V2.csv:1
msgid "Up to :math:`400` bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/062_Data-Transaction-Binary-Format-V2.csv:1
msgid "Entry key."
msgstr ""

#: ../../_static/02_decentralchain/tables/062_Data-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "value"
msgstr ""

#: ../../_static/02_decentralchain/tables/062_Data-Transaction-Binary-Format-V2.csv:1
msgid "Up to :math:`32,767` bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/062_Data-Transaction-Binary-Format-V2.csv:1
msgid "Entry value. If omitted, the transaction deletes the entry."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:570
msgid "The maximum number of entries is :math:`100`. The maximum data size (keys + values) is :math:`165,890` bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:645
msgid "Data Transaction Binary Format Version 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Value must be :math:`12`."
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Length of the data array"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.1`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Key 1 length"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.2`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Key 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Up to :math:`400`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Maximum of :math:`100` characters."
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.3`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Value 1 type"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Options are: 0 - :ref:`Long <02_decentralchain/09_protocol:Blockchain Data Types>`. 1 - :ref:`Boolean <02_decentralchain/09_protocol:Blockchain Data Types>`. 2 - Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`]. 3 - :ref:`String <02_decentralchain/09_protocol:Blockchain Data Types>`."
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.4`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Value 1 length"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "This field is present only if the value is of type of array of bytes or a string. If the value is of type of integer or a boolean, this field should not be included in the data structure."
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.5`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Value 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "T"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "T is one of the following: 1) :ref:`Long <02_decentralchain/09_protocol:Blockchain Data Types>`, :math:`S = 8`. 2) :ref:`Boolean <02_decentralchain/09_protocol:Blockchain Data Types>`, :math:`S = 1`. 3) Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`], :math:`S ⩽ 32,767`. 4) :ref:`String <02_decentralchain/09_protocol:Blockchain Data Types>`, :math:`S ⩽ 32,767`."
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.6`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Key 2 length"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.7`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Key 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.8`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Value 2 type"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.9`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Value 2 length"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.10`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "Value 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.[5 × N - 4]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "N-th key length"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.[5 × N - 3]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "N-th key"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.[5 × N - 2]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "N-th value type"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.[5 × N - 1]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "N-th value length"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid ":math:`6.[5 × N]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "N-th value"
msgstr ""

#: ../../_static/02_decentralchain/tables/063_Data-Transaction-Binary-Format-V1.csv:1
msgid "If the array is empty, then :math:`S = 3`. If the array is not empty, then :math:`S = 3 + 2 × N + 64 × N`, where :math:`N` is the number of proofs in the array. The maximum number of proofs in the array is :math:`8`. The size of each proof is 64 bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:651
msgid "The fields :math:`1`, :math:`2`, :math:`3`, :math:`4`, :math:`5`, :math:`6.1`, :math:`6.2`, :math:`6.3`, :math:`6.4`, :math:`6.5`, :math:`6.6`, :math:`6.7`, :math:`6.8`, :math:`6.9`, :math:`6.10`, :math:`6.[5 × N - 4]`, :math:`6.[5 × N - 3]`, :math:`6.[5 × N - 2]`, :math:`6.[5 × N - 1]`, :math:`6.[5 × N]`, :math:`7` and :math:`8` are the transaction body bytes. The maximum number of records is :math:`100`. The maximum size of transaction body bytes is  :math:`153,600` bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:654
msgid "Exchange Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:656
msgid "Learn more about :ref:`exchange transaction <02_decentralchain/03_transaction:Exchange Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:660
msgid "Exchange transaction of version 3 can accept orders of versions 1 –4."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:672
msgid "Exchange Transaction Binary Format Version 3"
msgstr ""

#: ../../_static/02_decentralchain/tables/064_Exchange-Transaction-Binary-Format-V3.csv:1
msgid "Amount of the amount asset (base currency) that the buyer received from the seller, specified in the minimum fraction (“cent”) of asset."
msgstr ""

#: ../../_static/02_decentralchain/tables/064_Exchange-Transaction-Binary-Format-V3.csv:1
msgid "Price for the amount asset (base currency) nominated in the price asset (quote currency), multiplied by :math:`10^{8}`. For more details see the :ref:`order <02_decentralchain/06_order:Order>` article."
msgstr ""

#: ../../_static/02_decentralchain/tables/064_Exchange-Transaction-Binary-Format-V3.csv:1
msgid "buy_matcher_fee"
msgstr ""

#: ../../_static/02_decentralchain/tables/064_Exchange-Transaction-Binary-Format-V3.csv:1
msgid "Buy matcher fee. The fee token ID is indicated in buy order."
msgstr ""

#: ../../_static/02_decentralchain/tables/064_Exchange-Transaction-Binary-Format-V3.csv:1
msgid "sell_matcher_fee"
msgstr ""

#: ../../_static/02_decentralchain/tables/064_Exchange-Transaction-Binary-Format-V3.csv:1
msgid "Sell matcher fee The fee token ID is indicated in sell order."
msgstr ""

#: ../../_static/02_decentralchain/tables/064_Exchange-Transaction-Binary-Format-V3.csv:1
msgid "orders"
msgstr ""

#: ../../_static/02_decentralchain/tables/064_Exchange-Transaction-Binary-Format-V3.csv:1
msgid "Buy order and sell order. See the :ref:`order binary format <02_decentralchain/10_binary-format:Order Binary Format>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:680
msgid "Transaction version 2 can accept orders of version 1, 2 and 3."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:682
msgid "Exchange Transaction Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
msgid "Value must be :math:`7`."
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
msgid "Buy order size"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
msgid "Size including flag 4.2."
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
msgid "Buy order version flag"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
msgid "order1.version"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
msgid ":math:`S = 1` if the order version is :math:`1`. :math:`S = 0` if the order version is 2 or 3."
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
msgid ":math:`4.3`"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
msgid "Buy order"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
msgid "order1"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
msgid "See :ref:`order binary format <02_decentralchain/10_binary-format:Order Binary Format>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
msgid "Sell order size"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
msgid "Size including flag 5.2."
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
msgid "Sell order version flag"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
msgid "order2.version"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid ":math:`5.3`"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
msgid "Sell order"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
msgid "order2"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
msgid "See order binary format"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
msgid "Deal price"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
msgid "Price for the amount asset (base currency) nominated in the price asset (quote currency)."
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
msgid "Amount of the amount asset (base currency) that the buyer received from the seller."
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
msgid "Buy matcher fee"
msgstr ""

#: ../../_static/02_decentralchain/tables/065_Exchange-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/066_Exchange-Transaction-Binary-Format-V1.csv:1
msgid "Sell matcher fee"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:688
msgid "The fields :math:`1`, :math:`2`, :math:`3`, :math:`4.1`, :math:`4.2`, :math:`4.3`, :math:`5.1`, :math:`5.2`, :math:`5.3`, :math:`6`, :math:`6.6`, :math:`7`, :math:`8`, :math:`9`, :math:`10` and :math:`11` are the transaction body bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:714
msgid "Transaction version 1 can accept orders of version 1 only."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:716
msgid "Exchange Transaction Binary Format Version 1"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:722
msgid "The fields :math:`1`, :math:`2`, :math:`3`, :math:`4`, :math:`5`, :math:`6`, :math:`7`, :math:`8`, :math:`9`, :math:`10` and :math:`11` are the transaction body bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:725
#: ../../02_decentralchain/10_binary-format.rst:729
msgid "Genesis Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:727
msgid "Learn more about :ref:`genesis transaction <02_decentralchain/03_transaction:Genesis Transaction>`."
msgstr ""

#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
msgid "Address of the recipient"
msgstr ""

#: ../../_static/02_decentralchain/tables/067_Genesis-Transaction-Binary-Format.csv:1
msgid "Amount of :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` that will be transferred to the account"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:751
msgid "Invoke Script Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:753
msgid "Learn more about :ref:`invoke script transaction <02_decentralchain/03_transaction:Invoke Script Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:777
msgid "Invoke Script Transaction Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
msgid "d_app.public_key_hash"
msgstr ""

#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/076_Lease-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
msgid ":math:`20` bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
msgid "dApp account public key hash (a component of an address, see the Address binary format article)."
msgstr ""

#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
msgid "d_app.alias"
msgstr ""

#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
msgid "dApp alias."
msgstr ""

#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
msgid "function_call"
msgstr ""

#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
msgid "Function name and arguments. Binary format of function call is the same as in version 1."
msgstr ""

#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
msgid "payments.asset_id"
msgstr ""

#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
msgid ":math:`32` bytes for asset. :math:`0` for :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
msgid "ID of token in payment."
msgstr ""

#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
msgid "payments.amount"
msgstr ""

#: ../../_static/02_decentralchain/tables/068_Invoke-Script-Transaction-Binary-Format-V2.csv:1
msgid "Amount of token in payment, specified in the atomic units."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:783
msgid "The maximum size of d_app + function_call + payments is :math:`5120` bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:840
msgid "Invoke Script Transaction Binary Format Version 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Value must be :math:`16`."
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Address or alias"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "See Address Binary Format, Alias Binary Format"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid "If the first byte of the field is :math:`1`, then it is followed by address. S in this case equals :math:`26`. If the first byte of the field is :math:`2`, then it is followed by alias. In this case :math:`8 <= S <= 34`."
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Function presence flag"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`0` — the default function of the dApp is invoked. :math:`1` — function from the current transaction should be invoked in the dApp."
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Function call ID"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Constant. The value must be :math:`9`."
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`7.3`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Function type ID"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Constant. The value must be :math:`1`."
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`7.4`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Function name length"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`7.5`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Function name"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "function"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Up to :math:`255`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`7.6.1`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Amount of arguments of the function"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`7.6.2`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "ID of argument 1 type"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`0` — argument type is long. :math:`1` — argument type is an array of bytes. :math:`2` — argument type is a string. :math:`6` — argument type is logical True. :math:`7` — argument type is logical False. :math:`11` – argument type is list."
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`7.6.3`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Argument 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Options are: 1) :ref:`Long <02_decentralchain/09_protocol:Blockchain Data Types>`. 2) Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`]. 3) :ref:`String <02_decentralchain/09_protocol:Blockchain Data Types>`. 4) Logical True. 5) Logical False. 6) List."
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`S = 8`, if argument type is long. If the argument type is an array of bytes, string, or list, the field size is limited only by the total transaction size. If the type is list, then 1) its length must not exceed :math:`1000` elements. 2) amount of its elements represents first :math:`4` bytes of the current field. 3) each list element is serialized similarly to the function argument: the element type ID takes first place followed by the element's value. :math:`S = 0`, if argument type is logical True or False."
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`7.6.4`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "ID of argument 2 type"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`7.6.5`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Argument 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`7.6.[2 × N]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "ID of argument N type"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "0 — argument type is long. 1 — argument type is an array of bytes. 2 — argument type is a string. 6 — argument type is logical True. 7 — argument type is logical False. 11 – argument type is list."
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`7.6.[2 × N + 1]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Argument N"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid ":math:`8.1`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Amount of payments"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid ":math:`8.2`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Payment 1 length"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`8.3`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Amount of token in payment 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`8.4`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Flag of payment 1 token"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`0` — :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`. :math:`1` — other token."
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`8.5`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "ID of payment 1 token"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Field is applicable if the token is not :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`8.[4 × N – 2]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Payment N length"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`8.[4 × N – 1]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Amount of token in payment N"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`8.[4 × N]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Flag of payment N token"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`8.[4 × N + 1]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "ID of payment N token"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`10.1`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid "Flag of fee token"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`10.2`"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Fee token ID"
msgstr ""

#: ../../_static/02_decentralchain/tables/069_Invoke-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`S = 0`, if token is :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`. :math:`S = 32`, if it is other token."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:846
msgid "The maximum number of payments is :math:`10`.  The maximum size of transaction including proofs is :math:`5120` bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:849
msgid "Issue Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:851
msgid "Learn more about :ref:`issue transaction <02_decentralchain/03_transaction:Issue Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:866
msgid "Issue Transaction Binary Format Version 3"
msgstr ""

#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/093_Update-Asset-Info-Transaction-Binary-Format-V1.csv:1
msgid "From :math:`4` to :math:`16` bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/093_Update-Asset-Info-Transaction-Binary-Format-V1.csv:1
msgid "Token name."
msgstr ""

#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/093_Update-Asset-Info-Transaction-Binary-Format-V1.csv:1
msgid "From :math:`0` to :math:`1000` bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/093_Update-Asset-Info-Transaction-Binary-Format-V1.csv:1
msgid "Token description."
msgstr ""

#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
msgid "Amount of token to issue, specified in the minimum fraction (“cents”)."
msgstr ""

#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
msgid "Number of decimal places."
msgstr ""

#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/084_Set-Asset-Transaction-Binary-Format-V2.csv:1
msgid "Up to :math:`8192` bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/070_Issue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/084_Set-Asset-Transaction-Binary-Format-V2.csv:1
msgid ":ref:`Asset script <03_ride-language/04_script-types:Asset Script>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:874
msgid "Issue Transaction Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
msgid "Value must be :math:`3`."
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
msgid "32"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
msgid ":ref:`Token <02_decentralchain/02_token(asset):Token (Asset)>` name length"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
msgid "Token name"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
msgid "From :math:`4` to :math:`16`"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
msgid "Token description length"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
msgid "Token description"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
msgid "From :math:`0` to :math:`1000`"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
msgid "Amount of the token that will be issued"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
msgid "Number of decimal places of the token"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
msgid "Reissue flag"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
msgid ":ref:`Boolean <02_decentralchain/09_protocol:Blockchain Data Types>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
msgid "If the value is :math:`0`, then token reissue is not possible. If the value is :math:`1`, then token reissue is possible."
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
msgid ":math:`13.1`"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
msgid "Script existence flag"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
msgid "If the value is :math:`0`, then the token does not have a script. If the value is :math:`1`, then the token has a script."
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
msgid ":math:`13.2`"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
msgid "Script length in bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
msgid ":math:`S = 0` if the value of the script existence flag field is :math:`0`. :math:`S = 2` if the value of the script existence flag field is 1."
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
msgid ":math:`13.3`"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
msgid ":ref:`Asset script <03_ride-language/04_script-types:Asset Script>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
msgid ":math:`S = 0` if the value of the script existence flag field is :math:`0`. :math:`0 < S ≤ 8192`, if the value of the script existence flag field is 1."
msgstr ""

#: ../../_static/02_decentralchain/tables/071_Issue-Transaction-Binary-Format-V2.csv:1
msgid "If the array is empty, then :math:`S = 3`. If the array is not empty, then :math:`S = 3 + 2 × N + 64 × N`, where :math:`N` is the number of proofs in the array. The maximum number of proofs in the array is :math:`82`. The size of each proof is :math:`64` bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:880
msgid "The fields :math:`2`, :math:`3`, :math:`4`, :math:`5`, :math:`6.1`, :math:`6.2`, :math:`7.1`, :math:`7.2`, :math:`8`, :math:`9`, :math:`10`, :math:`11`, :math:`12`, :math:`13.1`, :math:`13.2` and :math:`13.3` are the transaction body bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:911
msgid "Issue Transaction Binary Format Version 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/072_Issue-Transaction-Binary-Format-V1.csv:1
msgid "This field duplicates field 1."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:917
msgid "The fields :math:`3`, :math:`4`, :math:`5.1`, :math:`5.2`, :math:`6.1`, :math:`6.2`, :math:`7`, :math:`8`, :math:`9`, :math:`10` and :math:`11` are the transaction body bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:920
msgid "Lease Cancel Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:922
msgid "Learn more about :ref:`lease cancel transaction <02_decentralchain/03_transaction:Lease Cancel Transaction>`"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:932
msgid "Lease Cancel Transaction Binary Format Version 3"
msgstr ""

#: ../../_static/02_decentralchain/tables/073_Lease-Cancel-Transaction-Binary-Format-V3.csv:1
msgid "lease_id"
msgstr ""

#: ../../_static/02_decentralchain/tables/073_Lease-Cancel-Transaction-Binary-Format-V3.csv:1
msgid "Lease ID."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:940
msgid "Lease Cancel Transaction Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
msgid "Value must be :math:`9`."
msgstr ""

#: ../../_static/02_decentralchain/tables/074_Lease-Cancel-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/075_Lease-Cancel-Transaction-Binary-Format-V1.csv:1
msgid "Lease ID"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:946
msgid "The fields :math:`2`, :math:`3`, :math:`4`, :math:`5`, :math:`6`, :math:`7`, and :math:`8` are the transaction body bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:982
msgid "Lease Cancel Transaction Binary Format Version 1"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:988
msgid "The fields :math:`1`, :math:`2`, :math:`3`, :math:`4`, and :math:`5` are the transaction body bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:991
msgid "Lease Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:993
msgid "Learn more about :ref:`lease transaction <02_decentralchain/03_transaction:Lease Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1011
msgid "Lease Transaction Binary Format Version 3"
msgstr ""

#: ../../_static/02_decentralchain/tables/076_Lease-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
msgid "recipient.public_key_hash"
msgstr ""

#: ../../_static/02_decentralchain/tables/076_Lease-Transaction-Binary-Format-V3.csv:1
msgid "Recipient's account public key hash (a component of an :ref:`address <02_decentralchain/01_account:Address>`, see the :ref:`address binary format <02_decentralchain/10_binary-format:Address Binary Format>` article)."
msgstr ""

#: ../../_static/02_decentralchain/tables/076_Lease-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
msgid "recipient.alias"
msgstr ""

#: ../../_static/02_decentralchain/tables/076_Lease-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
msgid "Recipient's :ref:`alias <02_decentralchain/01_account:Alias>`."
msgstr ""

#: ../../_static/02_decentralchain/tables/076_Lease-Transaction-Binary-Format-V3.csv:1
msgid "Amount of :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` to lease (that is, amount of Decentralites multiplied by :math:`10^{8}`)."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1019
msgid "Lease Transaction Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
msgid "Value must be :math:`8`."
msgstr ""

#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
msgid "Reserved field"
msgstr ""

#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
msgid "Value must be equal to :math:`0`."
msgstr ""

#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` or :ref:`alias <02_decentralchain/01_account:Alias>` of the recipient"
msgstr ""

#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "See :ref:`address binary format <02_decentralchain/10_binary-format:Address Binary Format>`, :ref:`alias binary format <02_decentralchain/10_binary-format:Alias Binary Format>`"
msgstr ""

#: ../../_static/02_decentralchain/tables/077_Lease-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/078_Lease-Transaction-Binary-Format-V1.csv:1
msgid "Amount of :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` that will be leased to the account"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1051
msgid "Lease Transaction Binary Format Version 1"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1060
msgid "Mass Transfer Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1062
msgid "Learn more about :ref:`mass transfer transaction <02_decentralchain/03_transaction:Mass Transfer Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1085
msgid "Mass Transaction Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/081_Reissue-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/084_Set-Asset-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/093_Update-Asset-Info-Transaction-Binary-Format-V1.csv:1
msgid "asset_id"
msgstr ""

#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
msgid "ID of token to transfer."
msgstr ""

#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
msgid "transfers.recipient.public_key_hash"
msgstr ""

#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
msgid "Recipient's account public key hash (a component of an address, see the :ref:`address binary format <02_decentralchain/10_binary-format:Address Binary Format>` article)."
msgstr ""

#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
msgid "transfers.recipient.alias"
msgstr ""

#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
msgid "Amount of token to transfer, specified in the minimum fraction (“cents”)."
msgstr ""

#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "Up to :math:`140` bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/079_Mass-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
msgid "Arbitrary data (typically a comment to transfer)."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1091
#: ../../02_decentralchain/10_binary-format.rst:1223
msgid "The maximim number of transfers is :math:`100`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1126
msgid "Mass Transaction Binary Format Version 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid "Value must be :math:`11`."
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid "Flag DecentralCoins/token"
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid "Value is :math:`0` for transferring DecentralCoins. Value is :math:`1` for transferring other tokens."
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid ":math:`S = 0` if the value of the flag DecentralCoins/token field is :math:`0`. :math:`S = 32` if the value of the flag DecentralCoins/token field is :math:`1`."
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid "Number of transfers"
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid "Amount of tokens in the transfer 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid ":math:`5.4`"
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid "Address or alias of the recipient"
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid ":math:`5.5`"
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid "Amount of tokens in the transfer 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid ":math:`5.[2 × N]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid ":math:`5.[2 × N + 1]`"
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
msgid "Amount of tokens in the transferN"
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Attachment length"
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Attachment"
msgstr ""

#: ../../_static/02_decentralchain/tables/080_Mass-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "Arbitrary data attached to the transaction."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1132
msgid "The fields :math:`1`, :math:`2`, :math:`3`, :math:`4.1`, :math:`4.2`, :math:`5.1`, :math:`5.2`, :math:`5.3`, :math:`5.4`, :math:`5.5`, :math:`5.[2 × N]`, :math:`5.[2 × N + 1]`, :math:`6`, :math:`7`, :math:`8.1` and :math:`8.2` are the transaction body bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1135
msgid "Reissue Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1137
msgid "Learn more about :ref:`reissue transaction <02_decentralchain/03_transaction:Reissue Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1153
msgid "Reissue Transaction Binary Format Version 3"
msgstr ""

#: ../../_static/02_decentralchain/tables/081_Reissue-Transaction-Binary-Format-V3.csv:1
msgid "ID of token to reissue."
msgstr ""

#: ../../_static/02_decentralchain/tables/081_Reissue-Transaction-Binary-Format-V3.csv:1
msgid "Amount of token to reissue, specified in the minimum fraction (“cents”)."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1161
msgid "Reissue Transaction Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
msgid "Indicates the transaction version is 2 or higher. Value must be :math:`0`."
msgstr ""

#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
msgid "Value must be :math:`5`."
msgstr ""

#: ../../_static/02_decentralchain/tables/082_Reissue-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
msgid "Amount of token that will be reissued"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1168
msgid "The fields :math:`2`, :math:`3`, :math:`4`, :math:`5`, :math:`6`, :math:`7`, :math:`8`, :math:`9` and :math:`10` are the transaction body bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1195
msgid "Reissue Transaction Binary Format Version 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/083_Reissue-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "This field duplicates field :math:`1`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1201
msgid "The fields :math:`3`, :math:`4`, :math:`5`, :math:`6`, :math:`7`, :math:`8` and :math:`9` are the transaction body bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1204
msgid "Set Asset Script Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1206
msgid "Learn more about :ref:`set asset script transaction <02_decentralchain/03_transaction:Set Asset Script Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1217
msgid "Set Asset Script Transaction Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/084_Set-Asset-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/088_Sponsor-Fee-Transaction-Binary-Format-V2.csv:1
msgid "ID of asset."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1249
msgid "Set Asset Script Transaction Binary Format Version 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
msgid "Value must be :math:`15`."
msgstr ""

#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
msgid "Token ID to which the asset script is attached"
msgstr ""

#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
msgid ":math:`9.2`"
msgstr ""

#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
msgid "Script size in bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`S = 0` if the value of the script existence flag field is :math:`0`. :math:`S = 2` if the value of the script existence flag field is :math:`1`."
msgstr ""

#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
msgid ":math:`9.3`"
msgstr ""

#: ../../_static/02_decentralchain/tables/085_Set-Asset-Transaction-Binary-Format-V1.csv:1
msgid ":math:`S = 0` if the value of the script existence flag field is :math:`0`. :math:`0 < S ≤ 8192`, if the value of the script existence flag field is :math:`1`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1255
msgid "The fields :math:`2`, :math:`3`, :math:`4`, :math:`5`, :math:`6`, :math:`7`, :math:`8`, :math:`9.1`, :math:`9.2` and :math:`9.3` are the transaction body bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1258
msgid "Set Script Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1260
msgid "Learn more about :ref:`set script transaction <02_decentralchain/03_transaction:Set Script Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1270
msgid "Set Script Transaction Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/086_Set-Script-Transaction-Binary-Format-V2.csv:1
msgid "Up to :math:`32,768` bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/086_Set-Script-Transaction-Binary-Format-V2.csv:1
msgid ":ref:`Account script <03_ride-language/04_script-types:Account Script>` or :ref:`dApp script <03_ride-language/04_script-types:dApp Script>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1299
msgid "Set Script Transaction Binary Format Version 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
msgid "Value must be :math:`13`."
msgstr ""

#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
msgid "If the value is :math:`0`, then the token does not have a script. If the value is :math:`1,` then the token has a script."
msgstr ""

#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
msgid "Script length"
msgstr ""

#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
msgid "Script"
msgstr ""

#: ../../_static/02_decentralchain/tables/087_Set-Script-Transaction-Binary-Format-V1.csv:1
msgid ":math:`S = 0` if the value of the script existence flag field is :math:`0`. :math:`0 < S ≤ 32,768`, if the value of the script existence flag field is :math:`1`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1306
msgid "Sponsor Fee Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1308
msgid "Learn more about :ref:`sponsor fee transaction <02_decentralchain/03_transaction:Sponsor Fee Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1323
msgid "Sponsor Fee Transaction Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/088_Sponsor-Fee-Transaction-Binary-Format-V2.csv:1
msgid "min_fee.asset_id"
msgstr ""

#: ../../_static/02_decentralchain/tables/088_Sponsor-Fee-Transaction-Binary-Format-V2.csv:1
msgid "min_fee.amount"
msgstr ""

#: ../../_static/02_decentralchain/tables/088_Sponsor-Fee-Transaction-Binary-Format-V2.csv:1
msgid "Amount of asset that is equivalent to :math:`0.001` DecentralCoins (:math:`100 000` Decentralites), specified in the minimum fraction (“cents”) of asset. See the :ref:`sponsored fee <02_decentralchain/03_transaction:Sponsored Fees>` article."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1352
msgid "Sponsor Fee Transaction Binary Format Version 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
msgid "Value must be :math:`14`."
msgstr ""

#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
msgid "This field duplicates field :math:`2`."
msgstr ""

#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
msgid "This field duplicates field :math:`3`."
msgstr ""

#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
msgid "Minimal sponsored asset fee"
msgstr ""

#: ../../_static/02_decentralchain/tables/089_Sponsor-Fee-Transaction-Binary-Format-V1.csv:1
msgid "Amount of sponsored asset that is equivalent to :math:`0.001` DecentralCoins (:math:`100,000` Decentralites)."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1358
msgid "The fields :math:`4`, :math:`5`, :math:`6`, :math:`7`, :math:`8`, :math:`9` and :math:`10` are the transaction body bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1361
msgid "Transfer Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1363
msgid "Learn more about :ref:`transfer transaction <02_decentralchain/03_transaction:Transfer Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1386
msgid "Transfer Transaction Binary Format Version 3"
msgstr ""

#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
msgid "amount.asset_id"
msgstr ""

#: ../../_static/02_decentralchain/tables/090_Transfer-Transaction-Binary-Format-V3.csv:1
msgid "amount.amount"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1394
msgid "Transfer Transaction Binary Format Version 2"
msgstr ""

#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Value must be :math:`4`."
msgstr ""

#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Transferring token type flag"
msgstr ""

#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "Value is :math:`0` for transferring DecentralCoins. Value is :math:`1` for transferring other token."
msgstr ""

#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Transferring token ID"
msgstr ""

#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "math:`S = 0` if the value of the flag 5.1 is :math:`0`. :math:`S = 32` if the value of the flag 5.1 is :math:`1`."
msgstr ""

#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Fee token type flag"
msgstr ""

#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "Value is 0 for fee in DecentralCoins. Value is :math:`1` for fee in other token."
msgstr ""

#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "Token to pay the fee. :math:`S = 0` if the value of the flag 6.1 is :math:`0`. :math:`S = 32` if the value of the flag 6.1 field is :math:`1`."
msgstr ""

#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Amount of token in the transfer"
msgstr ""

#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "If the first byte of the field is :math:`1`, then it is followed by address. S in this case equals :math:`26`. If the first byte of the field is :math:`2`, then it is followed by alias. In this case :math:`8 <= S <= 34`"
msgstr ""

#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":math:`11.1`"
msgstr ""

#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":math:`11.2`"
msgstr ""

#: ../../_static/02_decentralchain/tables/091_Transfer-Transaction-Binary-Format-V2.csv:1
msgid "If the array is empty, then :math:`S = 3`. If the array is not empty, then :math:`S = 3 + 2 × N + 64 × N`, where N is the number of proofs in the array. The maximum number of proofs in the array is :math:`8`. The size of each proof is :math:`64` bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1426
msgid "Transfer Transaction Binary Format Version 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Value is :math:`0` for transferring DecentralCoins. Value is 1 for transferring other token."
msgstr ""

#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid ":math:`S = 0` if the value of the flag 5.1 is :math:`0`. :math:`S = 32` if the value of the flag 5.1 is :math:`1`."
msgstr ""

#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Value is :math:`0` for fee in DecentralCoins. Value is :math:`1` for fee in other token."
msgstr ""

#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Token to pay the fee. :math:`S = 0` if the value of the flag 6.1 is 0. :math:`S = 32` if the value of the flag 6.1 field is :math:`1`."
msgstr ""

#: ../../_static/02_decentralchain/tables/092_Transfer-Transaction-Binary-Format-V1.csv:1
msgid "Up to :math:`140` bytes."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1433
msgid "Update Asset Info Transaction Binary Format"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1435
msgid "Learn more about :ref:`update asset info transaction <02_decentralchain/03_transaction:Update Asset Info Transaction>`."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1447
msgid "Update Asset Transaction Binary Format Version 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/093_Update-Asset-Info-Transaction-Binary-Format-V1.csv:1
msgid "Token ID."
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1454
#: ../../02_decentralchain/10_binary-format.rst:1456
msgid "Transaction Proofs Binary Format"
msgstr ""

#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "Size in bytes"
msgstr ""

#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "Proofs version"
msgstr ""

#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "Value is 1."
msgstr ""

#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "Proofs count"
msgstr ""

#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "Proof 1 length"
msgstr ""

#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "Value is 64."
msgstr ""

#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "Proofs 1"
msgstr ""

#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "Proof 2 length"
msgstr ""

#: ../../_static/02_decentralchain/tables/094_Transaction-Proofs-Binary-Format.csv:1
msgid "Proof 2"
msgstr ""

#: ../../02_decentralchain/10_binary-format.rst:1462
msgid "The maximum number of proofs is :math:`8`."
msgstr ""

#: ../../02_decentralchain/index.md:1 ../../02_decentralchain/index.md:5
msgid "DecentralChain"
msgstr ""

#: ../../02_decentralchain/index.md:3
msgid "DecentralChain is an open blockchain protocol and development toolset for Web 3.0 applications and decentralized solutions."
msgstr ""



#: ../../03_ride-language/01_syntax-basics.rst:3
msgid "Syntax Basics"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:5
msgid ":ref:`Directives <03_ride-language/01_syntax-basics:Directives>`"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:6
msgid ":ref:`Definitions <03_ride-language/01_syntax-basics:Definitions>`"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:7
msgid ":ref:`Expressions <03_ride-language/01_syntax-basics:Expressions>`"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:8
msgid ":ref:`Constants <03_ride-language/01_syntax-basics:Constants>`"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:9
msgid ":ref:`Variables <03_ride-language/01_syntax-basics:Variables>`"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:10
msgid ":ref:`Operators <03_ride-language/01_syntax-basics:Operators>`"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:11
msgid ":ref:`Functions <03_ride-language/01_syntax-basics:Functions>`"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:12
msgid ":ref:`Exceptions <03_ride-language/01_syntax-basics:Exceptions>`"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:13
msgid ":ref:`Comments <03_ride-language/01_syntax-basics:Comments>`"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:16
#: ../../03_ride-language/04_script-types.rst:38
#: ../../03_ride-language/04_script-types.rst:362
#: ../../03_ride-language/04_script-types.rst:369
#: ../../03_ride-language/04_script-types.rst:440
#: ../../03_ride-language/04_script-types.rst:447
#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Directives"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:18
msgid "Every Ride script should start with directives for the compiler. The directives define the script format and available functions, structures and variables. Directive format is as follows:"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:26
msgid "Directive List"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:28
msgid "There are three types of directives, with different possible values."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:36
msgid "{-# STDLIB_VERSION 5 #-} sets the version of the standard library. The latest version currently in production is 5."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:38
msgid "{-# CONTENT_TYPE DAPP #-} sets the type of the file you're working on. There are different content types, DAPP and EXPRESSION. The DAPP type allows you to define functions and finish execution with certain actions which result in account balances, asset properties, and entries in the dApp account data storage. The EXPRESSION type should always return a boolean value, since it’s used as a predicate for transaction validation."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:40
msgid "{-# SCRIPT_TYPE ACCOUNT #-} sets the entity type we want to add to the script to change its default behavior. Ride scripts can be attached to either an ACCOUNT or ASSET."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:42
#: ../../03_ride-language/01_syntax-basics.rst:83
#: ../../03_ride-language/01_syntax-basics.rst:115
msgid ":strong:`Examples`"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:44
msgid "For a :ref:`dApp script <03_ride-language/04_script-types:dApp Script>`:"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:52
msgid "For an :ref:`account script <03_ride-language/04_script-types:Account Script>`:"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:60
msgid "For an :ref:`asset script <03_ride-language/04_script-types:Asset Script>`:"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:68
msgid "Not all combinations of directives are correct. The example below will not work, because DAPP content type is allowed only for accounts:"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:79
msgid "Definitions"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:81
msgid "A definition is a linking of the name to the value or to the :ref:`function <03_ride-language/01_syntax-basics:Functions>` body."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:85
msgid "Linking the name to the value."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:91
msgid "Linking the name to the :ref:`function <03_ride-language/01_syntax-basics:Functions>` body."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:100
msgid "Expressions"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:102
msgid "An expression is a combination of one or more :ref:`constants <03_ride-language/01_syntax-basics:Constants>`, :ref:`variables <03_ride-language/01_syntax-basics:Variables>`, :ref:`operators <03_ride-language/01_syntax-basics:Operators>` and :ref:`function <03_ride-language/01_syntax-basics:Functions>` calls."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:105
msgid "Expression Result"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:107
msgid "An expression result is a value, which is obtained by the fold of the syntactic tree of the expression. Ride interprets the expression and calculates its result."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:111
msgid "Expression Type"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:113
msgid "An expression type is a :ref:`data type <03_ride-language/02_data-types:Data Types>` of the expression result."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:117
msgid "The expression that consists of a single constant."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:123
msgid "The expression that consists of a single variable."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:129
msgid "The expression that consists of the constant :math:`7`, operators + and \\*, variable x and the size function call."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:136
msgid "Constants"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:138
msgid "A constant is a value that cannot be changed by the program during its execution."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:141
msgid "Examples"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:143
msgid "Below :math:`7` and \"apple\" are constants."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:150
msgid "Variables"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:152
msgid "These are declared and initialized with the let keyword."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:159
msgid "In Ride, you can only declare a variable along with a value assignment. The = sign must be followed by an expression. The value of the variable is the expression result. Ride variables are immutable: the value of a variable cannot be changed after it is defined. Ride is strongly typed and the variable's type is inferred from the value. Ride allows you to define variables globally, inside any function, or even inside a variable definition."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:176
msgid "Lazy Variables"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:178
msgid "Let keyword defines a variable with lazy evaluation: the value of a variable is evaluated the first time it is used. Let's see an example:"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:185
msgid "Ride allows you to define variables globally, inside any function, or even inside a variable definition."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:197
msgid "The function above returns true, but variable d won't be initialized because unused lazy variables are not evaluated. Since a function is a definition and not an expression, you can assign a function value to a variable but not the function itself."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:205
msgid "Strict Variables"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:207
msgid "The strict keyword defines a variable with strict (eager) evaluation. Unlike lazy variables defined with let, a strict variable is evaluated immediately when script execution reaches it, that is, before the next expression. Strict variables can only be used inside another definition, for example, inside the body of a function. A strict variable will not be evaluated if it is defined inside another definition that is not used: for example, inside a function that has not been called. Strict variables are suitable for :ref:`dApp-to-dApp invocation <03_ride-language/07_dapp-to-app-invocation:dApp-to-App Invocation>` as they ensure executing callable functions and applying their actions in the right order. Let's see an example:"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:222
msgid "In this example,  balanceBefore and balanceAfter may differ because payments to dApp2 and actions performed by the bar callable function can affect the balance."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:225
#: ../../03_ride-language/01_syntax-basics.rst:229
msgid "Built-in Variables"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:227
msgid "The Standard library defines built-in variables that can be used in scripts."
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
#: ../../_static/03_ride-language/tables/164_BinaryEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/165_BooleanEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/166_Burn-Fields.csv:1
#: ../../_static/03_ride-language/tables/167_DeleteEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/168_IntegerEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
#: ../../_static/03_ride-language/tables/171_LeaseCancel-Fields.csv:1
#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/174_SponsorFee-Fields.csv:1
#: ../../_static/03_ride-language/tables/175_StringEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/177_Address-Fields.csv:1
#: ../../_static/03_ride-language/tables/178_Alias-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/180_AssetPair-Fields.csv:1
#: ../../_static/03_ride-language/tables/181_AttachedPayment-Fields.csv:1
#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/187_Transfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "#"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
#: ../../_static/03_ride-language/tables/069_dApp-to-dApp-Invocation-Functions.csv:1
#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
#: ../../_static/03_ride-language/tables/094_Encoding-Functions.csv:1
#: ../../_static/03_ride-language/tables/098_Exception-Functions.csv:1
#: ../../_static/03_ride-language/tables/100_Hashing-Functions.csv:1
#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
#: ../../_static/03_ride-language/tables/105_sha256.csv:1
#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
#: ../../_static/03_ride-language/tables/130_Rounding-Variables.csv:1
#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
#: ../../_static/03_ride-language/tables/145_Union-Functions.csv:1
#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
#: ../../_static/03_ride-language/tables/164_BinaryEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/165_BooleanEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/166_Burn-Fields.csv:1
#: ../../_static/03_ride-language/tables/167_DeleteEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/168_IntegerEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
#: ../../_static/03_ride-language/tables/171_LeaseCancel-Fields.csv:1
#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/174_SponsorFee-Fields.csv:1
#: ../../_static/03_ride-language/tables/175_StringEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
#: ../../_static/03_ride-language/tables/177_Address-Fields.csv:1
#: ../../_static/03_ride-language/tables/178_Alias-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/180_AssetPair-Fields.csv:1
#: ../../_static/03_ride-language/tables/181_AttachedPayment-Fields.csv:1
#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/187_Transfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/194_Usage.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/202_Network.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/206_Genesis.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "Name"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
#: ../../_static/03_ride-language/tables/004_Arithmetic-Operators.csv:1
#: ../../_static/03_ride-language/tables/005_Comparison-Operators.csv:1
#: ../../_static/03_ride-language/tables/006_Equality-Operators.csv:1
#: ../../_static/03_ride-language/tables/007_Local-Definition-Operators.csv:1
#: ../../_static/03_ride-language/tables/008_Conditional-Operators.csv:1
#: ../../_static/03_ride-language/tables/009_List-Operators.csv:1
#: ../../_static/03_ride-language/tables/010_Unary-Operators.csv:1
#: ../../_static/03_ride-language/tables/011_Logical-Operators.csv:1
#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
#: ../../_static/03_ride-language/tables/013_Parameters.csv:1
#: ../../_static/03_ride-language/tables/014_Parameters.csv:1
#: ../../_static/03_ride-language/tables/015_Parameters.csv:1
#: ../../_static/03_ride-language/tables/016_Parameters.csv:1
#: ../../_static/03_ride-language/tables/017_Parameters.csv:1
#: ../../_static/03_ride-language/tables/018_Parameters.csv:1
#: ../../_static/03_ride-language/tables/019_Parameters.csv:1
#: ../../_static/03_ride-language/tables/020_Parameters.csv:1
#: ../../_static/03_ride-language/tables/021_Parameters.csv:1
#: ../../_static/03_ride-language/tables/022_Parameters.csv:1
#: ../../_static/03_ride-language/tables/023_Parameters.csv:1
#: ../../_static/03_ride-language/tables/024_Parameters.csv:1
#: ../../_static/03_ride-language/tables/025_Parameters.csv:1
#: ../../_static/03_ride-language/tables/026_Parameters.csv:1
#: ../../_static/03_ride-language/tables/027_Parameters.csv:1
#: ../../_static/03_ride-language/tables/028_Parameters.csv:1
#: ../../_static/03_ride-language/tables/029_Parameters.csv:1
#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
#: ../../_static/03_ride-language/tables/031_Parameters.csv:1
#: ../../_static/03_ride-language/tables/032_Parameters.csv:1
#: ../../_static/03_ride-language/tables/033_Parameters.csv:1
#: ../../_static/03_ride-language/tables/034_Parameters.csv:1
#: ../../_static/03_ride-language/tables/035_Parameters.csv:1
#: ../../_static/03_ride-language/tables/036_Parameters.csv:1
#: ../../_static/03_ride-language/tables/037_Parameters.csv:1
#: ../../_static/03_ride-language/tables/038_Parameters.csv:1
#: ../../_static/03_ride-language/tables/039_Parameters.csv:1
#: ../../_static/03_ride-language/tables/040_Parameters.csv:1
#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
#: ../../_static/03_ride-language/tables/042_Parameters.csv:1
#: ../../_static/03_ride-language/tables/043_Parameters.csv:1
#: ../../_static/03_ride-language/tables/044_Parameters.csv:1
#: ../../_static/03_ride-language/tables/045_Parameters.csv:1
#: ../../_static/03_ride-language/tables/046_Parameters.csv:1
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
#: ../../_static/03_ride-language/tables/048_Parameters.csv:1
#: ../../_static/03_ride-language/tables/049_Parameters.csv:1
#: ../../_static/03_ride-language/tables/050_Parameters.csv:1
#: ../../_static/03_ride-language/tables/051_Parameters.csv:1
#: ../../_static/03_ride-language/tables/052_Parameters.csv:1
#: ../../_static/03_ride-language/tables/053_Parameters.csv:1
#: ../../_static/03_ride-language/tables/054_Parameters.csv:1
#: ../../_static/03_ride-language/tables/055_Parameters.csv:1
#: ../../_static/03_ride-language/tables/056_Parameters.csv:1
#: ../../_static/03_ride-language/tables/057_Parameters.csv:1
#: ../../_static/03_ride-language/tables/058_Parameters.csv:1
#: ../../_static/03_ride-language/tables/059_Parameters.csv:1
#: ../../_static/03_ride-language/tables/060_Parameters.csv:1
#: ../../_static/03_ride-language/tables/061_Parameters.csv:1
#: ../../_static/03_ride-language/tables/062_Parameters.csv:1
#: ../../_static/03_ride-language/tables/063_Parameters.csv:1
#: ../../_static/03_ride-language/tables/064_Parameters.csv:1
#: ../../_static/03_ride-language/tables/065_Parameters.csv:1
#: ../../_static/03_ride-language/tables/066_Parameters.csv:1
#: ../../_static/03_ride-language/tables/067_Parameters.csv:1
#: ../../_static/03_ride-language/tables/068_Parameters.csv:1
#: ../../_static/03_ride-language/tables/069_dApp-to-dApp-Invocation-Functions.csv:1
#: ../../_static/03_ride-language/tables/070_Parameters.csv:1
#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
#: ../../_static/03_ride-language/tables/072_Parameters.csv:1
#: ../../_static/03_ride-language/tables/073_Parameters.csv:1
#: ../../_static/03_ride-language/tables/074_Parameters.csv:1
#: ../../_static/03_ride-language/tables/075_Parameters.csv:1
#: ../../_static/03_ride-language/tables/076_Parameters.csv:1
#: ../../_static/03_ride-language/tables/077_Parameters.csv:1
#: ../../_static/03_ride-language/tables/078_Parameters.csv:1
#: ../../_static/03_ride-language/tables/079_Parameters.csv:1
#: ../../_static/03_ride-language/tables/080_Parameters.csv:1
#: ../../_static/03_ride-language/tables/081_Parameters.csv:1
#: ../../_static/03_ride-language/tables/082_Parameters.csv:1
#: ../../_static/03_ride-language/tables/083_Parameters.csv:1
#: ../../_static/03_ride-language/tables/084_Parameters.csv:1
#: ../../_static/03_ride-language/tables/085_Parameters.csv:1
#: ../../_static/03_ride-language/tables/086_Parameters.csv:1
#: ../../_static/03_ride-language/tables/087_Parameters.csv:1
#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
#: ../../_static/03_ride-language/tables/089_Parameters.csv:1
#: ../../_static/03_ride-language/tables/090_Parameters.csv:1
#: ../../_static/03_ride-language/tables/091_Parameters.csv:1
#: ../../_static/03_ride-language/tables/092_Parameters.csv:1
#: ../../_static/03_ride-language/tables/093_Parameters.csv:1
#: ../../_static/03_ride-language/tables/094_Encoding-Functions.csv:1
#: ../../_static/03_ride-language/tables/095_Parameters.csv:1
#: ../../_static/03_ride-language/tables/096_Parameters.csv:1
#: ../../_static/03_ride-language/tables/097_Parameters.csv:1
#: ../../_static/03_ride-language/tables/098_Exception-Functions.csv:1
#: ../../_static/03_ride-language/tables/099_Parameters.csv:1
#: ../../_static/03_ride-language/tables/100_Hashing-Functions.csv:1
#: ../../_static/03_ride-language/tables/102_Parameters.csv:1
#: ../../_static/03_ride-language/tables/104_Parameters.csv:1
#: ../../_static/03_ride-language/tables/106_Parameters.csv:1
#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
#: ../../_static/03_ride-language/tables/108_Parameters.csv:1
#: ../../_static/03_ride-language/tables/109_Parameters.csv:1
#: ../../_static/03_ride-language/tables/110_Parameters.csv:1
#: ../../_static/03_ride-language/tables/111_Parameters.csv:1
#: ../../_static/03_ride-language/tables/112_Parameters.csv:1
#: ../../_static/03_ride-language/tables/113_Parameters.csv:1
#: ../../_static/03_ride-language/tables/114_Parameters.csv:1
#: ../../_static/03_ride-language/tables/115_Parameters.csv:1
#: ../../_static/03_ride-language/tables/116_Parameters.csv:1
#: ../../_static/03_ride-language/tables/117_Parameters.csv:1
#: ../../_static/03_ride-language/tables/118_Parameters.csv:1
#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
#: ../../_static/03_ride-language/tables/120_Parameters.csv:1
#: ../../_static/03_ride-language/tables/121_Parameters.csv:1
#: ../../_static/03_ride-language/tables/122_Parameters.csv:1
#: ../../_static/03_ride-language/tables/123_Parameters.csv:1
#: ../../_static/03_ride-language/tables/124_Parameters.csv:1
#: ../../_static/03_ride-language/tables/125_Parameters.csv:1
#: ../../_static/03_ride-language/tables/126_Parameters.csv:1
#: ../../_static/03_ride-language/tables/127_Parameters.csv:1
#: ../../_static/03_ride-language/tables/128_Parameters.csv:1
#: ../../_static/03_ride-language/tables/129_Parameters.csv:1
#: ../../_static/03_ride-language/tables/130_Rounding-Variables.csv:1
#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
#: ../../_static/03_ride-language/tables/133_Parameters.csv:1
#: ../../_static/03_ride-language/tables/134_Parameters.csv:1
#: ../../_static/03_ride-language/tables/135_Parameters.csv:1
#: ../../_static/03_ride-language/tables/136_Parameters.csv:1
#: ../../_static/03_ride-language/tables/137_Parameters.csv:1
#: ../../_static/03_ride-language/tables/138_Parameters.csv:1
#: ../../_static/03_ride-language/tables/139_Parameters.csv:1
#: ../../_static/03_ride-language/tables/140_Parameters.csv:1
#: ../../_static/03_ride-language/tables/141_Parameters.csv:1
#: ../../_static/03_ride-language/tables/142_Parameters.csv:1
#: ../../_static/03_ride-language/tables/143_Parameters.csv:1
#: ../../_static/03_ride-language/tables/144_Parameters.csv:1
#: ../../_static/03_ride-language/tables/145_Union-Functions.csv:1
#: ../../_static/03_ride-language/tables/146_Parameters.csv:1
#: ../../_static/03_ride-language/tables/147_Parameters.csv:1
#: ../../_static/03_ride-language/tables/148_Parameters.csv:1
#: ../../_static/03_ride-language/tables/149_Parameters.csv:1
#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
#: ../../_static/03_ride-language/tables/152_Parameters.csv:1
#: ../../_static/03_ride-language/tables/153_Parameters.csv:1
#: ../../_static/03_ride-language/tables/154_Parameters.csv:1
#: ../../_static/03_ride-language/tables/156_Parameters.csv:1
#: ../../_static/03_ride-language/tables/158_Parameters.csv:1
#: ../../_static/03_ride-language/tables/160_Parameters.csv:1
#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
#: ../../_static/03_ride-language/tables/164_BinaryEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/165_BooleanEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/166_Burn-Fields.csv:1
#: ../../_static/03_ride-language/tables/167_DeleteEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/168_IntegerEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
#: ../../_static/03_ride-language/tables/171_LeaseCancel-Fields.csv:1
#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/174_SponsorFee-Fields.csv:1
#: ../../_static/03_ride-language/tables/175_StringEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
#: ../../_static/03_ride-language/tables/177_Address-Fields.csv:1
#: ../../_static/03_ride-language/tables/178_Alias-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/180_AssetPair-Fields.csv:1
#: ../../_static/03_ride-language/tables/181_AttachedPayment-Fields.csv:1
#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/187_Transfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/194_Usage.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/202_Network.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/206_Genesis.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/208_Iterations-with-FOLD.csv:1
#: ../../_static/03_ride-language/tables/209_Invoke-and-ReentrantInvoke-Functions.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "Description"
msgstr ""

#: ../../_static/03_ride-language/tables/002_List-Operations.csv:1
#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
#: ../../_static/03_ride-language/tables/098_Exception-Functions.csv:1
#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
#: ../../_static/03_ride-language/tables/131_Example.csv:1
#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
#: ../../_static/03_ride-language/tables/145_Union-Functions.csv:1
#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/164_BinaryEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/165_BooleanEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/166_Burn-Fields.csv:1
#: ../../_static/03_ride-language/tables/167_DeleteEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/168_IntegerEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
#: ../../_static/03_ride-language/tables/171_LeaseCancel-Fields.csv:1
#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/174_SponsorFee-Fields.csv:1
#: ../../_static/03_ride-language/tables/175_StringEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/177_Address-Fields.csv:1
#: ../../_static/03_ride-language/tables/178_Alias-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/180_AssetPair-Fields.csv:1
#: ../../_static/03_ride-language/tables/181_AttachedPayment-Fields.csv:1
#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/187_Transfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/206_Genesis.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid ":math:`1`"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "Buy"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid ":ref:`Order <02_decentralchain/06_order:Order>` type."
msgstr ""

#: ../../_static/03_ride-language/tables/002_List-Operations.csv:1
#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
#: ../../_static/03_ride-language/tables/131_Example.csv:1
#: ../../_static/03_ride-language/tables/145_Union-Functions.csv:1
#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/164_BinaryEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/165_BooleanEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/166_Burn-Fields.csv:1
#: ../../_static/03_ride-language/tables/168_IntegerEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/174_SponsorFee-Fields.csv:1
#: ../../_static/03_ride-language/tables/175_StringEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/180_AssetPair-Fields.csv:1
#: ../../_static/03_ride-language/tables/181_AttachedPayment-Fields.csv:1
#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/187_Transfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid ":math:`2`"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "\\1) CEILING. 2) DOWN. 3) FLOOR. 4) HALFEVEN. 5) HALFUP."
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "Rounding methods used in the :ref:`math functions <03_ride-language/03_functions:Math Functions>` fraction, log, pow."
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
#: ../../_static/03_ride-language/tables/094_Encoding-Functions.csv:1
#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
#: ../../_static/03_ride-language/tables/131_Example.csv:1
#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid ":math:`3`"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
msgid "height"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "Blockchain height at the script execution time."
msgstr ""

#: ../../_static/03_ride-language/tables/002_List-Operations.csv:1
#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/194_Usage.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid ":math:`4`"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "lastBlock"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "Information about the last :ref:`block <02_decentralchain/04_block:Block>` of the blockchain at the script execution time."
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
#: ../../_static/03_ride-language/tables/131_Example.csv:1
#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid ":math:`5`"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "nil"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "Variable that contains an empty list. The variable is used for creating :ref:`lists <03_ride-language/02_data-types:List>`. For example, instead of: let a = [5,6]."
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
#: ../../_static/03_ride-language/tables/131_Example.csv:1
#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid ":math:`6`"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "\\1) NOALG. 2) MD5. 3) SHA1. 4) SHA224. 5) SHA256. 6) SHA384. 7) SHA512. 8) SHA3224. 9) SHA3256. 10) SHA3384. 11) SHA3512."
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "Variables that are passed as the first parameter to the rsaVerify function."
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/194_Usage.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid ":math:`7`"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "Sell"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "Order type."
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/202_Network.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid ":math:`8`"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "this"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "\\1) For a :ref:`dApp script <03_ride-language/04_script-types:dApp Script>` or an :ref:`account script <03_ride-language/04_script-types:Account Script>`: the :ref:`Address <03_ride-language/05_structures:Address>` structure. 2) For an :ref:`asset script <03_ride-language/04_script-types:Asset Script>`: the :ref:`asset <03_ride-language/03_functions:Math Functions>` structure."
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/202_Network.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid ":math:`9`"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "tx"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid ":ref:`Transaction <02_decentralchain/03_transaction:Transaction>` or order."
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
#: ../../_static/03_ride-language/tables/094_Encoding-Functions.csv:1
#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
#: ../../_static/03_ride-language/tables/105_sha256.csv:1
#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/194_Usage.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`10`"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "unit"
msgstr ""

#: ../../_static/03_ride-language/tables/003_Built-in-Variables.csv:1
msgid "Variable that contains an object of Unit type."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:236
msgid "Operators"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:239
#: ../../03_ride-language/01_syntax-basics.rst:241
msgid "Arithmetic Operators"
msgstr ""

#: ../../_static/03_ride-language/tables/004_Arithmetic-Operators.csv:1
#: ../../_static/03_ride-language/tables/005_Comparison-Operators.csv:1
#: ../../_static/03_ride-language/tables/006_Equality-Operators.csv:1
#: ../../_static/03_ride-language/tables/007_Local-Definition-Operators.csv:1
#: ../../_static/03_ride-language/tables/008_Conditional-Operators.csv:1
#: ../../_static/03_ride-language/tables/009_List-Operators.csv:1
#: ../../_static/03_ride-language/tables/010_Unary-Operators.csv:1
#: ../../_static/03_ride-language/tables/011_Logical-Operators.csv:1
msgid "Operator"
msgstr ""

#: ../../_static/03_ride-language/tables/004_Arithmetic-Operators.csv:1
msgid "\\+"
msgstr ""

#: ../../_static/03_ride-language/tables/004_Arithmetic-Operators.csv:1
msgid "Addition"
msgstr ""

#: ../../_static/03_ride-language/tables/004_Arithmetic-Operators.csv:1
#: ../../_static/03_ride-language/tables/010_Unary-Operators.csv:1
msgid "\\-"
msgstr ""

#: ../../_static/03_ride-language/tables/004_Arithmetic-Operators.csv:1
msgid "Subtraction"
msgstr ""

#: ../../_static/03_ride-language/tables/004_Arithmetic-Operators.csv:1
msgid "\\*"
msgstr ""

#: ../../_static/03_ride-language/tables/004_Arithmetic-Operators.csv:1
msgid "Multiplication"
msgstr ""

#: ../../_static/03_ride-language/tables/004_Arithmetic-Operators.csv:1
msgid "/"
msgstr ""

#: ../../_static/03_ride-language/tables/004_Arithmetic-Operators.csv:1
msgid "Division"
msgstr ""

#: ../../_static/03_ride-language/tables/004_Arithmetic-Operators.csv:1
msgid "%"
msgstr ""

#: ../../_static/03_ride-language/tables/004_Arithmetic-Operators.csv:1
msgid "Remainder"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:247
msgid "The / operator uses the FLOOR rounding method."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:250
#: ../../03_ride-language/01_syntax-basics.rst:252
msgid "Comparison Operators"
msgstr ""

#: ../../_static/03_ride-language/tables/005_Comparison-Operators.csv:1
msgid "<"
msgstr ""

#: ../../_static/03_ride-language/tables/005_Comparison-Operators.csv:1
msgid "Less than"
msgstr ""

#: ../../_static/03_ride-language/tables/005_Comparison-Operators.csv:1
msgid ">"
msgstr ""

#: ../../_static/03_ride-language/tables/005_Comparison-Operators.csv:1
msgid "Greater than"
msgstr ""

#: ../../_static/03_ride-language/tables/005_Comparison-Operators.csv:1
msgid "<="
msgstr ""

#: ../../_static/03_ride-language/tables/005_Comparison-Operators.csv:1
msgid "Less than or equal"
msgstr ""

#: ../../_static/03_ride-language/tables/005_Comparison-Operators.csv:1
msgid ">="
msgstr ""

#: ../../_static/03_ride-language/tables/005_Comparison-Operators.csv:1
msgid "Greater than or equal"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:259
#: ../../03_ride-language/01_syntax-basics.rst:261
msgid "Equality Operators"
msgstr ""

#: ../../_static/03_ride-language/tables/006_Equality-Operators.csv:1
msgid "=="
msgstr ""

#: ../../_static/03_ride-language/tables/006_Equality-Operators.csv:1
msgid "Equality"
msgstr ""

#: ../../_static/03_ride-language/tables/006_Equality-Operators.csv:1
msgid "!="
msgstr ""

#: ../../_static/03_ride-language/tables/006_Equality-Operators.csv:1
msgid "Inequality"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:268
#: ../../03_ride-language/01_syntax-basics.rst:270
msgid "Local Definition Operators"
msgstr ""

#: ../../_static/03_ride-language/tables/007_Local-Definition-Operators.csv:1
msgid "func"
msgstr ""

#: ../../_static/03_ride-language/tables/007_Local-Definition-Operators.csv:1
msgid "Function local definition."
msgstr ""

#: ../../_static/03_ride-language/tables/007_Local-Definition-Operators.csv:1
msgid "let"
msgstr ""

#: ../../_static/03_ride-language/tables/007_Local-Definition-Operators.csv:1
msgid "Lazy definition of a variable."
msgstr ""

#: ../../_static/03_ride-language/tables/007_Local-Definition-Operators.csv:1
msgid "strict"
msgstr ""

#: ../../_static/03_ride-language/tables/007_Local-Definition-Operators.csv:1
msgid ":ref:`Strict definition <03_ride-language/01_syntax-basics:Variables>` of a variable."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:277
#: ../../03_ride-language/01_syntax-basics.rst:279
msgid "Conditional Operators"
msgstr ""

#: ../../_static/03_ride-language/tables/008_Conditional-Operators.csv:1
msgid "if-then-else"
msgstr ""

#: ../../_static/03_ride-language/tables/008_Conditional-Operators.csv:1
msgid "Conditional statement."
msgstr ""

#: ../../_static/03_ride-language/tables/008_Conditional-Operators.csv:1
msgid "match-case"
msgstr ""

#: ../../_static/03_ride-language/tables/008_Conditional-Operators.csv:1
msgid ":ref:`Spot a type from union <03_ride-language/01_syntax-basics:Match-Case>`."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:286
#: ../../03_ride-language/01_syntax-basics.rst:288
msgid "List Operators"
msgstr ""

#: ../../_static/03_ride-language/tables/002_List-Operations.csv:1
#: ../../_static/03_ride-language/tables/009_List-Operators.csv:1
msgid "++"
msgstr ""

#: ../../_static/03_ride-language/tables/009_List-Operators.csv:1
msgid "Concatenation."
msgstr ""

#: ../../_static/03_ride-language/tables/002_List-Operations.csv:1
#: ../../_static/03_ride-language/tables/009_List-Operators.csv:1
msgid ":+"
msgstr ""

#: ../../_static/03_ride-language/tables/009_List-Operators.csv:1
msgid "Adding the element to the end of the list."
msgstr ""

#: ../../_static/03_ride-language/tables/009_List-Operators.csv:1
msgid "\\:\\:"
msgstr ""

#: ../../_static/03_ride-language/tables/009_List-Operators.csv:1
msgid "Adding the element to the beginning of the list."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:294
msgid "See examples of the :ref:`list <03_ride-language/02_data-types:List>` article."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:297
#: ../../03_ride-language/01_syntax-basics.rst:299
msgid "Unary Operators"
msgstr ""

#: ../../_static/03_ride-language/tables/010_Unary-Operators.csv:1
msgid "Unary minus"
msgstr ""

#: ../../_static/03_ride-language/tables/010_Unary-Operators.csv:1
msgid "!"
msgstr ""

#: ../../_static/03_ride-language/tables/010_Unary-Operators.csv:1
msgid "Logical negation"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:306
#: ../../03_ride-language/01_syntax-basics.rst:308
msgid "Logical Operators"
msgstr ""

#: ../../_static/03_ride-language/tables/011_Logical-Operators.csv:1
msgid "&&"
msgstr ""

#: ../../_static/03_ride-language/tables/011_Logical-Operators.csv:1
msgid "Logical AND"
msgstr ""

#: ../../_static/03_ride-language/tables/011_Logical-Operators.csv:1
msgid "||"
msgstr ""

#: ../../_static/03_ride-language/tables/011_Logical-Operators.csv:1
msgid "Logical OR"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:315
msgid "Match-Case"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:317
msgid "match-case operator is used to spot a certain type from :ref:`union <03_ride-language/02_data-types:Union>` or :ref:`any <03_ride-language/02_data-types:Any>` type . The spotting is required to perform certain operations. Let's review the following example."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:326
msgid "In this example, if:"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:328
msgid "The type of transaction is transfer transaction or exchange transaction."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:329
msgid "Amount field value is greater than :math:`100`."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:331
msgid "Then it will be sent to the blockchain. If the transaction has a different type and/or amount field value is lesser than 100, then it will be rejected."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:334
msgid "Possible Issue"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:336
msgid "Let's review the following code."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:350
msgid "In this example we are using version 2 of Ride standard library, STDLIB_VERSION 2, and we want to reject any funds transfer from our account. In order to do this, we are returning false for:"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:352
#: ../../03_ride-language/05_structures.rst:855
msgid "TransferTransaction"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:353
#: ../../03_ride-language/05_structures.rst:874
msgid "ExchangeTransaction"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:354
#: ../../03_ride-language/05_structures.rst:912
msgid "MassTransferTransaction"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:356
msgid "Transactions of other types (for example transactions that do not transfer funds) are being sent to the blockchain. But Ride is developing rapidly, and  new transaction types are emerging. Features of invoke script transaction which is not supported by Ride v2 include attaching payments to transfer tokens to the account of the called dApp. This means that the InvokeScriptTransaction won't be caught by the first case. It will pass to the default branch case _ => and sent to blockchain. As a result, the funds could be transferred from the account instead of the transfers being prohibited like we wanted."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:359
msgid "Solution"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:361
msgid "To prevent the reviewed issue, it is recommended to return false inside of the default case. Then for the entities, not listed in previous branches, sending information to the blockchain will be prohibited. Below is the sample of script which rejects any funds transfer from account, but allows all other transactions existing in Ride v2. Usage of case _ => false rejects any other transactions, not supported by the Ride v2 (i.e. invoke script transaction)."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:377
#: ../../03_ride-language/03_functions.rst:3
msgid "Functions"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:379
msgid "Functions in Ride can only be used after they are declared."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:392
msgid "The type (Int, String, etc) comes after the argument’s name."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:394
msgid "As in many other languages, functions should not be overloaded. It helps to keep the code simple, readable and maintainable."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:407
msgid "The callable function will not be called either, because variable a is unused."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:409
msgid "Unlike most languages, variable shadowing is not allowed. Declaring a variable with a name that is already used in a parent scope will result in a compilation error."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:411
msgid "Functions should be defined before they are used. Functions can be invoked in prefix and postfix order:"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:422
msgid "In these examples :math:`a1` is the same as :math:`a2` and :math:`b1` is the same as :math:`b2`."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:424
msgid "Learn more about :ref:`functions <03_ride-language/03_functions:Functions>`."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:427
msgid "Exceptions"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:429
msgid "There is no exception handling in Ride: after an exception has been thrown, the script execution fails. The transaction can be either discarded or saved on the blockchain as failed, see the :ref:`transaction validation <02_decentralchain/03_transaction:Transaction Validation>` article for details The throw function will terminate script execution immediately, with the provided text. There is no way to catch thrown exceptions."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:436
msgid "The idea of throw is to stop execution and send useful feedback to the user."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:446
msgid "Comments"
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:448
msgid "To write comments use the pound sign."
msgstr ""

#: ../../03_ride-language/01_syntax-basics.rst:454
msgid "There are no multi-line comments."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:3
#: ../../03_ride-language/02_data-types.rst:5
msgid "Data Types"
msgstr ""

#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
msgid "Data type name"
msgstr ""

#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
msgid "Ride keyword"
msgstr ""

#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
msgid ":ref:`Big Integer <03_ride-language/02_data-types:BigInt>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:33
#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
msgid "BigInt"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:190
#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
#: ../../_static/03_ride-language/tables/165_BooleanEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid ":ref:`Boolean <03_ride-language/02_data-types:Boolean>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:68
#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
msgid "Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
msgid ":ref:`Byte array <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:73
#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
msgid "ByteVector"
msgstr ""

#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
msgid ":ref:`Integer <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid ":ref:`Int <02_decentralchain/09_protocol:Blockchain Data Types>`"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:193
#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
#: ../../_static/03_ride-language/tables/164_BinaryEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/165_BooleanEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/167_DeleteEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/168_IntegerEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/175_StringEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/178_Alias-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid ":ref:`String <03_ride-language/02_data-types:String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
msgid ":ref:`String<02_decentralchain/09_protocol:Blockchain Data Types>`"
msgstr ""

#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
msgid ":ref:`Empty value <03_ride-language/02_data-types:Unit>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:134
#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
msgid "Unit"
msgstr ""

#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid ":ref:`List <03_ride-language/02_data-types:List>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:155
#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
#: ../../_static/03_ride-language/tables/108_Parameters.csv:1
#: ../../_static/03_ride-language/tables/109_Parameters.csv:1
#: ../../_static/03_ride-language/tables/110_Parameters.csv:1
#: ../../_static/03_ride-language/tables/111_Parameters.csv:1
#: ../../_static/03_ride-language/tables/112_Parameters.csv:1
#: ../../_static/03_ride-language/tables/113_Parameters.csv:1
#: ../../_static/03_ride-language/tables/114_Parameters.csv:1
#: ../../_static/03_ride-language/tables/115_Parameters.csv:1
#: ../../_static/03_ride-language/tables/116_Parameters.csv:1
#: ../../_static/03_ride-language/tables/117_Parameters.csv:1
#: ../../_static/03_ride-language/tables/118_Parameters.csv:1
msgid "List"
msgstr ""

#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid ":ref:`Tuple <03_ride-language/02_data-types:Tuple>`"
msgstr ""

#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
msgid "—"
msgstr ""

#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
msgid ":ref:`Union <03_ride-language/02_data-types:Union>`"
msgstr ""

#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid ":ref:`Structure <03_ride-language/05_structures:Structures>`"
msgstr ""

#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
msgid ":ref:`Arbitrary type <03_ride-language/02_data-types:Any>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:14
#: ../../_static/03_ride-language/tables/001_Data-Types.csv:1
msgid "Any"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:11
msgid "For each value, depending on the data type, the weight is determined. The weight is used in limitations on creating and comparing values. For more information see the :ref:`data weight <03_ride-language/07_dapp-to-app-invocation:Data Weight>`."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:16
msgid "Any is an arbitrary data type. It is a common supertype of all types: an Any type value can be a string, a number, unit, a structure, a list, a tuple, etc."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:35
msgid "BigInt is a special numeric :ref:`data type <03_ride-language/02_data-types:Data Types>` designed to handle values outside the range of :ref:`Int <03_ride-language/02_data-types:Int>` and to perform high accuracy calculations. BigInt variable has a size of :math:`64` bytes (:math:`512` bits) and contains an integer between :math:`–2511` to :math:`2511–1`, inclusive. The weight of the value is :math:`64`. A BigInt variable can only be used inside a script. A :ref:`callable function <03_ride-language/03_functions:Callable Functions>` does not accept arguments of BigInt type and does not return a value of BigInt type. You can pass a big integer value as a string, then use the parseBigInt or parseBigIntValue functions."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:40
msgid "BigInt Operations"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:42
msgid "The following operators support BigInt values:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:44
msgid "Arithmetic operators: +, -, \\*, /, %, unary minus."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:45
msgid "Comparison operators: <, >, <=, and >=."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:46
msgid "Equality operators: == and !=."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:49
msgid "BigInt Functions"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:51
msgid "The following functions operate BigInt values:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:53
#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid ":ref:`fraction(BigInt, BigInt, BigInt): BigInt <03_ride-language/03_functions:fraction(BigInt, BigInt, BigInt): BigInt>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:54
#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid ":ref:`fraction(BigInt, BigInt, BigInt, Union): BigInt <03_ride-language/03_functions:fraction(BigInt, BigInt, BigInt, Union): BigInt>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:55
#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid ":ref:`log(BigInt, Int, BigInt, Int, Int, Union): BigInt <03_ride-language/03_functions:log(BigInt, Int, BigInt, Int, Int, Union): BigInt>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:56
#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid ":ref:`max(List[BigInt]): BigInt <03_ride-language/03_functions:max(List[BigInt]): BigInt>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:57
#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid ":ref:`median(List[BigInt]): BigInt <03_ride-language/03_functions:median(List[BigInt]): BigInt>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:58
#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid ":ref:`min(List[BigInt]): BigInt <03_ride-language/03_functions:min(List[BigInt]): BigInt>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:59
#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid ":ref:`pow(BigInt, Int, BigInt, Int, Int, Union): BigInt <03_ride-language/03_functions:pow(BigInt, Int, BigInt, Int, Int, Union): BigInt>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:60
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`parseBigInt(String): BigInt|Unit <03_ride-language/03_functions:parseBigInt(String): BigInt|Unit>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:61
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`parseBigIntValue(String): BigInt <03_ride-language/03_functions:parseBigIntValue(String): BigInt>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:62
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toBigInt(ByteVector): BigInt <03_ride-language/03_functions:toBigInt(ByteVector): BigInt>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:63
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toBigInt(ByteVector, Int, Int): BigInt <03_ride-language/03_functions:toBigInt(ByteVector, Int, Int): BigInt>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:64
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toInt(BigInt): Int <03_ride-language/03_functions:toInt(BigInt): Int>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:65
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toString(BigInt): String <03_ride-language/03_functions:toString(BigInt): String>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:70
msgid "Boolean is a :ref:`data type <03_ride-language/02_data-types:Data Types>` that can have only the values true or false."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:75
msgid "ByteVector is a :ref:`data type <03_ride-language/02_data-types:Data Types>` for byte array."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:77
msgid "To assign a value to a ByteVector variable, you can use a string in Base16, Base58, or Base64 with the appropriate prefix:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:85
msgid "This method, unlike the fromBase16String, fromBase58String, and fromBase64String functions, does not increase the complexity of the script, since decoding is performed by the compiler. To convert :ref:`integer <03_ride-language/02_data-types:Int>`, :ref:`boolean <03_ride-language/02_data-types:Boolean>` and :ref:`string <03_ride-language/02_data-types:String>` values to a byte array use toBytes function:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:94
msgid "For more byte array functions, see the :ref:`Built-in Functions <03_ride-language/03_functions:Built-in Functions>`."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:97
msgid "ByteVector Limitations"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:99
msgid "The maximum size of a ByteVector variable is :math:`32,767` bytes. Exception: the bodyBytes field of :ref:`transaction structure <03_ride-language/05_structures:Transaction Structures>`. You can pass this value as an argument to the rsaVerify и sigVerify :ref:`verification functions <03_ride-language/03_functions:Verification Functions>` (but cannot concatenate with other byte arrays in case the limit is exceeded)."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:102
msgid "Int"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:104
msgid "Int is an integer :ref:`data type <03_ride-language/02_data-types:Data Types>`. The integer variable has the size of 8 bytes and stores an integer from :math:`-9,223,372,036,854,775,808` to :math:`9,223,372,036,854,775,807` inclusive."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:112
msgid "String"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:114
msgid "Strings are denoted only using double quotes. They are immutable, and for that reason, the substring function is very efficient: no copying is performed and no extra allocations are required. Strings are  UTF-8 encoded."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:121
msgid "String Limitations"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:123
msgid "The maximum size of a String variable is :math:`32,767` (:math:`1` character can take up to :math:`4` bytes)."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:126
#: ../../03_ride-language/02_data-types.rst:130
#: ../../03_ride-language/03_functions.rst:2614
#: ../../03_ride-language/03_functions.rst:2616
msgid "String Functions"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:128
msgid "The built-in functions for working with strings are presented in the following articles:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:131
#: ../../03_ride-language/03_functions.rst:871
#: ../../03_ride-language/03_functions.rst:873
msgid "Converting Functions"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:136
msgid "Unit is an empty value :ref:`data type <03_ride-language/02_data-types:Data Types>`. The empty value data type is similar to unit in Scala or to null in C#. Usually, built-in functions return unit value of type unit instead of null."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:143
msgid "Nothing"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:145
msgid "Nothing is the 'bottom type' of Ride’s type system. No value can be of type nothing, but an expression of type nothing can be used everywhere. In functional languages, this is essential for support for throwing an exception:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:157
msgid "The list data type may contain elements of various types, including nested lists. The maximum number of list items is :math:`1000`. The nesting depth is not limited. A list doesn't have any fields, but there are functions and operators in the Standard library that make it easier to work with fields."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:160
msgid "To prepend an element to an existing list, use the cons function or :: operator"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:161
msgid "To append an element, use the :+ operator"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:162
msgid "To concatenate :math:`2` lists, use the ++ operator"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:176
#: ../../03_ride-language/02_data-types.rst:180
msgid "List Operations"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:178
msgid "Lists support concatenation as well as adding items to the beginning and the end."
msgstr ""

#: ../../_static/03_ride-language/tables/002_List-Operations.csv:1
msgid "Operation"
msgstr ""

#: ../../_static/03_ride-language/tables/002_List-Operations.csv:1
msgid "Symbol"
msgstr ""

#: ../../_static/03_ride-language/tables/002_List-Operations.csv:1
#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
#: ../../_static/03_ride-language/tables/069_dApp-to-dApp-Invocation-Functions.csv:1
#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
#: ../../_static/03_ride-language/tables/094_Encoding-Functions.csv:1
#: ../../_static/03_ride-language/tables/098_Exception-Functions.csv:1
#: ../../_static/03_ride-language/tables/100_Hashing-Functions.csv:1
#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
#: ../../_static/03_ride-language/tables/105_sha256.csv:1
#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
#: ../../_static/03_ride-language/tables/145_Union-Functions.csv:1
#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid "Complexity"
msgstr ""

#: ../../_static/03_ride-language/tables/002_List-Operations.csv:1
msgid "Concatenation"
msgstr ""

#: ../../_static/03_ride-language/tables/002_List-Operations.csv:1
msgid "Adding the element to the end of the list (the list is on the left, the element is on the right)"
msgstr ""

#: ../../_static/03_ride-language/tables/002_List-Operations.csv:1
msgid "Adding the element to the beginning of the list (the element is on the left, the list is on the right)"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:186
#: ../../03_ride-language/02_data-types.rst:194
#: ../../03_ride-language/02_data-types.rst:202
#: ../../03_ride-language/02_data-types.rst:213
#: ../../03_ride-language/02_data-types.rst:222
msgid "Operation to be used:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:192
#: ../../03_ride-language/02_data-types.rst:200
msgid "Result: [1, 2, 3]"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:211
msgid "Result: [1, 2, \"3\", \"4\"]"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:220
msgid "Result: [1, 2, \"3\", \"4\", true]"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:229
msgid "Result: [[1, 2], 1, 2, \"3\", \"4\"]"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:232
#: ../../03_ride-language/03_functions.rst:2113
#: ../../03_ride-language/03_functions.rst:2115
msgid "List Functions"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:234
msgid "The built-in list functions are presented in the list functions article. Operations on a list can be implemented via the FOLD macro. The size of the list must be known in advance."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:237
msgid "List as Function Argument"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:239
msgid "A list, including nested one, can be a function argument:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:257
msgid "A callable function can take a list as an argument, but nested lists are not allowed. Here’s an example:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:280
msgid "Invoke Script transaction example:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:313
msgid "Tuple"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:315
msgid "A tuple is an ordered collection of elements. Elements can be of any type. The tuple can contain from :math:`2` to :math:`22` elements."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:317
msgid "Let's see some tuples:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:324
msgid "Result: :math:`42`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:326
msgid "And this one also:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:333
msgid "Result: true"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:336
msgid "Union"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:338
msgid "Union is a data type that unites :math:`2` or more data types. Union can combine primitive types, :ref:`lists <03_ride-language/02_data-types:List>`, :ref:`tuples <03_ride-language/02_data-types:Tuple>`, :ref:`structures <03_ride-language/05_structures:Structures>`. This type is a very convenient way to work with abstractions. Union(String | Unit) shows that the value is an intersection of these types."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:340
msgid "To get a value of a particular type from a Union, you can use:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:342
msgid ":ref:`Union functions <03_ride-language/03_functions:Union Functions>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:343
msgid ":ref:`match-case operator <03_ride-language/01_syntax-basics:Match-Case>`"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:349
msgid "The simplest example of Union types is given below (please bear in mind that defining custom user types in dApp code will be supported in future versions):"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:356
msgid "Let's see anoter example where each element of a List[Int|String] is a string or an integer."
msgstr ""

#: ../../03_ride-language/02_data-types.rst:365
msgid "Pattern Matching"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:367
msgid "Let’s revisit the example above:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:380
msgid "This is designed to check a value against value type:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:393
msgid "Type matching"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:395
msgid "This is a mechanism for knowing the type of a transaction:"
msgstr ""

#: ../../03_ride-language/02_data-types.rst:405
msgid "There are different types of transactions, if a transaction is TransferTransaction or MassTransferTransaction we use the corresponding field, while in all other cases, we will get :math:`0`."
msgstr ""

#: ../../03_ride-language/03_functions.rst:5
msgid "Functions in Ride are declared with func, function must be declared above the place of its usage. When declaring a function to the right of the \"=\" sign must be an :ref:`expression <03_ride-language/01_syntax-basics:Expressions>`. The value of the function is the expression result. Definition of the function with no parameters that returns an integer:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:15
msgid "Definition of a function with two parameters:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:23
msgid "Functions do have return types, this is inferred automatically by the compiler, so you don't have to declare them. There is no return statement in the language because Ride is expression-based (everything is an expression), and the last statement is a result of the function."
msgstr ""

#: ../../03_ride-language/03_functions.rst:36
msgid "The type (Int, String, etc) comes after the argument’s name. As in many other languages, functions should not be overloaded. It helps to keep the code simple, readable and maintainable. Functions can be invoked in prefix and postfix order:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:50
#: ../../03_ride-language/04_script-types.rst:147
msgid "Annotations"
msgstr ""

#: ../../03_ride-language/03_functions.rst:52
msgid "Functions can be without annotations, but they can also be with @Callable or @Verifier annotations. Annotated functions are used only in scripts of type DAPP. Here’s an example of @Callable:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:83
msgid "Annotations can bind some values to the function. In the example above, variable i was bound to the function pay and stored some fields of the invocation (the caller’s public key, address, payments attached to the invocation, fee, transaction ID etc.). Functions without annotations are not available from the outside. You can call them only inside other functions."
msgstr ""

#: ../../03_ride-language/03_functions.rst:86
msgid "Here’s an example of @Verifier:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:98
msgid "A function with the @Verifier annotation sets the rules for outgoing transactions of a decentralized application (dApp). Verifier functions cannot be called from the outside, but they are executed every time an attempt is made to send a transaction from a dApp. Verifier functions should always return a Boolean value as a result, depending on whether a transaction will be recorded to the blockchain or not."
msgstr ""

#: ../../03_ride-language/03_functions.rst:101
msgid "Expression scripts (with directive {-# CONTENT_TYPE EXPRESSION  #-} along with functions annotated by @Verifier should always return a boolean value. Depending on that value the transaction will be accepted (in case of true) or rejected (in case of false) by the blockchain."
msgstr ""

#: ../../03_ride-language/03_functions.rst:110
msgid "The Verifier function binds variable tx, which is an object with all fields of the current outgoing transaction. A maximum of one @Verifier() function can be defined in each dApp script."
msgstr ""

#: ../../03_ride-language/03_functions.rst:114
msgid "Callable Functions"
msgstr ""

#: ../../03_ride-language/03_functions.rst:116
msgid "The functions with the @Callable annotation become callable functions, since they can be called (or invoked) from other accounts: by an Invoke Script transaction or by a dApp. A callable function can perform actions: write data to the dApp data storage, transfer tokens from the dApp to other accounts, issue/release/burn tokens, and others. The result of a callable function is a tuple of two elements: a list of structures describing script actions and a value passed to the parent function in case of the :ref:`dApp-to-dApp invocation <03_ride-language/07_dapp-to-app-invocation:dApp-to-App Invocation>`."
msgstr ""

#: ../../03_ride-language/03_functions.rst:132
msgid "Every caller of giveAway function will receive as many Decentralites as their age. The ScriptTransfer structure sets the parameters of the token transfer. dApp also will store information about the fact of the transfer in its data storage. The IntegerEntry structure sets the parameters of the entry: key and value."
msgstr ""

#: ../../03_ride-language/03_functions.rst:135
msgid "Built-in Functions"
msgstr ""

#: ../../03_ride-language/03_functions.rst:137
msgid "A built-in function is a function of the standard library ."
msgstr ""

#: ../../03_ride-language/03_functions.rst:140
#: ../../03_ride-language/03_functions.rst:144
msgid "Account Data Storage Functions"
msgstr ""

#: ../../03_ride-language/03_functions.rst:142
msgid "Learn more about :ref:`account data storage <02_decentralchain/01_account:Account Data Storage>`."
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getBinary(Address|Alias, String): ByteVector|Unit <03_ride-language/03_functions:getBinary(Address|Alias, String): ByteVector|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets an array of bytes by key"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getBinary(String): ByteVector|Unit <03_ride-language/03_functions:getBinary(String): ByteVector|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets an array of bytes by key from dApp's own data storage"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getBinaryValue(Address|Alias, String): ByteVector <03_ride-language/03_functions:getBinaryValue(Address|Alias, String): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets an array of bytes by key. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getBinaryValue(String): ByteVector <03_ride-language/03_functions:getBinaryValue(String): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets an array of bytes by key from dApp's own data storage. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getBoolean(Address|Alias, String): Boolean|Unit <03_ride-language/03_functions:getBoolean(Address|Alias, String): Boolean|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets a boolean value by key"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getBoolean(String): Boolean|Unit <03_ride-language/03_functions:getBoolean(String): Boolean|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets a boolean value by key from dApp's own data storage"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getBooleanValue(Address|Alias, String): Boolean <03_ride-language/03_functions:getBooleanValue(Address|Alias, String): Boolean>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets a boolean value by key. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getBooleanValue(String): Boolean <03_ride-language/03_functions:getBooleanValue(String): Boolean>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets a boolean value by key from dApp's own data storage. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getInteger(Address|Alias, String): Int|Unit <03_ride-language/03_functions:getInteger(Address|Alias, String): Int|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets an integer by key"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getInteger(String): Int|Unit <03_ride-language/03_functions:getInteger(String): Int|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets an integer by key from dApp's own data storage"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getIntegerValue(Address|Alias, String): Int <03_ride-language/03_functions:getIntegerValue(Address|Alias, String): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets an integer by key. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getIntegerValue(String): Int <03_ride-language/03_functions:getIntegerValue(String): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets an integer by key from dApp's own data storage. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getString(Address|Alias, String): String|Unit <03_ride-language/03_functions:getString(Address|Alias, String): String|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets a string by key"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getString(String): String|Unit <03_ride-language/03_functions:getString(String): String|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets a string by key from dApp's own data storage"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getStringValue(Address|Alias, String): String <03_ride-language/03_functions:getStringValue(Address|Alias, String): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets a string by key. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`getStringValue(String): String <03_ride-language/03_functions:getStringValue(String): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Gets a string by key from dApp's own data storage. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid ":ref:`isDataStorageUntouched(Address|Alias): Boolean <03_ride-language/03_functions:isDataStorageUntouched(Address|Alias): Boolean>`"
msgstr ""

#: ../../_static/03_ride-language/tables/012_Account-Data-Storage-Functions.csv:1
msgid "Checks if the data storage of a given account never contained any entries"
msgstr ""

#: ../../03_ride-language/03_functions.rst:151
msgid "getBinary(Address|Alias, String): ByteVector|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:153
msgid "Gets an array of bytes by key."
msgstr ""

#: ../../03_ride-language/03_functions.rst:159
#: ../../03_ride-language/03_functions.rst:176
#: ../../03_ride-language/03_functions.rst:193
#: ../../03_ride-language/03_functions.rst:210
#: ../../03_ride-language/03_functions.rst:227
#: ../../03_ride-language/03_functions.rst:244
#: ../../03_ride-language/03_functions.rst:261
#: ../../03_ride-language/03_functions.rst:278
#: ../../03_ride-language/03_functions.rst:295
#: ../../03_ride-language/03_functions.rst:312
#: ../../03_ride-language/03_functions.rst:329
#: ../../03_ride-language/03_functions.rst:346
#: ../../03_ride-language/03_functions.rst:363
#: ../../03_ride-language/03_functions.rst:380
#: ../../03_ride-language/03_functions.rst:397
#: ../../03_ride-language/03_functions.rst:414
#: ../../03_ride-language/03_functions.rst:431
#: ../../03_ride-language/03_functions.rst:466
#: ../../03_ride-language/03_functions.rst:490
#: ../../03_ride-language/03_functions.rst:509
#: ../../03_ride-language/03_functions.rst:539
#: ../../03_ride-language/03_functions.rst:566
#: ../../03_ride-language/03_functions.rst:604
#: ../../03_ride-language/03_functions.rst:642
#: ../../03_ride-language/03_functions.rst:666
#: ../../03_ride-language/03_functions.rst:695
#: ../../03_ride-language/03_functions.rst:723
#: ../../03_ride-language/03_functions.rst:749
#: ../../03_ride-language/03_functions.rst:776
#: ../../03_ride-language/03_functions.rst:803
#: ../../03_ride-language/03_functions.rst:830
#: ../../03_ride-language/03_functions.rst:856
#: ../../03_ride-language/03_functions.rst:890
#: ../../03_ride-language/03_functions.rst:913
#: ../../03_ride-language/03_functions.rst:930
#: ../../03_ride-language/03_functions.rst:947
#: ../../03_ride-language/03_functions.rst:973
#: ../../03_ride-language/03_functions.rst:1000
#: ../../03_ride-language/03_functions.rst:1017
#: ../../03_ride-language/03_functions.rst:1034
#: ../../03_ride-language/03_functions.rst:1051
#: ../../03_ride-language/03_functions.rst:1075
#: ../../03_ride-language/03_functions.rst:1098
#: ../../03_ride-language/03_functions.rst:1121
#: ../../03_ride-language/03_functions.rst:1139
#: ../../03_ride-language/03_functions.rst:1156
#: ../../03_ride-language/03_functions.rst:1179
#: ../../03_ride-language/03_functions.rst:1204
#: ../../03_ride-language/03_functions.rst:1228
#: ../../03_ride-language/03_functions.rst:1252
#: ../../03_ride-language/03_functions.rst:1275
#: ../../03_ride-language/03_functions.rst:1292
#: ../../03_ride-language/03_functions.rst:1318
#: ../../03_ride-language/03_functions.rst:1511
#: ../../03_ride-language/03_functions.rst:1528
#: ../../03_ride-language/03_functions.rst:1545
#: ../../03_ride-language/03_functions.rst:1562
#: ../../03_ride-language/03_functions.rst:1579
#: ../../03_ride-language/03_functions.rst:1596
#: ../../03_ride-language/03_functions.rst:1613
#: ../../03_ride-language/03_functions.rst:1630
#: ../../03_ride-language/03_functions.rst:1647
#: ../../03_ride-language/03_functions.rst:1664
#: ../../03_ride-language/03_functions.rst:1681
#: ../../03_ride-language/03_functions.rst:1698
#: ../../03_ride-language/03_functions.rst:1715
#: ../../03_ride-language/03_functions.rst:1732
#: ../../03_ride-language/03_functions.rst:1749
#: ../../03_ride-language/03_functions.rst:1766
#: ../../03_ride-language/03_functions.rst:1794
#: ../../03_ride-language/03_functions.rst:1819
#: ../../03_ride-language/03_functions.rst:1842
#: ../../03_ride-language/03_functions.rst:1865
#: ../../03_ride-language/03_functions.rst:1888
#: ../../03_ride-language/03_functions.rst:1920
#: ../../03_ride-language/03_functions.rst:1944
#: ../../03_ride-language/03_functions.rst:1968
#: ../../03_ride-language/03_functions.rst:2008
#: ../../03_ride-language/03_functions.rst:2036
#: ../../03_ride-language/03_functions.rst:2065
#: ../../03_ride-language/03_functions.rst:2094
#: ../../03_ride-language/03_functions.rst:2132
#: ../../03_ride-language/03_functions.rst:2156
#: ../../03_ride-language/03_functions.rst:2173
#: ../../03_ride-language/03_functions.rst:2197
#: ../../03_ride-language/03_functions.rst:2221
#: ../../03_ride-language/03_functions.rst:2245
#: ../../03_ride-language/03_functions.rst:2262
#: ../../03_ride-language/03_functions.rst:2279
#: ../../03_ride-language/03_functions.rst:2296
#: ../../03_ride-language/03_functions.rst:2313
#: ../../03_ride-language/03_functions.rst:2336
#: ../../03_ride-language/03_functions.rst:2372
#: ../../03_ride-language/03_functions.rst:2413
#: ../../03_ride-language/03_functions.rst:2432
#: ../../03_ride-language/03_functions.rst:2451
#: ../../03_ride-language/03_functions.rst:2472
#: ../../03_ride-language/03_functions.rst:2499
#: ../../03_ride-language/03_functions.rst:2516
#: ../../03_ride-language/03_functions.rst:2541
#: ../../03_ride-language/03_functions.rst:2558
#: ../../03_ride-language/03_functions.rst:2584
#: ../../03_ride-language/03_functions.rst:2597
#: ../../03_ride-language/03_functions.rst:2631
#: ../../03_ride-language/03_functions.rst:2655
#: ../../03_ride-language/03_functions.rst:2682
#: ../../03_ride-language/03_functions.rst:2709
#: ../../03_ride-language/03_functions.rst:2734
#: ../../03_ride-language/03_functions.rst:2759
#: ../../03_ride-language/03_functions.rst:2784
#: ../../03_ride-language/03_functions.rst:2808
#: ../../03_ride-language/03_functions.rst:2831
#: ../../03_ride-language/03_functions.rst:2856
#: ../../03_ride-language/03_functions.rst:2882
#: ../../03_ride-language/03_functions.rst:2910
#: ../../03_ride-language/03_functions.rst:2946
#: ../../03_ride-language/03_functions.rst:2963
#: ../../03_ride-language/03_functions.rst:2980
#: ../../03_ride-language/03_functions.rst:2997
#: ../../03_ride-language/03_functions.rst:3025
#: ../../03_ride-language/03_functions.rst:3042
#: ../../03_ride-language/03_functions.rst:3059
#: ../../03_ride-language/03_functions.rst:3092
#: ../../03_ride-language/03_functions.rst:3130
#: ../../03_ride-language/03_functions.rst:3149
msgid ":strong:`Parameters`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:161
#: ../../03_ride-language/03_functions.rst:178
#: ../../03_ride-language/03_functions.rst:195
#: ../../03_ride-language/03_functions.rst:212
#: ../../03_ride-language/03_functions.rst:229
#: ../../03_ride-language/03_functions.rst:246
#: ../../03_ride-language/03_functions.rst:263
#: ../../03_ride-language/03_functions.rst:280
#: ../../03_ride-language/03_functions.rst:297
#: ../../03_ride-language/03_functions.rst:314
#: ../../03_ride-language/03_functions.rst:331
#: ../../03_ride-language/03_functions.rst:348
#: ../../03_ride-language/03_functions.rst:365
#: ../../03_ride-language/03_functions.rst:382
#: ../../03_ride-language/03_functions.rst:399
#: ../../03_ride-language/03_functions.rst:416
#: ../../03_ride-language/03_functions.rst:433
#: ../../03_ride-language/03_functions.rst:468
#: ../../03_ride-language/03_functions.rst:492
#: ../../03_ride-language/03_functions.rst:511
#: ../../03_ride-language/03_functions.rst:541
#: ../../03_ride-language/03_functions.rst:568
#: ../../03_ride-language/03_functions.rst:606
#: ../../03_ride-language/03_functions.rst:644
#: ../../03_ride-language/03_functions.rst:668
#: ../../03_ride-language/03_functions.rst:697
#: ../../03_ride-language/03_functions.rst:725
#: ../../03_ride-language/03_functions.rst:751
#: ../../03_ride-language/03_functions.rst:778
#: ../../03_ride-language/03_functions.rst:805
#: ../../03_ride-language/03_functions.rst:832
#: ../../03_ride-language/03_functions.rst:858
#: ../../03_ride-language/03_functions.rst:892
#: ../../03_ride-language/03_functions.rst:915
#: ../../03_ride-language/03_functions.rst:932
#: ../../03_ride-language/03_functions.rst:949
#: ../../03_ride-language/03_functions.rst:975
#: ../../03_ride-language/03_functions.rst:1002
#: ../../03_ride-language/03_functions.rst:1019
#: ../../03_ride-language/03_functions.rst:1036
#: ../../03_ride-language/03_functions.rst:1053
#: ../../03_ride-language/03_functions.rst:1077
#: ../../03_ride-language/03_functions.rst:1100
#: ../../03_ride-language/03_functions.rst:1123
#: ../../03_ride-language/03_functions.rst:1141
#: ../../03_ride-language/03_functions.rst:1158
#: ../../03_ride-language/03_functions.rst:1181
#: ../../03_ride-language/03_functions.rst:1206
#: ../../03_ride-language/03_functions.rst:1230
#: ../../03_ride-language/03_functions.rst:1254
#: ../../03_ride-language/03_functions.rst:1277
#: ../../03_ride-language/03_functions.rst:1294
#: ../../03_ride-language/03_functions.rst:1320
#: ../../03_ride-language/03_functions.rst:1414
#: ../../03_ride-language/03_functions.rst:1513
#: ../../03_ride-language/03_functions.rst:1530
#: ../../03_ride-language/03_functions.rst:1547
#: ../../03_ride-language/03_functions.rst:1564
#: ../../03_ride-language/03_functions.rst:1581
#: ../../03_ride-language/03_functions.rst:1598
#: ../../03_ride-language/03_functions.rst:1615
#: ../../03_ride-language/03_functions.rst:1632
#: ../../03_ride-language/03_functions.rst:1649
#: ../../03_ride-language/03_functions.rst:1666
#: ../../03_ride-language/03_functions.rst:1683
#: ../../03_ride-language/03_functions.rst:1700
#: ../../03_ride-language/03_functions.rst:1717
#: ../../03_ride-language/03_functions.rst:1734
#: ../../03_ride-language/03_functions.rst:1751
#: ../../03_ride-language/03_functions.rst:1768
#: ../../03_ride-language/03_functions.rst:1796
#: ../../03_ride-language/03_functions.rst:1821
#: ../../03_ride-language/03_functions.rst:1844
#: ../../03_ride-language/03_functions.rst:1867
#: ../../03_ride-language/03_functions.rst:1890
#: ../../03_ride-language/03_functions.rst:1922
#: ../../03_ride-language/03_functions.rst:1946
#: ../../03_ride-language/03_functions.rst:1970
#: ../../03_ride-language/03_functions.rst:2010
#: ../../03_ride-language/03_functions.rst:2038
#: ../../03_ride-language/03_functions.rst:2067
#: ../../03_ride-language/03_functions.rst:2096
#: ../../03_ride-language/03_functions.rst:2134
#: ../../03_ride-language/03_functions.rst:2158
#: ../../03_ride-language/03_functions.rst:2175
#: ../../03_ride-language/03_functions.rst:2199
#: ../../03_ride-language/03_functions.rst:2223
#: ../../03_ride-language/03_functions.rst:2247
#: ../../03_ride-language/03_functions.rst:2264
#: ../../03_ride-language/03_functions.rst:2281
#: ../../03_ride-language/03_functions.rst:2298
#: ../../03_ride-language/03_functions.rst:2315
#: ../../03_ride-language/03_functions.rst:2338
#: ../../03_ride-language/03_functions.rst:2374
#: ../../03_ride-language/03_functions.rst:2415
#: ../../03_ride-language/03_functions.rst:2434
#: ../../03_ride-language/03_functions.rst:2453
#: ../../03_ride-language/03_functions.rst:2474
#: ../../03_ride-language/03_functions.rst:2501
#: ../../03_ride-language/03_functions.rst:2518
#: ../../03_ride-language/03_functions.rst:2543
#: ../../03_ride-language/03_functions.rst:2560
#: ../../03_ride-language/03_functions.rst:2586
#: ../../03_ride-language/03_functions.rst:2607
#: ../../03_ride-language/03_functions.rst:2633
#: ../../03_ride-language/03_functions.rst:2657
#: ../../03_ride-language/03_functions.rst:2684
#: ../../03_ride-language/03_functions.rst:2711
#: ../../03_ride-language/03_functions.rst:2736
#: ../../03_ride-language/03_functions.rst:2761
#: ../../03_ride-language/03_functions.rst:2786
#: ../../03_ride-language/03_functions.rst:2810
#: ../../03_ride-language/03_functions.rst:2833
#: ../../03_ride-language/03_functions.rst:2858
#: ../../03_ride-language/03_functions.rst:2884
#: ../../03_ride-language/03_functions.rst:2912
#: ../../03_ride-language/03_functions.rst:2948
#: ../../03_ride-language/03_functions.rst:2965
#: ../../03_ride-language/03_functions.rst:2982
#: ../../03_ride-language/03_functions.rst:2999
#: ../../03_ride-language/03_functions.rst:3027
#: ../../03_ride-language/03_functions.rst:3044
#: ../../03_ride-language/03_functions.rst:3061
#: ../../03_ride-language/03_functions.rst:3094
#: ../../03_ride-language/03_functions.rst:3132
#: ../../03_ride-language/03_functions.rst:3151
msgid "Parameters"
msgstr ""

#: ../../_static/03_ride-language/tables/013_Parameters.csv:1
#: ../../_static/03_ride-language/tables/014_Parameters.csv:1
#: ../../_static/03_ride-language/tables/015_Parameters.csv:1
#: ../../_static/03_ride-language/tables/016_Parameters.csv:1
#: ../../_static/03_ride-language/tables/017_Parameters.csv:1
#: ../../_static/03_ride-language/tables/018_Parameters.csv:1
#: ../../_static/03_ride-language/tables/019_Parameters.csv:1
#: ../../_static/03_ride-language/tables/020_Parameters.csv:1
#: ../../_static/03_ride-language/tables/021_Parameters.csv:1
#: ../../_static/03_ride-language/tables/022_Parameters.csv:1
#: ../../_static/03_ride-language/tables/023_Parameters.csv:1
#: ../../_static/03_ride-language/tables/024_Parameters.csv:1
#: ../../_static/03_ride-language/tables/025_Parameters.csv:1
#: ../../_static/03_ride-language/tables/026_Parameters.csv:1
#: ../../_static/03_ride-language/tables/027_Parameters.csv:1
#: ../../_static/03_ride-language/tables/028_Parameters.csv:1
#: ../../_static/03_ride-language/tables/029_Parameters.csv:1
#: ../../_static/03_ride-language/tables/031_Parameters.csv:1
#: ../../_static/03_ride-language/tables/032_Parameters.csv:1
#: ../../_static/03_ride-language/tables/033_Parameters.csv:1
#: ../../_static/03_ride-language/tables/034_Parameters.csv:1
#: ../../_static/03_ride-language/tables/035_Parameters.csv:1
#: ../../_static/03_ride-language/tables/036_Parameters.csv:1
#: ../../_static/03_ride-language/tables/037_Parameters.csv:1
#: ../../_static/03_ride-language/tables/038_Parameters.csv:1
#: ../../_static/03_ride-language/tables/039_Parameters.csv:1
#: ../../_static/03_ride-language/tables/040_Parameters.csv:1
#: ../../_static/03_ride-language/tables/042_Parameters.csv:1
#: ../../_static/03_ride-language/tables/043_Parameters.csv:1
#: ../../_static/03_ride-language/tables/044_Parameters.csv:1
#: ../../_static/03_ride-language/tables/045_Parameters.csv:1
#: ../../_static/03_ride-language/tables/046_Parameters.csv:1
#: ../../_static/03_ride-language/tables/048_Parameters.csv:1
#: ../../_static/03_ride-language/tables/049_Parameters.csv:1
#: ../../_static/03_ride-language/tables/050_Parameters.csv:1
#: ../../_static/03_ride-language/tables/051_Parameters.csv:1
#: ../../_static/03_ride-language/tables/052_Parameters.csv:1
#: ../../_static/03_ride-language/tables/053_Parameters.csv:1
#: ../../_static/03_ride-language/tables/054_Parameters.csv:1
#: ../../_static/03_ride-language/tables/055_Parameters.csv:1
#: ../../_static/03_ride-language/tables/056_Parameters.csv:1
#: ../../_static/03_ride-language/tables/057_Parameters.csv:1
#: ../../_static/03_ride-language/tables/058_Parameters.csv:1
#: ../../_static/03_ride-language/tables/059_Parameters.csv:1
#: ../../_static/03_ride-language/tables/060_Parameters.csv:1
#: ../../_static/03_ride-language/tables/061_Parameters.csv:1
#: ../../_static/03_ride-language/tables/062_Parameters.csv:1
#: ../../_static/03_ride-language/tables/063_Parameters.csv:1
#: ../../_static/03_ride-language/tables/064_Parameters.csv:1
#: ../../_static/03_ride-language/tables/065_Parameters.csv:1
#: ../../_static/03_ride-language/tables/066_Parameters.csv:1
#: ../../_static/03_ride-language/tables/067_Parameters.csv:1
#: ../../_static/03_ride-language/tables/068_Parameters.csv:1
#: ../../_static/03_ride-language/tables/070_Parameters.csv:1
#: ../../_static/03_ride-language/tables/072_Parameters.csv:1
#: ../../_static/03_ride-language/tables/073_Parameters.csv:1
#: ../../_static/03_ride-language/tables/074_Parameters.csv:1
#: ../../_static/03_ride-language/tables/075_Parameters.csv:1
#: ../../_static/03_ride-language/tables/076_Parameters.csv:1
#: ../../_static/03_ride-language/tables/077_Parameters.csv:1
#: ../../_static/03_ride-language/tables/078_Parameters.csv:1
#: ../../_static/03_ride-language/tables/079_Parameters.csv:1
#: ../../_static/03_ride-language/tables/080_Parameters.csv:1
#: ../../_static/03_ride-language/tables/081_Parameters.csv:1
#: ../../_static/03_ride-language/tables/082_Parameters.csv:1
#: ../../_static/03_ride-language/tables/083_Parameters.csv:1
#: ../../_static/03_ride-language/tables/084_Parameters.csv:1
#: ../../_static/03_ride-language/tables/085_Parameters.csv:1
#: ../../_static/03_ride-language/tables/086_Parameters.csv:1
#: ../../_static/03_ride-language/tables/087_Parameters.csv:1
#: ../../_static/03_ride-language/tables/089_Parameters.csv:1
#: ../../_static/03_ride-language/tables/090_Parameters.csv:1
#: ../../_static/03_ride-language/tables/091_Parameters.csv:1
#: ../../_static/03_ride-language/tables/092_Parameters.csv:1
#: ../../_static/03_ride-language/tables/093_Parameters.csv:1
#: ../../_static/03_ride-language/tables/095_Parameters.csv:1
#: ../../_static/03_ride-language/tables/096_Parameters.csv:1
#: ../../_static/03_ride-language/tables/097_Parameters.csv:1
#: ../../_static/03_ride-language/tables/099_Parameters.csv:1
#: ../../_static/03_ride-language/tables/102_Parameters.csv:1
#: ../../_static/03_ride-language/tables/104_Parameters.csv:1
#: ../../_static/03_ride-language/tables/106_Parameters.csv:1
#: ../../_static/03_ride-language/tables/108_Parameters.csv:1
#: ../../_static/03_ride-language/tables/109_Parameters.csv:1
#: ../../_static/03_ride-language/tables/110_Parameters.csv:1
#: ../../_static/03_ride-language/tables/111_Parameters.csv:1
#: ../../_static/03_ride-language/tables/112_Parameters.csv:1
#: ../../_static/03_ride-language/tables/113_Parameters.csv:1
#: ../../_static/03_ride-language/tables/114_Parameters.csv:1
#: ../../_static/03_ride-language/tables/115_Parameters.csv:1
#: ../../_static/03_ride-language/tables/116_Parameters.csv:1
#: ../../_static/03_ride-language/tables/117_Parameters.csv:1
#: ../../_static/03_ride-language/tables/118_Parameters.csv:1
#: ../../_static/03_ride-language/tables/120_Parameters.csv:1
#: ../../_static/03_ride-language/tables/121_Parameters.csv:1
#: ../../_static/03_ride-language/tables/122_Parameters.csv:1
#: ../../_static/03_ride-language/tables/123_Parameters.csv:1
#: ../../_static/03_ride-language/tables/124_Parameters.csv:1
#: ../../_static/03_ride-language/tables/125_Parameters.csv:1
#: ../../_static/03_ride-language/tables/126_Parameters.csv:1
#: ../../_static/03_ride-language/tables/127_Parameters.csv:1
#: ../../_static/03_ride-language/tables/128_Parameters.csv:1
#: ../../_static/03_ride-language/tables/129_Parameters.csv:1
#: ../../_static/03_ride-language/tables/133_Parameters.csv:1
#: ../../_static/03_ride-language/tables/134_Parameters.csv:1
#: ../../_static/03_ride-language/tables/135_Parameters.csv:1
#: ../../_static/03_ride-language/tables/136_Parameters.csv:1
#: ../../_static/03_ride-language/tables/137_Parameters.csv:1
#: ../../_static/03_ride-language/tables/138_Parameters.csv:1
#: ../../_static/03_ride-language/tables/139_Parameters.csv:1
#: ../../_static/03_ride-language/tables/140_Parameters.csv:1
#: ../../_static/03_ride-language/tables/141_Parameters.csv:1
#: ../../_static/03_ride-language/tables/142_Parameters.csv:1
#: ../../_static/03_ride-language/tables/143_Parameters.csv:1
#: ../../_static/03_ride-language/tables/144_Parameters.csv:1
#: ../../_static/03_ride-language/tables/146_Parameters.csv:1
#: ../../_static/03_ride-language/tables/147_Parameters.csv:1
#: ../../_static/03_ride-language/tables/148_Parameters.csv:1
#: ../../_static/03_ride-language/tables/149_Parameters.csv:1
#: ../../_static/03_ride-language/tables/152_Parameters.csv:1
#: ../../_static/03_ride-language/tables/153_Parameters.csv:1
#: ../../_static/03_ride-language/tables/154_Parameters.csv:1
#: ../../_static/03_ride-language/tables/156_Parameters.csv:1
#: ../../_static/03_ride-language/tables/158_Parameters.csv:1
#: ../../_static/03_ride-language/tables/160_Parameters.csv:1
#: ../../_static/03_ride-language/tables/208_Iterations-with-FOLD.csv:1
#: ../../_static/03_ride-language/tables/209_Invoke-and-ReentrantInvoke-Functions.csv:1
msgid "Parameter"
msgstr ""

#: ../../_static/03_ride-language/tables/013_Parameters.csv:1
#: ../../_static/03_ride-language/tables/015_Parameters.csv:1
#: ../../_static/03_ride-language/tables/017_Parameters.csv:1
#: ../../_static/03_ride-language/tables/019_Parameters.csv:1
#: ../../_static/03_ride-language/tables/021_Parameters.csv:1
#: ../../_static/03_ride-language/tables/023_Parameters.csv:1
#: ../../_static/03_ride-language/tables/025_Parameters.csv:1
#: ../../_static/03_ride-language/tables/027_Parameters.csv:1
#: ../../_static/03_ride-language/tables/029_Parameters.csv:1
#: ../../_static/03_ride-language/tables/031_Parameters.csv:1
#: ../../_static/03_ride-language/tables/032_Parameters.csv:1
#: ../../_static/03_ride-language/tables/037_Parameters.csv:1
#: ../../_static/03_ride-language/tables/040_Parameters.csv:1
msgid "addressOrAlias: :ref:`Address <03_ride-language/05_structures:Address>` | :ref:`Alias <03_ride-language/05_structures:Alias>`"
msgstr ""

#: ../../_static/03_ride-language/tables/013_Parameters.csv:1
#: ../../_static/03_ride-language/tables/015_Parameters.csv:1
#: ../../_static/03_ride-language/tables/017_Parameters.csv:1
#: ../../_static/03_ride-language/tables/019_Parameters.csv:1
#: ../../_static/03_ride-language/tables/021_Parameters.csv:1
#: ../../_static/03_ride-language/tables/023_Parameters.csv:1
#: ../../_static/03_ride-language/tables/025_Parameters.csv:1
#: ../../_static/03_ride-language/tables/027_Parameters.csv:1
#: ../../_static/03_ride-language/tables/029_Parameters.csv:1
#: ../../_static/03_ride-language/tables/031_Parameters.csv:1
#: ../../_static/03_ride-language/tables/032_Parameters.csv:1
#: ../../_static/03_ride-language/tables/037_Parameters.csv:1
#: ../../_static/03_ride-language/tables/040_Parameters.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` or :ref:`alias <02_decentralchain/01_account:Alias>` of the account."
msgstr ""

#: ../../_static/03_ride-language/tables/013_Parameters.csv:1
#: ../../_static/03_ride-language/tables/014_Parameters.csv:1
#: ../../_static/03_ride-language/tables/015_Parameters.csv:1
#: ../../_static/03_ride-language/tables/016_Parameters.csv:1
#: ../../_static/03_ride-language/tables/017_Parameters.csv:1
#: ../../_static/03_ride-language/tables/018_Parameters.csv:1
#: ../../_static/03_ride-language/tables/019_Parameters.csv:1
#: ../../_static/03_ride-language/tables/020_Parameters.csv:1
#: ../../_static/03_ride-language/tables/021_Parameters.csv:1
#: ../../_static/03_ride-language/tables/022_Parameters.csv:1
#: ../../_static/03_ride-language/tables/023_Parameters.csv:1
#: ../../_static/03_ride-language/tables/024_Parameters.csv:1
#: ../../_static/03_ride-language/tables/025_Parameters.csv:1
#: ../../_static/03_ride-language/tables/026_Parameters.csv:1
#: ../../_static/03_ride-language/tables/027_Parameters.csv:1
#: ../../_static/03_ride-language/tables/028_Parameters.csv:1
#: ../../_static/03_ride-language/tables/072_Parameters.csv:1
#: ../../_static/03_ride-language/tables/074_Parameters.csv:1
#: ../../_static/03_ride-language/tables/076_Parameters.csv:1
#: ../../_static/03_ride-language/tables/078_Parameters.csv:1
#: ../../_static/03_ride-language/tables/080_Parameters.csv:1
#: ../../_static/03_ride-language/tables/082_Parameters.csv:1
#: ../../_static/03_ride-language/tables/084_Parameters.csv:1
#: ../../_static/03_ride-language/tables/086_Parameters.csv:1
msgid "key: :ref:`String <03_ride-language/02_data-types:String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/013_Parameters.csv:1
#: ../../_static/03_ride-language/tables/014_Parameters.csv:1
#: ../../_static/03_ride-language/tables/015_Parameters.csv:1
#: ../../_static/03_ride-language/tables/016_Parameters.csv:1
#: ../../_static/03_ride-language/tables/017_Parameters.csv:1
#: ../../_static/03_ride-language/tables/018_Parameters.csv:1
#: ../../_static/03_ride-language/tables/019_Parameters.csv:1
#: ../../_static/03_ride-language/tables/020_Parameters.csv:1
#: ../../_static/03_ride-language/tables/021_Parameters.csv:1
#: ../../_static/03_ride-language/tables/022_Parameters.csv:1
#: ../../_static/03_ride-language/tables/023_Parameters.csv:1
#: ../../_static/03_ride-language/tables/024_Parameters.csv:1
#: ../../_static/03_ride-language/tables/025_Parameters.csv:1
#: ../../_static/03_ride-language/tables/026_Parameters.csv:1
#: ../../_static/03_ride-language/tables/027_Parameters.csv:1
#: ../../_static/03_ride-language/tables/028_Parameters.csv:1
msgid "Entry key."
msgstr ""

#: ../../03_ride-language/03_functions.rst:168
msgid "getBinary(String): ByteVector|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:170
#: ../../03_ride-language/03_functions.rst:204
msgid "Gets an array of bytes by key from the dApp's own data storage."
msgstr ""

#: ../../03_ride-language/03_functions.rst:185
msgid "getBinaryValue(Address|Alias, String): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:187
msgid "Gets an array of bytes by key. Fails if there is no data."
msgstr ""

#: ../../03_ride-language/03_functions.rst:202
msgid "getBinaryValue(String): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:219
msgid "getBoolean(Address|Alias, String): Boolean|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:221
msgid "Gets a boolean value by key."
msgstr ""

#: ../../03_ride-language/03_functions.rst:236
msgid "getBoolean(String): Boolean|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:238
msgid "Gets a boolean value by key by key from the dApp's own data storage."
msgstr ""

#: ../../03_ride-language/03_functions.rst:253
msgid "getBooleanValue(Address|Alias, String): Boolean"
msgstr ""

#: ../../03_ride-language/03_functions.rst:255
msgid "Gets a boolean value by key. Fails if there is no data."
msgstr ""

#: ../../03_ride-language/03_functions.rst:270
msgid "getBooleanValue(String): Boolean"
msgstr ""

#: ../../03_ride-language/03_functions.rst:272
msgid "Gets a boolean value by key from the dApp's own data storage."
msgstr ""

#: ../../03_ride-language/03_functions.rst:287
msgid "getInteger(Address|Alias, String): Int|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:289
msgid "Gets an integer by key."
msgstr ""

#: ../../03_ride-language/03_functions.rst:304
msgid "getInteger(String): Int|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:306
#: ../../03_ride-language/03_functions.rst:340
msgid "Gets an integer by key from the dApp's own data storage."
msgstr ""

#: ../../03_ride-language/03_functions.rst:321
msgid "getIntegerValue(Address|Alias, String): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:323
msgid "Gets an integer by key. Fails if there is no data."
msgstr ""

#: ../../03_ride-language/03_functions.rst:338
msgid "getIntegerValue(String): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:355
msgid "getString(Address|Alias, String): String|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:357
msgid "Gets a string by key."
msgstr ""

#: ../../03_ride-language/03_functions.rst:372
msgid "getString(String): String|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:374
#: ../../03_ride-language/03_functions.rst:408
msgid "Gets a string by key from the dApp's own data storage."
msgstr ""

#: ../../03_ride-language/03_functions.rst:389
msgid "getStringValue(Address|Alias, String): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:391
msgid "Gets a string by key. Fails if there is no data."
msgstr ""

#: ../../03_ride-language/03_functions.rst:406
msgid "getStringValue(String): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:423
msgid "isDataStorageUntouched(Address|Alias): Boolean"
msgstr ""

#: ../../03_ride-language/03_functions.rst:425
msgid "Checks if the data storage of a given account never contained any entries. Returns false if there was at least one entry in the account data storage even if the entry was deleted."
msgstr ""

#: ../../03_ride-language/03_functions.rst:439
#: ../../03_ride-language/03_functions.rst:474
#: ../../03_ride-language/03_functions.rst:517
#: ../../03_ride-language/03_functions.rst:547
#: ../../03_ride-language/03_functions.rst:574
#: ../../03_ride-language/03_functions.rst:612
#: ../../03_ride-language/03_functions.rst:650
#: ../../03_ride-language/03_functions.rst:674
#: ../../03_ride-language/03_functions.rst:703
#: ../../03_ride-language/03_functions.rst:757
#: ../../03_ride-language/03_functions.rst:784
#: ../../03_ride-language/03_functions.rst:811
#: ../../03_ride-language/03_functions.rst:838
#: ../../03_ride-language/03_functions.rst:864
#: ../../03_ride-language/03_functions.rst:898
#: ../../03_ride-language/03_functions.rst:955
#: ../../03_ride-language/03_functions.rst:981
#: ../../03_ride-language/03_functions.rst:1059
#: ../../03_ride-language/03_functions.rst:1083
#: ../../03_ride-language/03_functions.rst:1106
#: ../../03_ride-language/03_functions.rst:1164
#: ../../03_ride-language/03_functions.rst:1187
#: ../../03_ride-language/03_functions.rst:1212
#: ../../03_ride-language/03_functions.rst:1236
#: ../../03_ride-language/03_functions.rst:1260
#: ../../03_ride-language/03_functions.rst:1300
#: ../../03_ride-language/03_functions.rst:1326
#: ../../03_ride-language/03_functions.rst:1420
#: ../../03_ride-language/03_functions.rst:1802
#: ../../03_ride-language/03_functions.rst:1827
#: ../../03_ride-language/03_functions.rst:1850
#: ../../03_ride-language/03_functions.rst:1873
#: ../../03_ride-language/03_functions.rst:1896
#: ../../03_ride-language/03_functions.rst:1928
#: ../../03_ride-language/03_functions.rst:1952
#: ../../03_ride-language/03_functions.rst:1976
#: ../../03_ride-language/03_functions.rst:2044
#: ../../03_ride-language/03_functions.rst:2073
#: ../../03_ride-language/03_functions.rst:2102
#: ../../03_ride-language/03_functions.rst:2140
#: ../../03_ride-language/03_functions.rst:2181
#: ../../03_ride-language/03_functions.rst:2205
#: ../../03_ride-language/03_functions.rst:2229
#: ../../03_ride-language/03_functions.rst:2321
#: ../../03_ride-language/03_functions.rst:2344
#: ../../03_ride-language/03_functions.rst:2380
#: ../../03_ride-language/03_functions.rst:2480
#: ../../03_ride-language/03_functions.rst:2524
#: ../../03_ride-language/03_functions.rst:2566
#: ../../03_ride-language/03_functions.rst:2605
#: ../../03_ride-language/03_functions.rst:2639
#: ../../03_ride-language/03_functions.rst:2663
#: ../../03_ride-language/03_functions.rst:2690
#: ../../03_ride-language/03_functions.rst:2717
#: ../../03_ride-language/03_functions.rst:2742
#: ../../03_ride-language/03_functions.rst:2767
#: ../../03_ride-language/03_functions.rst:2792
#: ../../03_ride-language/03_functions.rst:2816
#: ../../03_ride-language/03_functions.rst:2839
#: ../../03_ride-language/03_functions.rst:2864
#: ../../03_ride-language/03_functions.rst:2890
#: ../../03_ride-language/03_functions.rst:2918
#: ../../03_ride-language/03_functions.rst:3067
#: ../../03_ride-language/03_functions.rst:3100
#: ../../03_ride-language/05_structures.rst:105
#: ../../03_ride-language/05_structures.rst:170
#: ../../03_ride-language/05_structures.rst:240
#: ../../03_ride-language/05_structures.rst:342
#: ../../03_ride-language/05_structures.rst:412
#: ../../03_ride-language/05_structures.rst:483
#: ../../03_ride-language/05_structures.rst:509
#: ../../03_ride-language/05_structures.rst:538
#: ../../03_ride-language/05_structures.rst:642
#: ../../03_ride-language/05_structures.rst:692
msgid ":strong:`Example`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:447
#: ../../03_ride-language/03_functions.rst:449
msgid "Blockchain Functions"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid ":ref:`addressFromRecipient(Address|Alias): Address <03_ride-language/03_functions:addressFromRecipient(Address|Alias): Address>`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid "Gets the corresponding :ref:`address <02_decentralchain/01_account:Address>` of the :ref:`alias <02_decentralchain/01_account:Alias>`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid ":ref:`assetBalance(Address|Alias, ByteVector): Int <03_ride-language/03_functions:assetBalance(Address|Alias, ByteVector): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid "Gets account balance by token ID"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid ":ref:`assetInfo(ByteVector): Asset|Unit <03_ride-language/03_functions:assetInfo(ByteVector): Asset|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid "Gets the information about a :ref:`token <02_decentralchain/02_token(asset):Token (Asset)>`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
msgid ":math:`15`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid ":ref:`blockInfoByHeight(Int): BlockInfo|Unit <03_ride-language/03_functions:blockInfoByHeight(Int): BlockInfo|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid "Gets the information about a :ref:`block <02_decentralchain/04_block:Block>` by the block height"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid ":ref:`calculateAssetId(Issue): ByteVector <03_ride-language/03_functions:calculateAssetId(Issue): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid "Calculates ID of the token formed by the :ref:`Issue <03_ride-language/05_structures:Issue>` structure when executing the callable function"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid ":ref:`calculateLeaseId(Lease): ByteVector <03_ride-language/03_functions:calculateLeaseId(Lease): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid "Calculates ID of the lease formed by the :ref:`Lease <03_ride-language/05_structures:Lease>` structure when executing the callable function"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid ":ref:`scriptHash(Address|Alias): ByteVector|Unit <03_ride-language/03_functions:scriptHash(Address|Alias): ByteVector|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid "Returns BLAKE2b-256 hash of the script assigned to a given account"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
#: ../../_static/03_ride-language/tables/105_sha256.csv:1
#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`200`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid ":ref:`transactionHeightById(ByteVector): Int|Unit <03_ride-language/03_functions:transactionHeightById(ByteVector): Int|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid "Gets the block height of a transaction"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid ":math:`20`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid ":ref:`transferTransactionById(ByteVector): TransferTransaction|Unit <03_ride-language/03_functions:transferTransactionById(ByteVector): TransferTransaction|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid "Gets the data of a :ref:`transfer transaction <02_decentralchain/03_transaction:Transfer Transaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid ":math:`60`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid ":ref:`decentralchainBalance(Address|Alias): BalanceDetails <03_ride-language/03_functions:decentralchainBalance(Address|Alias): BalanceDetails>`"
msgstr ""

#: ../../_static/03_ride-language/tables/030_Blockchain-Functions.csv:1
msgid "Gets account balance in :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:456
msgid "addressFromRecipient(Address|Alias): Address"
msgstr ""

#: ../../03_ride-language/03_functions.rst:458
msgid "Gets the corresponding :ref:`address <02_decentralchain/01_account:Address>` of the :ref:`alias <02_decentralchain/01_account:Alias>`."
msgstr ""

#: ../../03_ride-language/03_functions.rst:464
#: ../../03_ride-language/03_functions.rst:888
#: ../../03_ride-language/03_functions.rst:1792
#: ../../03_ride-language/03_functions.rst:1817
msgid "For a description of the return value, see the :ref:`Address <03_ride-language/05_structures:Address>` structure article."
msgstr ""

#: ../../_static/03_ride-language/tables/031_Parameters.csv:1
msgid "Address or alias, usually tx.recipient"
msgstr ""

#: ../../03_ride-language/03_functions.rst:482
msgid "assetBalance(Address|Alias, ByteVector): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:484
msgid "Gets account balance by token ID."
msgstr ""

#: ../../_static/03_ride-language/tables/032_Parameters.csv:1
msgid "assetId: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/032_Parameters.csv:1
#: ../../_static/03_ride-language/tables/033_Parameters.csv:1
msgid ":ref:`token ID <02_decentralchain/02_token(asset):Token ID>`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:499
msgid "assetInfo(ByteVector): Asset|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:501
msgid "Gets the information about a :ref:`token (asset) <02_decentralchain/02_token(asset):Token (Asset)>`."
msgstr ""

#: ../../03_ride-language/03_functions.rst:507
#: ../../03_ride-language/03_functions.rst:537
msgid "For a description of the return value, see the :ref:`BlockInfo <03_ride-language/05_structures:BlockInfo>` structure article."
msgstr ""

#: ../../_static/03_ride-language/tables/033_Parameters.csv:1
#: ../../_static/03_ride-language/tables/038_Parameters.csv:1
#: ../../_static/03_ride-language/tables/039_Parameters.csv:1
msgid "id: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:529
msgid "blockInfoByHeight(Int): BlockInfo|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:531
msgid "Gets the information about a :ref:`block <02_decentralchain/04_block:Block>` by the :ref:`block height <02_decentralchain/04_block:Block Height>`."
msgstr ""

#: ../../_static/03_ride-language/tables/034_Parameters.csv:1
msgid "height: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/034_Parameters.csv:1
msgid ":ref:`block height <02_decentralchain/04_block:Block Height>`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:558
msgid "calculateAssetId(Issue): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:560
msgid "Calculates ID of the token formed by the :ref:`Issue <03_ride-language/05_structures:Issue>` structure when executing the :ref:`callable function <03_ride-language/03_functions:Callable Functions>`."
msgstr ""

#: ../../_static/03_ride-language/tables/035_Parameters.csv:1
msgid "issue: :ref:`Issue <03_ride-language/05_structures:Issue>`"
msgstr ""

#: ../../_static/03_ride-language/tables/035_Parameters.csv:1
msgid "Structure that sets the parameters of the token issue."
msgstr ""

#: ../../03_ride-language/03_functions.rst:596
msgid "calculateLeaseId(Lease): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:598
msgid "Calculates ID of the lease formed by the :ref:`Lease <03_ride-language/05_structures:Lease>` structure when executing the :ref:`callable function <03_ride-language/03_functions:Callable Functions>`."
msgstr ""

#: ../../_static/03_ride-language/tables/036_Parameters.csv:1
msgid "lease: :ref:`Lease <03_ride-language/05_structures:Lease>`"
msgstr ""

#: ../../_static/03_ride-language/tables/036_Parameters.csv:1
msgid "Structure that sets the lease parameters."
msgstr ""

#: ../../03_ride-language/03_functions.rst:634
msgid "scriptHash(Address|Alias): ByteVector|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:636
msgid "Returns BLAKE2b-256 hash of the script assigned to a given account. Returns unit if there is no script. The function can be used to verify that the script is exactly the same as expected."
msgstr ""

#: ../../03_ride-language/03_functions.rst:658
msgid "transactionHeightById(ByteVector): Int|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:660
msgid "Gets the :ref:`block height <02_decentralchain/04_block:Block Height>` of a transaction."
msgstr ""

#: ../../_static/03_ride-language/tables/038_Parameters.csv:1
msgid "ID of the transaction."
msgstr ""

#: ../../03_ride-language/03_functions.rst:685
msgid "transferTransactionById(ByteVector): TransferTransaction|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:687
msgid "Gets the data of a :ref:`transfer transaction <02_decentralchain/03_transaction:Transfer Transaction>`."
msgstr ""

#: ../../03_ride-language/03_functions.rst:693
#: ../../03_ride-language/03_functions.rst:1316
msgid "For a description of the return value, see the :ref:`TransferTransaction <03_ride-language/05_structures:TransferTransaction>` structure article."
msgstr ""

#: ../../_static/03_ride-language/tables/039_Parameters.csv:1
msgid "ID of the transfer transaction."
msgstr ""

#: ../../03_ride-language/03_functions.rst:715
msgid "decentralchainBalance(Address|Alias): BalanceDetails"
msgstr ""

#: ../../03_ride-language/03_functions.rst:717
msgid "Gets all types of :ref:`DecentralCoin <02_decentralchain/02_token(asset):DecentralCoin>` balances. For description of balance types, see the :ref:`account balance <02_decentralchain/01_account:Account Balance>` article."
msgstr ""

#: ../../03_ride-language/03_functions.rst:732
#: ../../03_ride-language/03_functions.rst:734
msgid "Byte Array Functions"
msgstr ""

#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
msgid ":ref:`drop(ByteVector, Int): ByteVector <03_ride-language/03_functions:drop(ByteVector, Int): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
msgid "Returns the byte array without the first N bytes"
msgstr ""

#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
msgid ":ref:`dropRight(ByteVector, Int): ByteVector <03_ride-language/03_functions:dropRight(ByteVector, Int): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
msgid "Returns the byte array without the last N bytes"
msgstr ""

#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
msgid ":ref:`size(ByteVector): Int <03_ride-language/03_functions:size(ByteVector): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
msgid "Returns the number of bytes in the byte array"
msgstr ""

#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
msgid ":ref:`take(ByteVector, Int): ByteVector <03_ride-language/03_functions:take(ByteVector, Int): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
msgid "Returns the first N bytes of the byte array"
msgstr ""

#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
msgid ":ref:`takeRight(ByteVector, Int): ByteVector <03_ride-language/03_functions:takeRight(ByteVector, Int): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/041_Byte-Array-Functions.csv:1
msgid "Returns the last N bytes of the byte array"
msgstr ""

#: ../../03_ride-language/03_functions.rst:741
msgid "drop(ByteVector, Int): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:743
msgid "Returns the byte array without the first N bytes."
msgstr ""

#: ../../_static/03_ride-language/tables/042_Parameters.csv:1
#: ../../_static/03_ride-language/tables/043_Parameters.csv:1
#: ../../_static/03_ride-language/tables/044_Parameters.csv:1
#: ../../_static/03_ride-language/tables/045_Parameters.csv:1
#: ../../_static/03_ride-language/tables/046_Parameters.csv:1
msgid "xs: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/042_Parameters.csv:1
#: ../../_static/03_ride-language/tables/043_Parameters.csv:1
#: ../../_static/03_ride-language/tables/044_Parameters.csv:1
#: ../../_static/03_ride-language/tables/045_Parameters.csv:1
#: ../../_static/03_ride-language/tables/046_Parameters.csv:1
msgid "Byte array."
msgstr ""

#: ../../_static/03_ride-language/tables/042_Parameters.csv:1
#: ../../_static/03_ride-language/tables/043_Parameters.csv:1
#: ../../_static/03_ride-language/tables/045_Parameters.csv:1
#: ../../_static/03_ride-language/tables/046_Parameters.csv:1
#: ../../_static/03_ride-language/tables/134_Parameters.csv:1
#: ../../_static/03_ride-language/tables/135_Parameters.csv:1
#: ../../_static/03_ride-language/tables/143_Parameters.csv:1
#: ../../_static/03_ride-language/tables/144_Parameters.csv:1
msgid "number: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/042_Parameters.csv:1
#: ../../_static/03_ride-language/tables/043_Parameters.csv:1
#: ../../_static/03_ride-language/tables/045_Parameters.csv:1
#: ../../_static/03_ride-language/tables/046_Parameters.csv:1
msgid "N bytes."
msgstr ""

#: ../../03_ride-language/03_functions.rst:768
msgid "dropRight(ByteVector, Int): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:770
msgid "Returns the byte array without the last N bytes."
msgstr ""

#: ../../03_ride-language/03_functions.rst:795
msgid "size(ByteVector): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:797
msgid "Returns the number of bytes in the byte array."
msgstr ""

#: ../../03_ride-language/03_functions.rst:822
msgid "take(ByteVector, Int): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:824
msgid "Returns the first N bytes of the byte array."
msgstr ""

#: ../../03_ride-language/03_functions.rst:848
msgid "takeRight(ByteVector, Int): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:850
msgid "Returns the last N bytes of the byte array."
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`addressFromPublicKey(ByteVector): Address <03_ride-language/03_functions:addressFromPublicKey(ByteVector): Address>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Gets the corresponding :ref:`address <02_decentralchain/01_account:Address>` of the account public key `"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":math:`63`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts the string representation of a number to its :ref:`big integer <03_ride-language/02_data-types:BigInt>` equivalent"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":math:`65`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts the string representation of a number to its big integer equivalent. Fails if the string cannot be parsed"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`parseInt(String): Int|Unit <03_ride-language/03_functions:parseInt(String): Int|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts the string representation of a number to its integer equivalent"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`parseIntValue(String): Int <03_ride-language/03_functions:parseIntValue(String): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts the string representation of a number to its integer equivalent. Fails if the string cannot be parsed"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts an array of bytes to a big integer"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts an array of bytes starting from a certain index to a big integer"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toBigInt(Int): BigInt <03_ride-language/03_functions:toBigInt(Int): BigInt>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts an integer to a big integer"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toBytes(Boolean): ByteVector <03_ride-language/03_functions:toBytes(Boolean): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts a boolean to an array of bytes"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toBytes(Int): ByteVector <03_ride-language/03_functions:toBytes(Int): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts an integer to an array of bytes"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toBytes(String): ByteVector <03_ride-language/03_functions:toBytes(String): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts a string to an array of bytes"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toBytes(BigInt): ByteVector <03_ride-language/03_functions:toBytes(BigInt): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts a big integer to an array of bytes"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts a big integer to an integer. Fails if the number cannot be converted"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toInt(ByteVector): Int <03_ride-language/03_functions:toInt(ByteVector): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts an array of bytes to an integer"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toInt(ByteVector, Int): Int <03_ride-language/03_functions:toInt(ByteVector, Int): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts an array of bytes to an integer starting from a certain index"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toString(Address): String <03_ride-language/03_functions:toString(Address): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts an address to a string"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toString(Boolean): String <03_ride-language/03_functions:toString(Boolean): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts a boolean to a string"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toString(Int): String <03_ride-language/03_functions:toString(Int): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts an integer to a string"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts a big integer to a string"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`toUtf8String(ByteVector): String <03_ride-language/03_functions:toUtf8String(ByteVector): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Converts an array of bytes to a UTF-8 string"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid ":ref:`transferTransactionFromProto(ByteVector): TransferTransaction|Unit <03_ride-language/03_functions:transferTransactionFromProto(ByteVector): TransferTransaction|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/047_Converting-Functions.csv:1
msgid "Deserializes transfer transaction"
msgstr ""

#: ../../03_ride-language/03_functions.rst:880
msgid "addressFromPublicKey(ByteVector): Address"
msgstr ""

#: ../../03_ride-language/03_functions.rst:882
msgid "Gets the corresponding :ref:`address <02_decentralchain/01_account:Address>` of the account public key."
msgstr ""

#: ../../_static/03_ride-language/tables/048_Parameters.csv:1
msgid "publicKey: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/048_Parameters.csv:1
msgid "Public key."
msgstr ""

#: ../../03_ride-language/03_functions.rst:905
msgid "parseBigInt(String): BigInt|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:907
msgid "Converts the string representation of a number to its :ref:`big integer <03_ride-language/02_data-types:BigInt>` equivalent."
msgstr ""

#: ../../_static/03_ride-language/tables/049_Parameters.csv:1
#: ../../_static/03_ride-language/tables/050_Parameters.csv:1
#: ../../_static/03_ride-language/tables/051_Parameters.csv:1
#: ../../_static/03_ride-language/tables/052_Parameters.csv:1
#: ../../_static/03_ride-language/tables/058_Parameters.csv:1
#: ../../_static/03_ride-language/tables/136_Parameters.csv:1
#: ../../_static/03_ride-language/tables/137_Parameters.csv:1
#: ../../_static/03_ride-language/tables/138_Parameters.csv:1
#: ../../_static/03_ride-language/tables/139_Parameters.csv:1
#: ../../_static/03_ride-language/tables/142_Parameters.csv:1
msgid "str: :ref:`String <03_ride-language/02_data-types:String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/049_Parameters.csv:1
#: ../../_static/03_ride-language/tables/050_Parameters.csv:1
#: ../../_static/03_ride-language/tables/051_Parameters.csv:1
#: ../../_static/03_ride-language/tables/052_Parameters.csv:1
msgid "String to parse."
msgstr ""

#: ../../03_ride-language/03_functions.rst:922
msgid "parseBigIntValue(String): BigInt"
msgstr ""

#: ../../03_ride-language/03_functions.rst:924
msgid "Converts the string representation of a number to its :ref:`big integer <03_ride-language/02_data-types:BigInt>` equivalent. Fails if the string cannot be parsed."
msgstr ""

#: ../../03_ride-language/03_functions.rst:939
msgid "parseInt(String): Int|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:941
msgid "Converts the string representation of a number to its integer equivalent."
msgstr ""

#: ../../03_ride-language/03_functions.rst:965
msgid "parseIntValue(String): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:967
msgid "Converts the string representation of a number to its integer equivalent. Fails if the string cannot be parsed."
msgstr ""

#: ../../03_ride-language/03_functions.rst:992
msgid "toBigInt(ByteVector): BigInt"
msgstr ""

#: ../../03_ride-language/03_functions.rst:994
msgid "Converts an array of bytes to a :ref:`big integer <03_ride-language/02_data-types:BigInt>` using the big-endian byte order."
msgstr ""

#: ../../_static/03_ride-language/tables/053_Parameters.csv:1
#: ../../_static/03_ride-language/tables/054_Parameters.csv:1
#: ../../_static/03_ride-language/tables/061_Parameters.csv:1
#: ../../_static/03_ride-language/tables/062_Parameters.csv:1
msgid "bin: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/053_Parameters.csv:1
#: ../../_static/03_ride-language/tables/054_Parameters.csv:1
#: ../../_static/03_ride-language/tables/061_Parameters.csv:1
#: ../../_static/03_ride-language/tables/062_Parameters.csv:1
#: ../../_static/03_ride-language/tables/067_Parameters.csv:1
msgid "Array of bytes to convert."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1009
msgid "toBigInt(ByteVector, Int, Int): BigInt"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1011
msgid "Converts an array of bytes starting from a certain index to a :ref:`big integer <03_ride-language/02_data-types:BigInt>` using the big-endian byte order."
msgstr ""

#: ../../_static/03_ride-language/tables/054_Parameters.csv:1
#: ../../_static/03_ride-language/tables/062_Parameters.csv:1
#: ../../_static/03_ride-language/tables/137_Parameters.csv:1
#: ../../_static/03_ride-language/tables/139_Parameters.csv:1
msgid "offset: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/054_Parameters.csv:1
#: ../../_static/03_ride-language/tables/062_Parameters.csv:1
msgid "Index to start from."
msgstr ""

#: ../../_static/03_ride-language/tables/054_Parameters.csv:1
msgid "size: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/054_Parameters.csv:1
msgid "Number of bytes (subarray length) to convert."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1026
msgid "toBigInt(Int): BigInt"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1028
msgid "Converts an integer to a :ref:`big integer <03_ride-language/02_data-types:BigInt>`."
msgstr ""

#: ../../_static/03_ride-language/tables/055_Parameters.csv:1
#: ../../_static/03_ride-language/tables/057_Parameters.csv:1
#: ../../_static/03_ride-language/tables/065_Parameters.csv:1
msgid "n: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/055_Parameters.csv:1
#: ../../_static/03_ride-language/tables/057_Parameters.csv:1
#: ../../_static/03_ride-language/tables/065_Parameters.csv:1
msgid "Integer to convert."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1043
msgid "toBytes(Boolean): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1045
msgid "Converts a boolean value to an array of bytes."
msgstr ""

#: ../../_static/03_ride-language/tables/056_Parameters.csv:1
#: ../../_static/03_ride-language/tables/064_Parameters.csv:1
msgid "b: :ref:`Boolean <03_ride-language/02_data-types:Boolean>`"
msgstr ""

#: ../../_static/03_ride-language/tables/056_Parameters.csv:1
#: ../../_static/03_ride-language/tables/064_Parameters.csv:1
msgid "Boolean to convert."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1067
msgid "toBytes(Int): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1069
msgid "Converts an integer to an array of bytes using the big-endian byte order."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1090
msgid "toBytes(String): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1092
msgid "Converts a string to an array of bytes."
msgstr ""

#: ../../_static/03_ride-language/tables/058_Parameters.csv:1
msgid "String to convert."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1113
msgid "toBytes(BigInt): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1115
msgid "Converts a :ref:`big integer <03_ride-language/02_data-types:BigInt>` to an array of bytes using the big-endian byte order."
msgstr ""

#: ../../_static/03_ride-language/tables/059_Parameters.csv:1
#: ../../_static/03_ride-language/tables/060_Parameters.csv:1
#: ../../_static/03_ride-language/tables/066_Parameters.csv:1
msgid "n: :ref:`BigInt <03_ride-language/02_data-types:BigInt>`"
msgstr ""

#: ../../_static/03_ride-language/tables/059_Parameters.csv:1
#: ../../_static/03_ride-language/tables/060_Parameters.csv:1
#: ../../_static/03_ride-language/tables/066_Parameters.csv:1
msgid "Big integer to convert."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1131
msgid "toInt(BigInt): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1133
msgid "Converts a :ref:`big integer <03_ride-language/02_data-types:BigInt>` to an integer. Fails if the number cannot be converted."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1148
msgid "toInt(ByteVector): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1150
msgid "Converts an array of bytes to an integer using the big-endian byte order."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1171
msgid "toInt(ByteVector, Int): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1173
msgid "Converts an array of bytes to an integer starting from a certain index using the big-endian byte order."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1196
msgid "toString(Address): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1198
msgid "Converts an array of bytes of an :ref:`address <02_decentralchain/01_account:Address>` to a string."
msgstr ""

#: ../../_static/03_ride-language/tables/063_Parameters.csv:1
msgid "addr: :ref:`Address <03_ride-language/05_structures:Address>`"
msgstr ""

#: ../../_static/03_ride-language/tables/063_Parameters.csv:1
msgid "Address to convert."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1220
msgid "toString(Boolean): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1222
msgid "Converts a boolean value to a string."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1244
msgid "toString(Int): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1246
msgid "Converts an integer to a string."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1267
msgid "toString(BigInt): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1269
msgid "Converts a :ref:`big integer <03_ride-language/02_data-types:BigInt>` to a string."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1284
msgid "toUtf8String(ByteVector): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1286
msgid "Converts an array of bytes to a UTF-8 string. Fails if the array of bytes cotains an invalid UTF-8 sequence."
msgstr ""

#: ../../_static/03_ride-language/tables/067_Parameters.csv:1
msgid "u: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1308
msgid "transferTransactionFromProto(ByteVector): TransferTransaction|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1310
msgid "Deserializes transfer transaction: converts protobuf-encoded :ref:`binary format <02_decentralchain/10_binary-format:Transfer Transaction Binary Format>` specified in transaction.proto to a TransferTransaction structure. Returns unit if deserialization failed."
msgstr ""

#: ../../_static/03_ride-language/tables/068_Parameters.csv:1
msgid "b: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/068_Parameters.csv:1
msgid "Transfer transaction in protobuf-encoded binary format."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1338
#: ../../03_ride-language/03_functions.rst:1340
msgid "dApp-to-dApp Invocation Functions"
msgstr ""

#: ../../_static/03_ride-language/tables/069_dApp-to-dApp-Invocation-Functions.csv:1
msgid ":ref:`invoke(Address|Alias, String, List[Any], List[AttachedPayments]): Any <03_ride-language/03_functions:invoke(Address|Alias, String, List[Any], List[AttachedPayments]): Any>`"
msgstr ""

#: ../../_static/03_ride-language/tables/069_dApp-to-dApp-Invocation-Functions.csv:1
msgid "Invokes a dApp callable function, with :ref:`reentrancy restriction <03_ride-language/03_functions:dApp-to-dApp Invocation Functions>`"
msgstr ""

#: ../../_static/03_ride-language/tables/069_dApp-to-dApp-Invocation-Functions.csv:1
#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid ":math:`75`"
msgstr ""

#: ../../_static/03_ride-language/tables/069_dApp-to-dApp-Invocation-Functions.csv:1
msgid ":ref:`reentrantInvoke(Address|Alias, String, List[Any], List[AttachedPayments]): Any <03_ride-language/03_functions:reentrantInvoke(Address|Alias, String, List[Any], List[AttachedPayments]): Any>`"
msgstr ""

#: ../../_static/03_ride-language/tables/069_dApp-to-dApp-Invocation-Functions.csv:1
msgid "Invokes a dApp callable function, without reentrancy restriction"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1347
msgid "invoke(Address|Alias, String, List[Any], List[AttachedPayments]): Any"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1349
msgid "Invokes a dApp :ref:`callable function <03_ride-language/03_functions:Callable Functions>`, with reentrancy restriction."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1355
msgid "Any means any valid type. You can extract a particular type from it using as[T] and exactAs[T] macros or the match ... case operator, see the :ref:`any <03_ride-language/02_data-types:Any>` article."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1357
msgid "The invoke function can be used by a callable function of a :ref:`dApp script <03_ride-language/04_script-types:dApp Script>`, but not by a verifier function, :ref:`account script <03_ride-language/04_script-types:Account Script>` or :ref:`asset script <03_ride-language/04_script-types:Asset Script>`."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1359
msgid "Via the invoke function, the callable function can invoke a callable function of another dApp, or another callable function of the same dApp, or even itself, and then use the invocation results in subsequent operations. For details, see the :ref:`dApp-to-dApp invocation <03_ride-language/07_dapp-to-app-invocation:dApp-to-App Invocation>` article."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1361
msgid "To ensure executing callable functions and applying their actions in the right order, initialize a :ref:`strict variable <03_ride-language/01_syntax-basics:Strict Variables>` by the return value of an invoke function."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1363
msgid "The invocation can contain payments that will be transferred from the balance of the parent dApp to the balance of the invoked dApp. Payments are forbidden if the dApp invokes itself."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1365
msgid "If a payment token is a smart asset, the asset script verifies the invoke as if it was :ref:`InvokeScriptTransaction <03_ride-language/05_structures:InvokeScriptTransaction>` structure with the following fields:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1367
msgid "DApp, payments, function, args indicated in the invoke function."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1368
msgid "Sender, senderPublicKey of the dApp that performs the invocation."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1369
msgid "Id, timestamp, fee, feeAssetId indicated in the original invoke script transaction."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1370
msgid "Version = 0;"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1372
msgid "If the asset script denies the action, the Invoke Script transaction is either discarded or saved on the blockchain as failed, see the :ref:`transaction validation <02_decentralchain/03_transaction:Transaction Validation>` article."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1374
msgid ":strong:`Reentrancy Restriction`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1376
msgid "The invocation stack generated by the invoke function must not contain invocations of the parent dApp after invocation of another dApp. Let the parent dApp A invokes dApp B using the invoke function. Regardless of whether dApp B uses invoke or reentrantInvoke, the following invocation stacks will fail:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1391
msgid "The following invocation stacks are valid:"
msgstr ""

#: ../../_static/03_ride-language/tables/070_Parameters.csv:1
msgid "dApp: :ref:`Address <03_ride-language/05_structures:Address>` | :ref:`Alias <03_ride-language/05_structures:Alias>`"
msgstr ""

#: ../../_static/03_ride-language/tables/070_Parameters.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` or :ref:`alias <02_decentralchain/01_account:Alias>` of a dApp to invoke."
msgstr ""

#: ../../_static/03_ride-language/tables/070_Parameters.csv:1
msgid "function: :ref:`String <03_ride-language/02_data-types:String>` | :ref:`Unit <03_ride-language/02_data-types:Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/070_Parameters.csv:1
msgid "Name of a callable function. Unit for a default function invocation."
msgstr ""

#: ../../_static/03_ride-language/tables/070_Parameters.csv:1
msgid "arguments: :ref:`List <03_ride-language/02_data-types:List>` [:ref:`Any <03_ride-language/02_data-types:Any>`]"
msgstr ""

#: ../../_static/03_ride-language/tables/070_Parameters.csv:1
#: ../../_static/03_ride-language/tables/209_Invoke-and-ReentrantInvoke-Functions.csv:1
msgid "Parameters of a callable function."
msgstr ""

#: ../../_static/03_ride-language/tables/070_Parameters.csv:1
msgid "payments: :ref:`List <03_ride-language/02_data-types:List>` [:ref:`AttachedPayment <03_ride-language/05_structures:AttachedPayment>`]"
msgstr ""

#: ../../_static/03_ride-language/tables/070_Parameters.csv:1
#: ../../_static/03_ride-language/tables/209_Invoke-and-ReentrantInvoke-Functions.csv:1
msgid "Payments to transfer from the parent dApp to the invoked dApp, up to :math:`10`."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1422
msgid "A user sends an invoke script transaction that invokes the callable function foo of dApp1. The foo function invokes the bar function of dApp2 passing the number a and attaching a payment of 1 USDN. The bar function transfers :math:`1` :ref:`DecentralCoin <02_decentralchain/02_token(asset):DecentralCoin>` to dApp1 and returns the doubled number a. The foo function writes to dApp1 data storage:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1424
msgid "The value returned by bar."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1425
msgid "The new balance of dApp2 (reduced by :math:`1` DecentralCoin transferred to dApp1)."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1427
msgid "dApp1:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1451
msgid "dApp2:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1470
msgid "reentrantInvoke(Address|Alias, String, List[Any], List[AttachedPayments]): Any"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1472
msgid "Invokes a dApp :ref:`callable function <03_ride-language/03_functions:Callable Functions>`. The only difference from the invoke function above is that there is no reentrancy restriction for the parent dApp that uses reentrantInvoke. However, if the parent dApp is invoked again and this time uses the invoke function, the parent dApp cannot be invoked again in this invocation stack."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1474
msgid "For example, the invocation stack:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1484
msgid "Is valid if dApp A invokes both dApp B and dApp C via the reentrantInvoke function;"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1485
msgid "Fails if dApp A invokes dApp B via the reentrantInvoke function and invokes dApp C via the invoke function."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1492
#: ../../03_ride-language/03_functions.rst:1496
msgid "Data Transaction Functions"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1494
msgid "The functions listed below retrieve data by key from the :ref:`DataTransaction <03_ride-language/05_structures:DataTransaction>` structure or from any list of data entries."
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getBinary(List[], String): ByteVector|Unit <03_ride-language/03_functions:getBinary(List[], String): ByteVector|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets a binary value from a list of data entires by key"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getBinary(List[], Int): ByteVector|Unit <03_ride-language/03_functions:getBinary(List[], Int): ByteVector|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets a binary value from a list of data entires by index"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getBinaryValue(List[], String): ByteVector <03_ride-language/03_functions:getBinaryValue(List[], String): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets a binary value from a list of data entires by key. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getBinaryValue(List[], Int): ByteVector <03_ride-language/03_functions:getBinaryValue(List[], Int): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets a binary value from a list of data entires by index. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getBoolean(List[], String): Boolean|Unit <03_ride-language/03_functions:getBoolean(List[], String): Boolean|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets a boolean value from a list of data entires by key"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getBoolean(List[], Int): Boolean|Unit <03_ride-language/03_functions:getBoolean(List[], Int): Boolean|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets a boolean value from a list of data entires by index"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getBooleanValue(List[], String): Boolean <03_ride-language/03_functions:getBooleanValue(List[], String): Boolean>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets a boolean value from a list of data entires by key. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getBooleanValue(List[], Int): Boolean <03_ride-language/03_functions:getBooleanValue(List[], Int): Boolean>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets a boolean value from a list of data entires by index. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getInteger(List[], String): Int|Unit <03_ride-language/03_functions:getInteger(List[], String): Int|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets an integer value from a list of data entires by key"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getInteger(List[], Int): Int|Unit <03_ride-language/03_functions:getInteger(List[], Int): Int|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets an integer value from a list of data entires by index"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getIntegerValue(List[], String): Int <03_ride-language/03_functions:getIntegerValue(List[], String): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets an integer value from a list of data entires by key. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getIntegerValue(List[], Int): Int <03_ride-language/03_functions:getIntegerValue(List[], Int): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets an integer value from a list of data entires by index. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getString(List[], String): String|Unit <03_ride-language/03_functions:getString(List[], String): String|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets a string value from a list of data entires by key"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getString(List[], Int): String|Unit <03_ride-language/03_functions:getString(List[], Int): String|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets a string value from a list of data entires by index"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getStringValue(List[], String): String <03_ride-language/03_functions:getStringValue(List[], String): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets a string value from a list of data entires by key. Fails if there is no data"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid ":ref:`getStringValue(List[], Int): String <03_ride-language/03_functions:getStringValue(List[], Int): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/071_Data-Transaction-Functions.csv:1
msgid "Gets a string value from a list of data entires by index. Fails if there is no data"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1503
msgid "getBinary(List[], String): ByteVector|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1505
msgid "Gets a binary value from a list of data entires by key."
msgstr ""

#: ../../_static/03_ride-language/tables/072_Parameters.csv:1
#: ../../_static/03_ride-language/tables/073_Parameters.csv:1
#: ../../_static/03_ride-language/tables/074_Parameters.csv:1
#: ../../_static/03_ride-language/tables/075_Parameters.csv:1
#: ../../_static/03_ride-language/tables/076_Parameters.csv:1
#: ../../_static/03_ride-language/tables/077_Parameters.csv:1
#: ../../_static/03_ride-language/tables/078_Parameters.csv:1
#: ../../_static/03_ride-language/tables/079_Parameters.csv:1
#: ../../_static/03_ride-language/tables/080_Parameters.csv:1
#: ../../_static/03_ride-language/tables/081_Parameters.csv:1
#: ../../_static/03_ride-language/tables/082_Parameters.csv:1
#: ../../_static/03_ride-language/tables/083_Parameters.csv:1
#: ../../_static/03_ride-language/tables/084_Parameters.csv:1
#: ../../_static/03_ride-language/tables/085_Parameters.csv:1
#: ../../_static/03_ride-language/tables/086_Parameters.csv:1
#: ../../_static/03_ride-language/tables/087_Parameters.csv:1
msgid "data: :ref:`List <03_ride-language/02_data-types:List>` []"
msgstr ""

#: ../../_static/03_ride-language/tables/072_Parameters.csv:1
#: ../../_static/03_ride-language/tables/073_Parameters.csv:1
#: ../../_static/03_ride-language/tables/074_Parameters.csv:1
#: ../../_static/03_ride-language/tables/075_Parameters.csv:1
#: ../../_static/03_ride-language/tables/076_Parameters.csv:1
#: ../../_static/03_ride-language/tables/077_Parameters.csv:1
#: ../../_static/03_ride-language/tables/078_Parameters.csv:1
#: ../../_static/03_ride-language/tables/079_Parameters.csv:1
#: ../../_static/03_ride-language/tables/080_Parameters.csv:1
#: ../../_static/03_ride-language/tables/081_Parameters.csv:1
#: ../../_static/03_ride-language/tables/082_Parameters.csv:1
#: ../../_static/03_ride-language/tables/083_Parameters.csv:1
#: ../../_static/03_ride-language/tables/084_Parameters.csv:1
#: ../../_static/03_ride-language/tables/085_Parameters.csv:1
#: ../../_static/03_ride-language/tables/086_Parameters.csv:1
#: ../../_static/03_ride-language/tables/087_Parameters.csv:1
msgid "List of data entries, usually tx.data."
msgstr ""

#: ../../_static/03_ride-language/tables/072_Parameters.csv:1
#: ../../_static/03_ride-language/tables/074_Parameters.csv:1
#: ../../_static/03_ride-language/tables/076_Parameters.csv:1
#: ../../_static/03_ride-language/tables/078_Parameters.csv:1
#: ../../_static/03_ride-language/tables/080_Parameters.csv:1
#: ../../_static/03_ride-language/tables/082_Parameters.csv:1
#: ../../_static/03_ride-language/tables/084_Parameters.csv:1
#: ../../_static/03_ride-language/tables/086_Parameters.csv:1
msgid "Key."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1520
msgid "getBinary(List[], Int): ByteVector|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1522
msgid "Gets a binary value from a list of data entires by index."
msgstr ""

#: ../../_static/03_ride-language/tables/073_Parameters.csv:1
#: ../../_static/03_ride-language/tables/075_Parameters.csv:1
#: ../../_static/03_ride-language/tables/077_Parameters.csv:1
#: ../../_static/03_ride-language/tables/079_Parameters.csv:1
#: ../../_static/03_ride-language/tables/081_Parameters.csv:1
#: ../../_static/03_ride-language/tables/083_Parameters.csv:1
#: ../../_static/03_ride-language/tables/085_Parameters.csv:1
#: ../../_static/03_ride-language/tables/087_Parameters.csv:1
#: ../../_static/03_ride-language/tables/153_Parameters.csv:1
msgid "index: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/073_Parameters.csv:1
#: ../../_static/03_ride-language/tables/075_Parameters.csv:1
#: ../../_static/03_ride-language/tables/077_Parameters.csv:1
#: ../../_static/03_ride-language/tables/079_Parameters.csv:1
#: ../../_static/03_ride-language/tables/081_Parameters.csv:1
#: ../../_static/03_ride-language/tables/083_Parameters.csv:1
#: ../../_static/03_ride-language/tables/085_Parameters.csv:1
#: ../../_static/03_ride-language/tables/087_Parameters.csv:1
msgid "Index."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1537
msgid "getBinaryValue(List[], String): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1539
msgid "Gets a binary value from a list of data entires by key. Fails if there is no data."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1554
msgid "getBinaryValue(List[], Int): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1556
msgid "Gets a binary value from a list of data entires by index. Fails if there is no data."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1571
msgid "getBoolean(List[], String): Boolean|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1573
msgid "Gets a boolean value from a list of data entires by key."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1588
msgid "getBoolean(List[], Int): Boolean|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1590
msgid "Gets a boolean value from a list of data entires by index."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1605
msgid "getBooleanValue(List[], String): Boolean"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1607
msgid "Gets a boolean value from a list of data entires by key. Fails if there is no data."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1622
msgid "getBooleanValue(List[], Int): Boolean"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1624
msgid "Gets a boolean value from a list of data entires by index. Fails if there is no data."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1639
msgid "getInteger(List[], String): Int|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1641
msgid "Gets integer from a list of data entires by key."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1656
msgid "getInteger(List[], Int): Int|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1658
msgid "Gets an integer value from a list of data entires by index."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1673
msgid "getIntegerValue(List[], String): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1675
msgid "Gets an integer value from a list of data entires by key. Fails if there is no data."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1690
msgid "getIntegerValue(List[], Int): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1692
msgid "Gets an integer value from a list of data entires by index. Fails if there is no data."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1707
msgid "getString(List[], String): String|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1709
#: ../../03_ride-language/03_functions.rst:1726
msgid "Gets a string value from a list of data entires by key."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1724
msgid "getString(List[], Int): String|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1741
msgid "getStringValue(List[], String): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1743
msgid "Gets a string value from a list of data entires by key. Fails if there is no data."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1758
msgid "getStringValue(List[], Int): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1760
msgid "Gets a string value from a list of data entires by index. Fails if there is no data."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1775
#: ../../03_ride-language/03_functions.rst:1777
msgid "Decoding Functions"
msgstr ""

#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
msgid ":ref:`addressFromString(String): Address|Unit <03_ride-language/03_functions:addressFromString(String): Address|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
msgid "Decodes address from base58 string"
msgstr ""

#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
msgid ":ref:`addressFromStringValue(String): Address <03_ride-language/03_functions:addressFromStringValue(String): Address>`"
msgstr ""

#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
msgid "Decodes address from base58 string. Fails if the address cannot be decoded"
msgstr ""

#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
msgid ":ref:`fromBase16String(String): ByteVector <03_ride-language/03_functions:fromBase16String(String): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
msgid "Decodes base16 string to an array of bytes"
msgstr ""

#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
msgid ":ref:`fromBase58String(String): ByteVector <03_ride-language/03_functions:fromBase58String(String): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
msgid "Decodes base58 string to an array of bytes"
msgstr ""

#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
msgid ":ref:`fromBase64String(String): ByteVector <03_ride-language/03_functions:fromBase64String(String): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
msgid "Decodes base64 string to an array of bytes"
msgstr ""

#: ../../_static/03_ride-language/tables/088_Decoding-Functions.csv:1
#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid ":math:`40`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1784
msgid "addressFromString(String): Address|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1786
msgid "Decodes address from base58 string."
msgstr ""

#: ../../_static/03_ride-language/tables/089_Parameters.csv:1
#: ../../_static/03_ride-language/tables/090_Parameters.csv:1
#: ../../_static/03_ride-language/tables/091_Parameters.csv:1
#: ../../_static/03_ride-language/tables/092_Parameters.csv:1
#: ../../_static/03_ride-language/tables/093_Parameters.csv:1
msgid "string: :ref:`string <03_ride-language/02_data-types:String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/089_Parameters.csv:1
#: ../../_static/03_ride-language/tables/090_Parameters.csv:1
#: ../../_static/03_ride-language/tables/091_Parameters.csv:1
#: ../../_static/03_ride-language/tables/092_Parameters.csv:1
#: ../../_static/03_ride-language/tables/093_Parameters.csv:1
msgid "String to decode."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1809
msgid "addressFromStringValue(String): Address"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1811
msgid "Decodes address from base58 string. Fails if the address cannot be decoded."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1834
msgid "fromBase16String(String): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1836
msgid "Decodes a base16 string to an array of bytes."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1857
msgid "fromBase58String(String): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1859
msgid "Decodes a base58 string to an array of bytes."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1880
msgid "fromBase64String(String): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1882
msgid "Decodes a base64 string to an array of bytes."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1903
#: ../../03_ride-language/03_functions.rst:1905
msgid "Encoding Functions"
msgstr ""

#: ../../_static/03_ride-language/tables/094_Encoding-Functions.csv:1
msgid ":ref:`toBase16String(ByteVector): String <03_ride-language/03_functions:toBase16String(ByteVector): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/094_Encoding-Functions.csv:1
msgid "Encodes array of bytes to base16 string"
msgstr ""

#: ../../_static/03_ride-language/tables/094_Encoding-Functions.csv:1
msgid ":ref:`toBase58String(ByteVector): String <03_ride-language/03_functions:toBase58String(ByteVector): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/094_Encoding-Functions.csv:1
msgid "Encodes array of bytes to base58 string"
msgstr ""

#: ../../_static/03_ride-language/tables/094_Encoding-Functions.csv:1
msgid ":ref:`toBase64String(ByteVector): String <03_ride-language/03_functions:toBase64String(ByteVector): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/094_Encoding-Functions.csv:1
msgid "Encodes array of bytes to base64 string"
msgstr ""

#: ../../_static/03_ride-language/tables/094_Encoding-Functions.csv:1
msgid ":math:`35`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1912
msgid "toBase16String(ByteVector): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1914
msgid "Encodes an array of bytes to a base16 string."
msgstr ""

#: ../../_static/03_ride-language/tables/095_Parameters.csv:1
#: ../../_static/03_ride-language/tables/096_Parameters.csv:1
#: ../../_static/03_ride-language/tables/097_Parameters.csv:1
#: ../../_static/03_ride-language/tables/102_Parameters.csv:1
#: ../../_static/03_ride-language/tables/104_Parameters.csv:1
#: ../../_static/03_ride-language/tables/106_Parameters.csv:1
msgid "bytes: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/095_Parameters.csv:1
#: ../../_static/03_ride-language/tables/096_Parameters.csv:1
#: ../../_static/03_ride-language/tables/097_Parameters.csv:1
msgid "Array of bytes to encode."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1936
msgid "toBase58String(ByteVector): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1938
msgid "Encodes an array of bytes to a base58 string."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1960
msgid "toBase64String(ByteVector): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1962
msgid "Encodes an array of bytes to a base64 string."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1984
#: ../../03_ride-language/03_functions.rst:1986
msgid "Exception Functions"
msgstr ""

#: ../../_static/03_ride-language/tables/098_Exception-Functions.csv:1
msgid ":ref:`throw() <03_ride-language/03_functions:throw()>`"
msgstr ""

#: ../../_static/03_ride-language/tables/098_Exception-Functions.csv:1
msgid "Raises an exception"
msgstr ""

#: ../../_static/03_ride-language/tables/098_Exception-Functions.csv:1
msgid ":ref:`throw(String) <03_ride-language/03_functions:throw(String)>`"
msgstr ""

#: ../../_static/03_ride-language/tables/098_Exception-Functions.csv:1
msgid "Raises an exception with a message"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1992
msgid "The return type of throw is nothing. There is no exception handling in Ride: after an exception has been thrown, the script execution fails. The transaction can be either discarded or saved on the blockchain as failed, see the :ref:`transaction validation <02_decentralchain/03_transaction:Transaction Validation>` article for details."
msgstr ""

#: ../../03_ride-language/03_functions.rst:1995
msgid "throw()"
msgstr ""

#: ../../03_ride-language/03_functions.rst:1997
msgid "Raises an exception."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2000
msgid "throw(String)"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2002
msgid "Raises an exception with a message."
msgstr ""

#: ../../_static/03_ride-language/tables/099_Parameters.csv:1
msgid "err: :ref:`String <03_ride-language/02_data-types:String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/099_Parameters.csv:1
msgid "The exception message."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2017
#: ../../03_ride-language/03_functions.rst:2019
msgid "Hashing Functions"
msgstr ""

#: ../../_static/03_ride-language/tables/100_Hashing-Functions.csv:1
msgid ":ref:`blake2b256(ByteVector): ByteVector <03_ride-language/03_functions:blake2b256(ByteVector): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/100_Hashing-Functions.csv:1
msgid "Range of functions. Hash an array of bytes using BLAKE2b-256"
msgstr ""

#: ../../_static/03_ride-language/tables/100_Hashing-Functions.csv:1
msgid ":math:`10–200`"
msgstr ""

#: ../../_static/03_ride-language/tables/100_Hashing-Functions.csv:1
msgid ":ref:`keccak256(ByteVector): ByteVector <03_ride-language/03_functions:keccak256(ByteVector): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/100_Hashing-Functions.csv:1
msgid "Range of functions. Hash an array of bytes using Keccak-256"
msgstr ""

#: ../../_static/03_ride-language/tables/100_Hashing-Functions.csv:1
msgid ":ref:`sha256(ByteVector): ByteVector <03_ride-language/03_functions:sha256(ByteVector): ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/100_Hashing-Functions.csv:1
msgid "Range of functions. Hash an array of bytes using SHA-256"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2026
msgid "blake2b256(ByteVector): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2028
msgid "Range of functions that hash an array of bytes using BLAKE2b-256."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2030
msgid "blake2b256"
msgstr ""

#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
#: ../../_static/03_ride-language/tables/105_sha256.csv:1
msgid "Max data size"
msgstr ""

#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
msgid "blake2b256(bytes: ByteVector): ByteVector"
msgstr ""

#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
#: ../../_static/03_ride-language/tables/105_sha256.csv:1
#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid ":math:`150` kB"
msgstr ""

#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
msgid "blake2b256_16Kb(bytes: ByteVector): ByteVector"
msgstr ""

#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
#: ../../_static/03_ride-language/tables/105_sha256.csv:1
#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid ":math:`16` kB"
msgstr ""

#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
msgid "blake2b256_32Kb(bytes: ByteVector): ByteVector"
msgstr ""

#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
#: ../../_static/03_ride-language/tables/105_sha256.csv:1
#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid ":math:`32` kB"
msgstr ""

#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
#: ../../_static/03_ride-language/tables/105_sha256.csv:1
msgid ":math:`25`"
msgstr ""

#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
msgid "blake2b256_64Kb(bytes: ByteVector): ByteVector"
msgstr ""

#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
#: ../../_static/03_ride-language/tables/105_sha256.csv:1
#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid ":math:`64` kB"
msgstr ""

#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
#: ../../_static/03_ride-language/tables/105_sha256.csv:1
msgid ":math:`50`"
msgstr ""

#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
msgid "blake2b256_128Kb(bytes: ByteVector): ByteVector"
msgstr ""

#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
#: ../../_static/03_ride-language/tables/105_sha256.csv:1
#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid ":math:`128` kB"
msgstr ""

#: ../../_static/03_ride-language/tables/101_blake2b256.csv:1
#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
#: ../../_static/03_ride-language/tables/105_sha256.csv:1
#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`100`"
msgstr ""

#: ../../_static/03_ride-language/tables/102_Parameters.csv:1
msgid "The array of bytes to encode. Maximum size: 1) For blake2b256_<N>Kb functions — N kB. 2) For blake2b256 function — 150 kB."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2055
msgid "keccak256(ByteVector): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2057
msgid "Range of functions that hash an array of bytes using Keccak-256."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2059
msgid "keccak256"
msgstr ""

#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
msgid "keccak256(bytes: ByteVector): ByteVector\""
msgstr ""

#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
msgid "keccak256_16Kb(bytes: ByteVector): ByteVector\""
msgstr ""

#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
msgid "keccak256_32Kb(bytes: ByteVector): ByteVector\""
msgstr ""

#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
msgid "keccak256_64Kb(bytes: ByteVector): ByteVector\""
msgstr ""

#: ../../_static/03_ride-language/tables/103_keccak256.csv:1
msgid "keccak256_128Kb(bytes: ByteVector): ByteVector\""
msgstr ""

#: ../../_static/03_ride-language/tables/104_Parameters.csv:1
msgid "The array of bytes to encode. Maximum size: 1) For keccak256_<N>Kb functions — N kB. 2) For keccak256 function — 150 kB."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2084
msgid "sha256(ByteVector): ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2086
msgid "Range of functions that hash an array of bytes using SHA-256."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2088
msgid "sha256"
msgstr ""

#: ../../_static/03_ride-language/tables/105_sha256.csv:1
msgid "sha256(bytes: ByteVector): ByteVector\""
msgstr ""

#: ../../_static/03_ride-language/tables/105_sha256.csv:1
msgid "sha256_16Kb(bytes: ByteVector): ByteVector\""
msgstr ""

#: ../../_static/03_ride-language/tables/105_sha256.csv:1
msgid "sha256_32Kb(bytes: ByteVector): ByteVector\""
msgstr ""

#: ../../_static/03_ride-language/tables/105_sha256.csv:1
msgid "sha256_64Kb(bytes: ByteVector): ByteVector\""
msgstr ""

#: ../../_static/03_ride-language/tables/105_sha256.csv:1
msgid "sha256_128Kb(bytes: ByteVector): ByteVector\""
msgstr ""

#: ../../_static/03_ride-language/tables/106_Parameters.csv:1
msgid "The array of bytes to encode. Maximum size: 1) For sha256_<N>Kb functions — N kB. 2) For sha256 function — 150 kB."
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid ":ref:`cons(A, List[B]): List[A|B] <03_ride-language/03_functions:cons(A, List[B]): List[A|B]>`"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid "Inserts element to the beginning of the list"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid ":ref:`containsElement(List[T], T): Boolean <03_ride-language/03_functions:containsElement(List[T], T): Boolean>`"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid "Check if the element is in the list"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid ":ref:`getElement(List[T], Int): T <03_ride-language/03_functions:getElement(List[T], Int): T>`"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid "Gets element from the list"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid ":ref:`indexOf(List[T], T): Int|Unit <03_ride-language/03_functions:indexOf(List[T], T): Int|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid "Returns the index of the first occurrence of the element in the list"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid ":ref:`lastIndexOf(List[T], T): Int|Unit <03_ride-language/03_functions:lastIndexOf(List[T], T): Int|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid "Returns the index of the last occurrence of the element in the list"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid ":ref:`max(List[Int]): Int <03_ride-language/03_functions:max(List[Int]): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid "Returns the largest element in the list of integers"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid "Returns the largest element in the list of big integers"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid ":math:`192`"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid ":ref:`min(List[Int]): Int <03_ride-language/03_functions:min(List[Int]): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid "Returns the smallest element in the list of integers"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid "Returns the smallest element in the list of big integers"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid ":ref:`removeByIndex(List[T], Int): List[T] <03_ride-language/03_functions:removeByIndex(List[T], Int): List[T]>`"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid "Removes an element from the list by index"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid ":ref:`size(List[T]): Int <03_ride-language/03_functions:size(List[T]): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/107_List-Functions.csv:1
msgid "Returns the size of the list"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2121
msgid "A, B, T means any valid type."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2124
msgid "cons(A, List[B]): List[A|B]"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2126
msgid "Inserts element to the beginning of the :ref:`list <03_ride-language/02_data-types:List>`."
msgstr ""

#: ../../_static/03_ride-language/tables/108_Parameters.csv:1
msgid "head: T"
msgstr ""

#: ../../_static/03_ride-language/tables/108_Parameters.csv:1
msgid "Element"
msgstr ""

#: ../../_static/03_ride-language/tables/108_Parameters.csv:1
msgid "tail: :ref:`List <03_ride-language/02_data-types:List>` [T]"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2148
msgid "containsElement(List[T], T): Boolean"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2150
msgid "Check if the element is in the :ref:`list <03_ride-language/02_data-types:List>`."
msgstr ""

#: ../../_static/03_ride-language/tables/109_Parameters.csv:1
#: ../../_static/03_ride-language/tables/111_Parameters.csv:1
#: ../../_static/03_ride-language/tables/112_Parameters.csv:1
#: ../../_static/03_ride-language/tables/117_Parameters.csv:1
msgid "list: :ref:`List <03_ride-language/02_data-types:List>` [T]"
msgstr ""

#: ../../_static/03_ride-language/tables/109_Parameters.csv:1
#: ../../_static/03_ride-language/tables/111_Parameters.csv:1
#: ../../_static/03_ride-language/tables/112_Parameters.csv:1
msgid "element: T"
msgstr ""

#: ../../_static/03_ride-language/tables/109_Parameters.csv:1
msgid "Element to search for"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2165
msgid "getElement(List[T], Int): T"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2167
msgid "Gets the element from the :ref:`list <03_ride-language/02_data-types:List>` by index."
msgstr ""

#: ../../_static/03_ride-language/tables/110_Parameters.csv:1
#: ../../_static/03_ride-language/tables/118_Parameters.csv:1
msgid "arr: :ref:`List <03_ride-language/02_data-types:List>` [T]"
msgstr ""

#: ../../_static/03_ride-language/tables/110_Parameters.csv:1
msgid "pos: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/110_Parameters.csv:1
#: ../../_static/03_ride-language/tables/117_Parameters.csv:1
msgid "Index of the element"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2189
msgid "indexOf(List[T], T): Int|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2191
msgid "Returns the index of the first occurrence of the element in the :ref:`list <03_ride-language/02_data-types:List>` or unit if the element is missing."
msgstr ""

#: ../../_static/03_ride-language/tables/111_Parameters.csv:1
#: ../../_static/03_ride-language/tables/112_Parameters.csv:1
msgid "Element to locate"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2213
msgid "lastIndexOf(List[T], T): Int|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2215
msgid "Returns the index of the last occurrence of the element in the :ref:`list <03_ride-language/02_data-types:List>` or unit if the element is missing."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2237
msgid "max(List[Int]): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2239
msgid "Returns the largest element in the :ref:`list <03_ride-language/02_data-types:List>` of integers. Fails if the list is empty."
msgstr ""

#: ../../_static/03_ride-language/tables/113_Parameters.csv:1
#: ../../_static/03_ride-language/tables/115_Parameters.csv:1
msgid "list: :ref:`List <03_ride-language/02_data-types:List>` [:ref:`Int <03_ride-language/02_data-types:Int>`]"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2254
msgid "max(List[BigInt]): BigInt"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2256
msgid "Returns the largest element in the list of :ref:`big integers <03_ride-language/02_data-types:BigInt>`. Fails if the list is empty."
msgstr ""

#: ../../_static/03_ride-language/tables/114_Parameters.csv:1
#: ../../_static/03_ride-language/tables/116_Parameters.csv:1
msgid "list: :ref:`List <03_ride-language/02_data-types:List>` [:ref:`BigInt <03_ride-language/02_data-types:BigInt>`]"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2271
msgid "min(List[Int]): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2273
msgid "Returns the smallest element in the :ref:`list <03_ride-language/02_data-types:List>` of integers. Fails if the list is empty."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2288
msgid "min(List[BigInt]): BigInt"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2290
msgid "Returns the smallest element in the list of :ref:`big integers <03_ride-language/02_data-types:BigInt>`. Fails if the list is empty."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2305
msgid "removeByIndex(List[T], Int): List[T]"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2307
msgid "Removes an element from the :ref:`list <03_ride-language/02_data-types:List>` by index."
msgstr ""

#: ../../_static/03_ride-language/tables/117_Parameters.csv:1
msgid "index: T"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2328
msgid "size(List[T]): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2330
msgid "Returns the size of the :ref:`list <03_ride-language/02_data-types:List>`."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2351
#: ../../03_ride-language/03_functions.rst:2353
msgid "Math Functions"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid ":ref:`fraction(Int, Int, Int): Int <03_ride-language/03_functions:fraction(Int, Int, Int): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid "Multiplies and divides integers to avoid overflow"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/202_Network.csv:1
msgid ":math:`14`"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid ":ref:`fraction(Int, Int, Int, Union): Int <03_ride-language/03_functions:fraction(Int, Int, Int, Union): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid "Multiplies and divides integers to avoid overflow, applying the specified rounding method"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
msgid ":math:`17`"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid "Multiplies and divides bid integers to avoid overflow"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid ":math:`128`"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid "Multiplies and divides big integers to avoid overflow, applying the specified rounding method"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid ":ref:`log(Int, Int, Int, Int, Int, Union): Int <03_ride-language/03_functions:log(Int, Int, Int, Int, Int, Union): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid "Calculates logarithm of a number with a base"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid "Calculates logarithm of a number to a given base with high accuracy"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid ":ref:`median(List[Int]): Int <03_ride-language/03_functions:median(List[Int]): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid "Returns the median of a list of integers"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid "Returns the median of a list of big integers"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid ":math:`160`"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid ":ref:`pow(Int, Int, Int, Int, Int, Union): Int <03_ride-language/03_functions:pow(Int, Int, Int, Int, Int, Union): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid "Raises a number to a given power"
msgstr ""

#: ../../_static/03_ride-language/tables/119_Math-Functions.csv:1
msgid "Raises a number to a given power with high accuracy"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2360
msgid "fraction(Int, Int, Int): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2362
msgid "Multiplies :ref:`integers <03_ride-language/02_data-types:Int>` :math:`a`, :math:`b` and divides the result by the integer :math:`c` to avoid overflow."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2364
#: ../../03_ride-language/03_functions.rst:2407
#: ../../03_ride-language/03_functions.rst:2426
#: ../../03_ride-language/03_functions.rst:2445
msgid "Fraction :math:`a × b / c` should not exceed the maximum value of the integer type :math:`9,223,372,036,854,755,807`."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2366
msgid "The rounding method is DOWN, see rounding variables below."
msgstr ""

#: ../../_static/03_ride-language/tables/120_Parameters.csv:1
#: ../../_static/03_ride-language/tables/121_Parameters.csv:1
msgid "a: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/120_Parameters.csv:1
#: ../../_static/03_ride-language/tables/121_Parameters.csv:1
msgid "Integer a"
msgstr ""

#: ../../_static/03_ride-language/tables/120_Parameters.csv:1
#: ../../_static/03_ride-language/tables/121_Parameters.csv:1
msgid "b: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/120_Parameters.csv:1
#: ../../_static/03_ride-language/tables/121_Parameters.csv:1
msgid "Integer b"
msgstr ""

#: ../../_static/03_ride-language/tables/120_Parameters.csv:1
#: ../../_static/03_ride-language/tables/121_Parameters.csv:1
msgid "c: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/120_Parameters.csv:1
#: ../../_static/03_ride-language/tables/121_Parameters.csv:1
msgid "Integer c"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2382
msgid "Lets assume that:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2384
msgid ":math:`a = 100,000,000,000`,"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2386
msgid ":math:`b = 50,000,000,000,000`,"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2388
msgid ":math:`c = 2,500,000`."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2390
msgid "The following formula, with :ref:`operators <03_ride-language/01_syntax-basics:Operators>` \\* and /, fails due to overflow:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2396
msgid "The fraction function with no overflow:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2403
msgid "fraction(Int, Int, Int, Union): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2405
#: ../../03_ride-language/03_functions.rst:2424
#: ../../03_ride-language/03_functions.rst:2443
msgid "Multiplies :ref:`integers <03_ride-language/02_data-types:Int>` :math:`a`, :math:`b` and divides the result by the integer :math:`c` to avoid overflow, applying the specified rounding method."
msgstr ""

#: ../../_static/03_ride-language/tables/121_Parameters.csv:1
#: ../../_static/03_ride-language/tables/123_Parameters.csv:1
#: ../../_static/03_ride-language/tables/124_Parameters.csv:1
#: ../../_static/03_ride-language/tables/125_Parameters.csv:1
#: ../../_static/03_ride-language/tables/128_Parameters.csv:1
#: ../../_static/03_ride-language/tables/129_Parameters.csv:1
msgid "round: DOWN|CEILING|FLOOR|HALFUP|HALFEVEN"
msgstr ""

#: ../../_static/03_ride-language/tables/121_Parameters.csv:1
#: ../../_static/03_ride-language/tables/123_Parameters.csv:1
msgid "One of the rounding variables"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2422
msgid "fraction(BigInt, BigInt, BigInt): BigInt"
msgstr ""

#: ../../_static/03_ride-language/tables/122_Parameters.csv:1
#: ../../_static/03_ride-language/tables/123_Parameters.csv:1
msgid "a: :ref:`BigInt <03_ride-language/02_data-types:BigInt>`"
msgstr ""

#: ../../_static/03_ride-language/tables/122_Parameters.csv:1
#: ../../_static/03_ride-language/tables/123_Parameters.csv:1
msgid "Big integer a"
msgstr ""

#: ../../_static/03_ride-language/tables/122_Parameters.csv:1
#: ../../_static/03_ride-language/tables/123_Parameters.csv:1
msgid "b: :ref:`BigInt <03_ride-language/02_data-types:BigInt>`"
msgstr ""

#: ../../_static/03_ride-language/tables/122_Parameters.csv:1
#: ../../_static/03_ride-language/tables/123_Parameters.csv:1
msgid "Big integer b"
msgstr ""

#: ../../_static/03_ride-language/tables/122_Parameters.csv:1
#: ../../_static/03_ride-language/tables/123_Parameters.csv:1
msgid "c: :ref:`BigInt <03_ride-language/02_data-types:BigInt>`"
msgstr ""

#: ../../_static/03_ride-language/tables/122_Parameters.csv:1
#: ../../_static/03_ride-language/tables/123_Parameters.csv:1
msgid "Big integer c"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2441
msgid "fraction(BigInt, BigInt, BigInt, Union): BigInt"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2460
msgid "log(Int, Int, Int, Int, Int, Union): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2462
msgid "Calculates :math:`\\log_b a`."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2468
msgid "In Ride, there is no :ref:`data type <03_ride-language/02_data-types:Data Types>` with the floating point. That is why, for example, when you need to calculate :math:`\\log_{2.7} 16.25` then the number value :math:`= 1625`, vp :math:`= 2` and the base :math:`= 27`, bp :math:`= 1`."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2470
msgid "If the log function returns, for example, :math:`2807035420964590265`, and the parameter rp :math:`= 18`, then the result is :math:`2.807035420964590265`; in the number :math:`2807035420964590265` the last :math:`18` digits is a fractional part."
msgstr ""

#: ../../_static/03_ride-language/tables/124_Parameters.csv:1
msgid "value: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/124_Parameters.csv:1
#: ../../_static/03_ride-language/tables/125_Parameters.csv:1
msgid "Number a without decimal point."
msgstr ""

#: ../../_static/03_ride-language/tables/124_Parameters.csv:1
#: ../../_static/03_ride-language/tables/125_Parameters.csv:1
msgid "vp: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/124_Parameters.csv:1
#: ../../_static/03_ride-language/tables/125_Parameters.csv:1
#: ../../_static/03_ride-language/tables/128_Parameters.csv:1
#: ../../_static/03_ride-language/tables/129_Parameters.csv:1
msgid "Number of decimals of a."
msgstr ""

#: ../../_static/03_ride-language/tables/124_Parameters.csv:1
#: ../../_static/03_ride-language/tables/128_Parameters.csv:1
msgid "base: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/124_Parameters.csv:1
#: ../../_static/03_ride-language/tables/125_Parameters.csv:1
#: ../../_static/03_ride-language/tables/128_Parameters.csv:1
#: ../../_static/03_ride-language/tables/129_Parameters.csv:1
msgid "Logarithm base b without decimal point."
msgstr ""

#: ../../_static/03_ride-language/tables/124_Parameters.csv:1
#: ../../_static/03_ride-language/tables/125_Parameters.csv:1
#: ../../_static/03_ride-language/tables/128_Parameters.csv:1
#: ../../_static/03_ride-language/tables/129_Parameters.csv:1
msgid "bp: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/124_Parameters.csv:1
#: ../../_static/03_ride-language/tables/125_Parameters.csv:1
#: ../../_static/03_ride-language/tables/128_Parameters.csv:1
#: ../../_static/03_ride-language/tables/129_Parameters.csv:1
msgid "Number of decimals of b."
msgstr ""

#: ../../_static/03_ride-language/tables/124_Parameters.csv:1
#: ../../_static/03_ride-language/tables/125_Parameters.csv:1
#: ../../_static/03_ride-language/tables/128_Parameters.csv:1
#: ../../_static/03_ride-language/tables/129_Parameters.csv:1
msgid "rp: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/124_Parameters.csv:1
#: ../../_static/03_ride-language/tables/128_Parameters.csv:1
msgid "Number of decimals in the resulting value, from :math:`0` to :math:`8` inclusive. Specifies the accuracy of the calculated result."
msgstr ""

#: ../../_static/03_ride-language/tables/124_Parameters.csv:1
#: ../../_static/03_ride-language/tables/125_Parameters.csv:1
#: ../../_static/03_ride-language/tables/128_Parameters.csv:1
#: ../../_static/03_ride-language/tables/129_Parameters.csv:1
msgid "One of the rounding variables."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2482
msgid ":math:`\\log_{2.7} 16.25 = 2.807035421...`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2491
msgid "log(BigInt, Int, BigInt, Int, Int, Union): BigInt"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2493
msgid "Calculates :math:`\\log_b a` with high accuracy."
msgstr ""

#: ../../_static/03_ride-language/tables/125_Parameters.csv:1
msgid "value: :ref:`BigInt <03_ride-language/02_data-types:BigInt>`"
msgstr ""

#: ../../_static/03_ride-language/tables/125_Parameters.csv:1
#: ../../_static/03_ride-language/tables/129_Parameters.csv:1
msgid "base: :ref:`BigInt <03_ride-language/02_data-types:BigInt>`"
msgstr ""

#: ../../_static/03_ride-language/tables/125_Parameters.csv:1
#: ../../_static/03_ride-language/tables/129_Parameters.csv:1
msgid "Number of decimals in the resulting value, from :math:`0` to :math:`18` inclusive. Specifies the accuracy of the calculated result."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2508
msgid "median(List[Int]): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2510
msgid "Returns the median of the :ref:`list <03_ride-language/02_data-types:List>` of integers. Fails if the list is empty."
msgstr ""

#: ../../_static/03_ride-language/tables/126_Parameters.csv:1
msgid "arr: :ref:`List <03_ride-language/02_data-types:List>` [:ref:`Int <03_ride-language/02_data-types:Int>`]"
msgstr ""

#: ../../_static/03_ride-language/tables/126_Parameters.csv:1
msgid "List of integers"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2533
msgid "median(List[BigInt]): BigInt"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2535
msgid "Returns the median of a :ref:`list <03_ride-language/02_data-types:List>` of :ref:`big integers <03_ride-language/02_data-types:BigInt>`. Fails if the list is empty or contains more than :math:`100` elements."
msgstr ""

#: ../../_static/03_ride-language/tables/127_Parameters.csv:1
msgid "arr: :ref:`List <03_ride-language/02_data-types:List>` [:ref:`BigInt <03_ride-language/02_data-types:BigInt>`]"
msgstr ""

#: ../../_static/03_ride-language/tables/127_Parameters.csv:1
msgid "List of big integers"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2550
msgid "pow(Int, Int, Int, Int, Int, Union): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2552
msgid "Calculates :math:`a^{b}`."
msgstr ""

#: ../../_static/03_ride-language/tables/128_Parameters.csv:1
msgid "exponent: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/128_Parameters.csv:1
#: ../../_static/03_ride-language/tables/129_Parameters.csv:1
msgid "Exponent b without decimal point."
msgstr ""

#: ../../_static/03_ride-language/tables/128_Parameters.csv:1
#: ../../_static/03_ride-language/tables/129_Parameters.csv:1
msgid "ep: :ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2568
msgid ":math:`16.25^{2.7} = 1859,1057168...`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2576
msgid "pow(BigInt, Int, BigInt, Int, Int, Union): BigInt"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2578
msgid "Calculates :math:`a^{b}` with high accuracy."
msgstr ""

#: ../../_static/03_ride-language/tables/129_Parameters.csv:1
msgid "exponent: :ref:`BigInt <03_ride-language/02_data-types:BigInt>`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2593
#: ../../03_ride-language/03_functions.rst:2599
msgid "Rounding Variables"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2595
msgid "Below is the list of built-in rounding variables. The rounding variables are only used as the parameters of functions fraction, log, pow."
msgstr ""

#: ../../_static/03_ride-language/tables/130_Rounding-Variables.csv:1
#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid "DOWN"
msgstr ""

#: ../../_static/03_ride-language/tables/130_Rounding-Variables.csv:1
msgid "Rounds towards zero."
msgstr ""

#: ../../_static/03_ride-language/tables/130_Rounding-Variables.csv:1
#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid "CEILING"
msgstr ""

#: ../../_static/03_ride-language/tables/130_Rounding-Variables.csv:1
msgid "Rounds towards positive infinity."
msgstr ""

#: ../../_static/03_ride-language/tables/130_Rounding-Variables.csv:1
#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid "FLOOR"
msgstr ""

#: ../../_static/03_ride-language/tables/130_Rounding-Variables.csv:1
msgid "Rounds towards negative infinity."
msgstr ""

#: ../../_static/03_ride-language/tables/130_Rounding-Variables.csv:1
#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid "HALFUP"
msgstr ""

#: ../../_static/03_ride-language/tables/130_Rounding-Variables.csv:1
msgid "Rounds towards the nearest integer; if the integers are equidistant, then rounds away from zero."
msgstr ""

#: ../../_static/03_ride-language/tables/130_Rounding-Variables.csv:1
#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid "HALFEVEN"
msgstr ""

#: ../../_static/03_ride-language/tables/130_Rounding-Variables.csv:1
msgid "Rounds towards the nearest integer; if the integers are equidistant, then rounds towards the nearest even integer."
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid "Input number/Rounding method"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`5.5`"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`2.5`"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`1.6`"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`1.1`"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`1.0`"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`-1.0`"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`-1`"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`-1.1`"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`-2`"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`-1.6`"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`-2.5`"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`-3`"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`-5.5`"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`-5`"
msgstr ""

#: ../../_static/03_ride-language/tables/131_Example.csv:1
msgid ":math:`-6`"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid ":ref:`contains(String, String): Boolean <03_ride-language/03_functions:contains(String, String): Boolean>`"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid "Checks whether the string contains substring"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid ":ref:`drop(String, Int): String <03_ride-language/03_functions:drop(String, Int): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid "Drops the first n characters of a string"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid ":ref:`dropRight(String, Int): String <03_ride-language/03_functions:dropRight(String, Int): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid "Drops the last n characters of a string"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid ":ref:`indexOf(String, String): Int|Unit <03_ride-language/03_functions:indexOf(String, String): Int|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid "Returns the index of the first occurrence of a substring"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid ":ref:`indexOf(String, String, Int): Int|Unit <03_ride-language/03_functions:indexOf(String, String, Int): Int|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid "Returns the index of the first occurrence of a substring after a certain index"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid ":ref:`lastIndexOf(String, String): Int|Unit <03_ride-language/03_functions:lastIndexOf(String, String): Int|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid "Returns the index of the last occurrence of a substring"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid ":ref:`lastindexOf(String, String, Int): Int|Unit <03_ride-language/03_functions:lastindexOf(String, String, Int): Int|Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid "Returns the index of the last occurrence of a substring before a certain index"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid ":ref:`makeString(List[String], String): String <03_ride-language/03_functions:makeString(List[String], String): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid "Concatenates list strings adding a separator"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`30`"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid ":ref:`size(String): Int <03_ride-language/03_functions:size(String): Int>`"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid "Returns the size of a string"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid ":ref:`split(String, String): List[String] <03_ride-language/03_functions:split(String, String): List[String]>`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2850
#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid "Splits a string delimited by a separator into a list of substrings."
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid ":ref:`take(String, Int): String <03_ride-language/03_functions:take(String, Int): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid "Takes the first n characters from a string"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid ":ref:`takeRight(String, Int): String <03_ride-language/03_functions:takeRight(String, Int): String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/132_String-Functions.csv:1
msgid "Takes the last n characters from a string"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2623
msgid "contains(String, String): Boolean"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2625
msgid "Checks whether the string contains substring."
msgstr ""

#: ../../_static/03_ride-language/tables/133_Parameters.csv:1
msgid "haystack: :ref:`String <03_ride-language/02_data-types:String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/133_Parameters.csv:1
msgid "String to search in."
msgstr ""

#: ../../_static/03_ride-language/tables/133_Parameters.csv:1
msgid "needle: :ref:`String <03_ride-language/02_data-types:String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/133_Parameters.csv:1
msgid "String to search for."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2647
msgid "drop(String, Int): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2649
msgid "Drops the first n characters of a string."
msgstr ""

#: ../../_static/03_ride-language/tables/134_Parameters.csv:1
#: ../../_static/03_ride-language/tables/135_Parameters.csv:1
#: ../../_static/03_ride-language/tables/141_Parameters.csv:1
#: ../../_static/03_ride-language/tables/143_Parameters.csv:1
#: ../../_static/03_ride-language/tables/144_Parameters.csv:1
msgid "xs: :ref:`String <03_ride-language/02_data-types:String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/134_Parameters.csv:1
#: ../../_static/03_ride-language/tables/135_Parameters.csv:1
#: ../../_static/03_ride-language/tables/136_Parameters.csv:1
#: ../../_static/03_ride-language/tables/137_Parameters.csv:1
#: ../../_static/03_ride-language/tables/138_Parameters.csv:1
#: ../../_static/03_ride-language/tables/139_Parameters.csv:1
#: ../../_static/03_ride-language/tables/141_Parameters.csv:1
#: ../../_static/03_ride-language/tables/142_Parameters.csv:1
#: ../../_static/03_ride-language/tables/143_Parameters.csv:1
#: ../../_static/03_ride-language/tables/144_Parameters.csv:1
msgid "The string."
msgstr ""

#: ../../_static/03_ride-language/tables/134_Parameters.csv:1
#: ../../_static/03_ride-language/tables/135_Parameters.csv:1
#: ../../_static/03_ride-language/tables/143_Parameters.csv:1
#: ../../_static/03_ride-language/tables/144_Parameters.csv:1
msgid "The number n."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2674
msgid "dropRight(String, Int): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2676
msgid "Drops the last n characters of a string."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2701
msgid "indexOf(String, String): Int|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2703
msgid "Returns the index of the first occurrence of a substring."
msgstr ""

#: ../../_static/03_ride-language/tables/136_Parameters.csv:1
#: ../../_static/03_ride-language/tables/137_Parameters.csv:1
#: ../../_static/03_ride-language/tables/138_Parameters.csv:1
#: ../../_static/03_ride-language/tables/139_Parameters.csv:1
msgid "substr: :ref:`String <03_ride-language/02_data-types:String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/136_Parameters.csv:1
#: ../../_static/03_ride-language/tables/137_Parameters.csv:1
#: ../../_static/03_ride-language/tables/138_Parameters.csv:1
#: ../../_static/03_ride-language/tables/139_Parameters.csv:1
msgid "The substring."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2726
msgid "indexOf(String, String, Int): Int|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2728
msgid "Returns the index of the first occurrence of a substring after a certain index."
msgstr ""

#: ../../_static/03_ride-language/tables/137_Parameters.csv:1
#: ../../_static/03_ride-language/tables/139_Parameters.csv:1
msgid "The index."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2751
msgid "lastIndexOf(String, String): Int|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2753
msgid "Returns the index of the last occurrence of a substring."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2776
msgid "lastIndexOf(String, String, Int): Int|Unit"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2778
msgid "Returns the index of the last occurrence of a substring before a certain index."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2800
msgid "makeString(List[String], String): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2802
msgid "Concatenates list strings adding a separator."
msgstr ""

#: ../../_static/03_ride-language/tables/140_Parameters.csv:1
msgid "arr: :ref:`List <03_ride-language/02_data-types:List>` [:ref:`String <03_ride-language/02_data-types:String>`]"
msgstr ""

#: ../../_static/03_ride-language/tables/140_Parameters.csv:1
msgid "List of strings to concatenate."
msgstr ""

#: ../../_static/03_ride-language/tables/140_Parameters.csv:1
#: ../../_static/03_ride-language/tables/142_Parameters.csv:1
msgid "separator: :ref:`String <03_ride-language/02_data-types:String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/140_Parameters.csv:1
msgid "Separator."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2823
msgid "size(String): Int"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2825
msgid "Returns the size of a string."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2848
msgid "split(String, String): List[String]"
msgstr ""

#: ../../_static/03_ride-language/tables/142_Parameters.csv:1
msgid "The separator."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2874
msgid "take(String, Int): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2876
msgid "Takes the first n characters from a string."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2902
msgid "takeRight(String, Int): String"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2904
msgid "Takes the last n characters from a string."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2929
#: ../../03_ride-language/03_functions.rst:2931
msgid "Union Functions"
msgstr ""

#: ../../_static/03_ride-language/tables/145_Union-Functions.csv:1
msgid ":ref:`isDefined(T|Unit): Boolean <03_ride-language/03_functions:isDefined(T|Unit): Boolean>`"
msgstr ""

#: ../../_static/03_ride-language/tables/145_Union-Functions.csv:1
msgid "Checks if an argument is not unit"
msgstr ""

#: ../../_static/03_ride-language/tables/145_Union-Functions.csv:1
msgid ":ref:`value(T|Unit): T <03_ride-language/03_functions:value(T|Unit): T>`"
msgstr ""

#: ../../_static/03_ride-language/tables/145_Union-Functions.csv:1
msgid "Gets a value from a union type argument. Fails if it is unit"
msgstr ""

#: ../../_static/03_ride-language/tables/145_Union-Functions.csv:1
msgid ":ref:`valueOrElse(T|Unit, T): T <03_ride-language/03_functions:valueOrElse(T|Unit, T): T>`"
msgstr ""

#: ../../_static/03_ride-language/tables/145_Union-Functions.csv:1
msgid "Returns a value from a union type argument if it's not unit. Otherwise, returns the second argument"
msgstr ""

#: ../../_static/03_ride-language/tables/145_Union-Functions.csv:1
msgid ":ref:`valueOrErrorMessage(T|Unit, String): T <03_ride-language/03_functions:valueOrErrorMessage(T|Unit, String): T>`"
msgstr ""

#: ../../_static/03_ride-language/tables/145_Union-Functions.csv:1
msgid "Gets a value from a union type argument if it's not unit. Otherwise, fails with the message specified in the second argument"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2938
msgid "isDefined(T|Unit): Boolean"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2940
msgid "Checks if an argument is not unit."
msgstr ""

#: ../../_static/03_ride-language/tables/146_Parameters.csv:1
#: ../../_static/03_ride-language/tables/147_Parameters.csv:1
#: ../../_static/03_ride-language/tables/148_Parameters.csv:1
#: ../../_static/03_ride-language/tables/149_Parameters.csv:1
msgid "a: T|Unit"
msgstr ""

#: ../../_static/03_ride-language/tables/146_Parameters.csv:1
msgid "Argument to check."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2955
msgid "value(T|Unit): T"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2957
msgid "Gets a value from a :ref:`union <03_ride-language/02_data-types:Union>` type argument. Fails if it is :ref:`unit <03_ride-language/02_data-types:Unit>`."
msgstr ""

#: ../../_static/03_ride-language/tables/147_Parameters.csv:1
#: ../../_static/03_ride-language/tables/148_Parameters.csv:1
#: ../../_static/03_ride-language/tables/149_Parameters.csv:1
msgid "Argument to return value from."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2972
msgid "valueOrElse(T|Unit, T): T"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2974
msgid "Returns a value from a :ref:`union <03_ride-language/02_data-types:Union>` type argument if it's not :ref:`unit <03_ride-language/02_data-types:Unit>`. Otherwise, returns the second argument."
msgstr ""

#: ../../_static/03_ride-language/tables/148_Parameters.csv:1
msgid "t0: T"
msgstr ""

#: ../../_static/03_ride-language/tables/148_Parameters.csv:1
msgid "Returned if t is unit."
msgstr ""

#: ../../03_ride-language/03_functions.rst:2989
msgid "valueOrErrorMessage(T|Unit, String): T"
msgstr ""

#: ../../03_ride-language/03_functions.rst:2991
msgid "Returns a value from a :ref:`union <03_ride-language/02_data-types:Union>` type argument if it's not :ref:`unit <03_ride-language/02_data-types:Unit>`. Otherwise, fails with the message specified in the second argument."
msgstr ""

#: ../../_static/03_ride-language/tables/149_Parameters.csv:1
msgid "msg: :ref:`String <03_ride-language/02_data-types:String>`"
msgstr ""

#: ../../_static/03_ride-language/tables/149_Parameters.csv:1
msgid "Error message."
msgstr ""

#: ../../03_ride-language/03_functions.rst:3006
#: ../../03_ride-language/03_functions.rst:3008
msgid "Verification Functions"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid ":ref:`bn256groth16Verify(ByteVector, ByteVector, ByteVector): Boolean <03_ride-language/03_functions:bn256groth16Verify(ByteVector, ByteVector, ByteVector): Boolean>`"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid "Range of functions. Check zk-SNARK by groth16 protocol on the bn254 curve"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid ":math:`800–1650`"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid ":ref:`createMerkleRoot(List[ByteVector], ByteVector, Int) : ByteVector <03_ride-language/03_functions:createMerkleRoot(List[ByteVector], ByteVector, Int) : ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid "Calculates the Merkle root hash for transactions of block"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid ":ref:`ecrecover(messageHash: ByteVector, signature: ByteVector) <03_ride-language/03_functions:ecrecover(messageHash: ByteVector, signature: ByteVector)>`"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid "Recovers public key from the message hash and the ECDSA digital signature"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid ":math:`70`"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid ":ref:`groth16Verify(ByteVector, ByteVector, ByteVector): Boolean <03_ride-language/03_functions:groth16Verify(ByteVector, ByteVector, ByteVector): Boolean>`"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid "Range of functions. Check zk-SNARK by groth16 protocol on the bls12-381 curve"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid ":math:`1200–2700`"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid ":ref:`rsaVerify(digestAlgorithmType, ByteVector, ByteVector, ByteVector): Boolean <03_ride-language/03_functions:rsaVerify(digestAlgorithmType, ByteVector, ByteVector, ByteVector): Boolean>`"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid "Range of functions. Check that the RSA digital signature is valid, i.e. it was created by the owner of the public key"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid ":math:`500–1000`"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid ":ref:`sigVerify(ByteVector, ByteVector, ByteVector): Boolean <03_ride-language/03_functions:sigVerify(ByteVector, ByteVector, ByteVector): Boolean>`"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid "Range of functions. Check that the Curve25519 digital signature is valid, i.e. it was created by the owner of the public key"
msgstr ""

#: ../../_static/03_ride-language/tables/150_Verification-Functions.csv:1
msgid ":math:`47–200`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3015
msgid "bn256groth16Verify(ByteVector, ByteVector, ByteVector): Boolean"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3017
msgid "Range of functions. Check zk-SNARK by groth16 protocol on the bn254 curve. (Although the curve is called bn254 in the scientific literature, it is commonly referred to as bn256 in the code.)"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3019
msgid "bn256groth16Verify"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "Max number of inputs"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid ":math:`16`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid ":math:`1650`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_1inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid ":math:`800`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_2inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid ":math:`850`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_3inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid ":math:`950`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_4inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`1000`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_5inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid ":math:`1050`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_6inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid ":math:`1100`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_7inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid ":math:`1150`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_8inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`1200`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_9inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid ":math:`1250`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_10inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`1300`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_11inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/194_Usage.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
msgid ":math:`11`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid ":math:`1350`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_12inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/194_Usage.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
msgid ":math:`12`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`1400`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_13inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/194_Usage.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
msgid ":math:`13`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid ":math:`1450`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_14inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid ":math:`1550`"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
msgid "bn256groth16Verify_15inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/151_bn256groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`1600`"
msgstr ""

#: ../../_static/03_ride-language/tables/152_Parameters.csv:1
#: ../../_static/03_ride-language/tables/156_Parameters.csv:1
msgid "vk: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/152_Parameters.csv:1
msgid "Key for the check. Maximum size: 1) For bn256groth16Verify_<N>inputs function — :math:`256 + 32 × N` bytes. 2) For bn256groth16Verify function — :math:`256 + 32 × 16 = 768` bytes."
msgstr ""

#: ../../_static/03_ride-language/tables/152_Parameters.csv:1
#: ../../_static/03_ride-language/tables/156_Parameters.csv:1
msgid "proof: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/152_Parameters.csv:1
msgid "Zero-knowledge proof. Fixed size: :math:`128` bytes."
msgstr ""

#: ../../_static/03_ride-language/tables/152_Parameters.csv:1
#: ../../_static/03_ride-language/tables/156_Parameters.csv:1
msgid "inputs: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/152_Parameters.csv:1
msgid "Zero-knowledge proof's public inputs array. For example, array of UTXO hashes in case of shielded transactions. Maximum size: 1) For bn256groth16Verify_<N>inputs function – :math:`32 × N` bytes. 2) For bn256groth16Verify function – :math:`512` bytes."
msgstr ""

#: ../../03_ride-language/03_functions.rst:3034
msgid "createMerkleRoot(List[ByteVector], ByteVector, Int) : ByteVector"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3036
msgid "Calculates the Merkle root hash for transactions of block on the basis of the transaction hash and the sibling hashes of the Merkle tree. BLAKE2b-256 algorithm is used for hashing. To check for the transaction in the block, you need to compare the calculated hash with the transactionsRoot field in the block header. For more informtion see the :ref:`transactions root hash <02_decentralchain/04_block:Transactions Root Hash>`."
msgstr ""

#: ../../_static/03_ride-language/tables/153_Parameters.csv:1
msgid "merkleProofs: :ref:`List <03_ride-language/02_data-types:List>` [:ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`]"
msgstr ""

#: ../../_static/03_ride-language/tables/153_Parameters.csv:1
msgid "Array of sibling hashes of the Merkle tree. Up to :math:`16` items, :math:`32` bytes each."
msgstr ""

#: ../../_static/03_ride-language/tables/153_Parameters.csv:1
msgid "valueBytes: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/153_Parameters.csv:1
msgid "Hash of transaction. Fixed size: :math:`32` bytes. You can use blake2b256 function. The transaction must be hashed together with the signature."
msgstr ""

#: ../../_static/03_ride-language/tables/153_Parameters.csv:1
msgid "Index of the transaction in the block."
msgstr ""

#: ../../03_ride-language/03_functions.rst:3051
msgid "ecrecover(messageHash: ByteVector, signature: ByteVector)"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3053
msgid "Recovers public key from the message hash and the ECDSA digital signature based on the secp256k1 elliptic curve. Fails if the recovery failed. The public key is returned in uncompressed format (64 bytes). The function can be used to verify the digital signature of a message by comparing the recovered public key with the sender’s key."
msgstr ""

#: ../../_static/03_ride-language/tables/154_Parameters.csv:1
msgid "messageHash: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/154_Parameters.csv:1
msgid "Keccak-256 hash of the message. Fixed size: :math:`32`."
msgstr ""

#: ../../_static/03_ride-language/tables/154_Parameters.csv:1
msgid "signature: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/154_Parameters.csv:1
msgid "ECDSA digital signature. Fixed size: :math:`65` bytes."
msgstr ""

#: ../../03_ride-language/03_functions.rst:3069
msgid "Verify the transaction of the Ethereum blockchain using the following data:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3071
msgid "The transaction."
msgstr ""

#: ../../03_ride-language/03_functions.rst:3072
msgid "The signature that is generated by the ecsign functions (r, s, and v bytes concatenation)."
msgstr ""

#: ../../03_ride-language/03_functions.rst:3073
msgid "Sender public key."
msgstr ""

#: ../../03_ride-language/03_functions.rst:3082
msgid "groth16Verify(ByteVector, ByteVector, ByteVector): Boolean"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3084
msgid "Range of functions. Check zk-SNARK by groth16 protocol."
msgstr ""

#: ../../03_ride-language/03_functions.rst:3086
msgid "groth16Verify"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`2700`"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_1inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_2inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_3inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_4inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`1500`"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_5inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_6inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`1700`"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_7inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`1800`"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_8inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`1900`"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_9inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`2000`"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_10inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`2100`"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_11inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`2200`"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_12inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`2300`"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_13inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`2400`"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_14inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`2500`"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid "groth16Verify_15inputs(vk:ByteVector, proof:ByteVector, inputs:ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/155_groth16Verify.csv:1
msgid ":math:`2600`"
msgstr ""

#: ../../_static/03_ride-language/tables/156_Parameters.csv:1
msgid "Key for the check. Maximum size: 1) For groth16Verify_<N>inputs function — :math:`384 + 48 × N` bytes. 2) For groth16Verify function — :math:`384 + 48 × 16 = 1152` bytes."
msgstr ""

#: ../../_static/03_ride-language/tables/156_Parameters.csv:1
msgid "Zero-knowledge proof. Fixed size: :math:`192` bytes."
msgstr ""

#: ../../_static/03_ride-language/tables/156_Parameters.csv:1
msgid "Zero-knowledge proof's public inputs array. For example, array of UTXO hashes in case of shielded transactions. Maximum size: 1) For groth16Verify_<N>inputs function – :math:`32 × N` bytes. 2) For groth16Verify function – :math:`512` bytes."
msgstr ""

#: ../../03_ride-language/03_functions.rst:3107
msgid "rsaVerify(digestAlgorithmType, ByteVector, ByteVector, ByteVector): Boolean"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3109
msgid "Range of functions. Check that the RSA digital signature is valid, i.e. it was created by the owner of the public key."
msgstr ""

#: ../../03_ride-language/03_functions.rst:3111
msgid "rsaVerify"
msgstr ""

#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid "Max message size"
msgstr ""

#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
msgid "rsaVerify(digest: digestAlgorithmType, message: ByteVector, sig: ByteVector, pub: ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
msgid "rsaVerify_16Kb(digest: digestAlgorithmType, message: ByteVector, sig: ByteVector, pub: ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
msgid ":math:`500`"
msgstr ""

#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
msgid "rsaVerify_32Kb(digest: digestAlgorithmType, message: ByteVector, sig: ByteVector, pub: ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
msgid ":math:`550`"
msgstr ""

#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
msgid "rsaVerify_64Kb(digest: digestAlgorithmType, message: ByteVector, sig: ByteVector, pub: ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
msgid ":math:`625`"
msgstr ""

#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
msgid "rsaVerify_128Kb(digest: digestAlgorithmType, message: ByteVector, sig: ByteVector, pub: ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/157_rsaVerify.csv:1
msgid ":math:`750`"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3117
msgid "The recommended RSA key module length is at least 2048 bits. Data can be hashed before signing using one of the following algorithms:"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3119
msgid "MD5"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3120
msgid "SHA-1"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3121
msgid "SHA-224"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3122
msgid "SHA-256"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3123
msgid "SHA-384"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3124
msgid "SHA-512"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3125
msgid "SHA3-224"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3126
msgid "SHA3-256"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3127
msgid "SHA3-384"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3128
msgid "SHA3-512"
msgstr ""

#: ../../_static/03_ride-language/tables/158_Parameters.csv:1
msgid "digest: digestAlgorithmType"
msgstr ""

#: ../../_static/03_ride-language/tables/158_Parameters.csv:1
msgid "The hashing algorithm applied to the data before signing. Acceptable values: 1) NOALG — data is not hashed. 2) MD5. 3) SHA1. 4) SHA224. 5) SHA256. 6) SHA384. 7) SHA512. 8) SHA3224. 9) SHA3256. 10) SHA3384. 11) SHA3512."
msgstr ""

#: ../../_static/03_ride-language/tables/158_Parameters.csv:1
#: ../../_static/03_ride-language/tables/160_Parameters.csv:1
msgid "message: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/158_Parameters.csv:1
msgid "Signed data. Maximum size: 1)  For rsaVerify_<N>Kb functions — :math:`N` bytes. 2) For rsaVerify function — :math:`150` bytes."
msgstr ""

#: ../../_static/03_ride-language/tables/158_Parameters.csv:1
#: ../../_static/03_ride-language/tables/160_Parameters.csv:1
msgid "sig: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/158_Parameters.csv:1
#: ../../_static/03_ride-language/tables/160_Parameters.csv:1
msgid "Digital signature. Fixed size: :math:`25` bytes."
msgstr ""

#: ../../_static/03_ride-language/tables/158_Parameters.csv:1
#: ../../_static/03_ride-language/tables/160_Parameters.csv:1
msgid "pub: :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../_static/03_ride-language/tables/158_Parameters.csv:1
#: ../../_static/03_ride-language/tables/160_Parameters.csv:1
msgid "Binary public key. Fixed size: :math:`294` bytes."
msgstr ""

#: ../../03_ride-language/03_functions.rst:3139
msgid "sigVerify(ByteVector, ByteVector, ByteVector): Boolean"
msgstr ""

#: ../../03_ride-language/03_functions.rst:3141
msgid "Range of functions. Check that the Curve25519 digital signature is valid, i.e. it was created by the owner of the public key."
msgstr ""

#: ../../03_ride-language/03_functions.rst:3143
msgid "sigVerify"
msgstr ""

#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid "sigVerify(message: ByteVector, sig: ByteVector, pub: ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid "sigVerify_8Kb(message: ByteVector, sig: ByteVector, pub: ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid ":math:`8` kB"
msgstr ""

#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid ":math:`47`"
msgstr ""

#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid "sigVerify_16Kb(message: ByteVector, sig: ByteVector, pub: ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid ":math:`57`"
msgstr ""

#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid "sigVerify_32Kb(message: ByteVector, sig: ByteVector, pub: ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid "sigVerify_64Kb(message: ByteVector, sig: ByteVector, pub: ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid ":math:`102`"
msgstr ""

#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid "sigVerify_128Kb(message: ByteVector, sig: ByteVector, pub: ByteVector): Boolean"
msgstr ""

#: ../../_static/03_ride-language/tables/159_sigVerify.csv:1
msgid ":math:`172`"
msgstr ""

#: ../../_static/03_ride-language/tables/160_Parameters.csv:1
msgid "Signed data. Maximum size: 1)  For sigVerify_<N>Kb functions — :math:`N` bytes. 2) For sigVerify function — :math:`150` bytes."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:3
#: ../../03_ride-language/04_script-types.rst:13
msgid "Script Types"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:5
msgid "There are three types of scripts:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:7
msgid ":ref:`dApp script <03_ride-language/04_script-types:dApp Script>` enables you to define :ref:`сallable functions <03_ride-language/03_functions:Callable Functions>` that can be called from other accounts, accept payments to the dApp, and perform various actions on the blockchain. Also dApp script can comprise a verifier function that allows or denies transactions and orders that are sent on behalf of the dApp account."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:8
msgid ":ref:`Account script <03_ride-language/04_script-types:Account Script>` allows or denies transactions and orders that are sent on behalf of the account (like a verifier function of a dApp script)."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:9
msgid ":ref:`Asset script <03_ride-language/04_script-types:Asset Script>` allows or denies transactions involving the asset."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:11
msgid "Features of each script type are described in the table."
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "dApp script"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Account script"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Asset script"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "{-# CONTENT_TYPE DAPP #-} {-# SCRIPT_TYPE ACCOUNT #-}"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "{-# CONTENT_TYPE EXPRESSION #-} {-# SCRIPT_TYPE ACCOUNT #-}"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "{-# CONTENT_TYPE EXPRESSION #-} {-# SCRIPT_TYPE ASSET #-}"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Content"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Set of definitions"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:364
#: ../../03_ride-language/04_script-types.rst:442
#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Boolean expression"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "this variable"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid ":ref:`Address <03_ride-language/05_structures:Address>` structure containing dApp address"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Address structure containing smart account address"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid ":ref:`Asset <03_ride-language/03_functions:Math Functions>` structure"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Transaction or order that is checked"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Check is performed by the verifier function only. Annotation of the function sets the name of the variable that contains the outgoing transaction or the order, for example: @Verifier(tx)"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Built-in variable tx: Transaction|Order contains the outgoing transaction or the order"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Build-in variable tx: Transaction contains the transaction involving the asset. Order check is not supported."
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Proofs accessibility"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "\\1) Proofs of the outgoing transaction or the order are accessible to the verifier function. 2) Proofs of the invoke script transaction are inaccessible to the callable function"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Accessible"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Inaccessible"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "Blockchain data"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "\\1) Accessible to the callable function. 2) Accessible to the verifier function when checking a transaction. 3) Inaccessible to the verifier function when checking an order"
msgstr ""

#: ../../_static/03_ride-language/tables/161_Script-Types.csv:1
msgid "\\1) Accessible when checking a transaction. 2) Inaccessible when checking an order"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:20
msgid "dApp Script"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:22
msgid "dApp script enables you to define callable functions that can be called from other accounts by sending an :ref:`invoke script transaction <02_decentralchain/03_transaction:Invoke Script Transaction>` or by a :ref:`dApp-to-dApp invocation <03_ride-language/07_dapp-to-app-invocation:dApp-to-App Invocation>`. Callable functions can accept payments to the dApp and perform various actions on the blockchain. Also dApp script can comprise a verifier function that allows or denies transactions and orders that are sent on behalf of the dApp account. An account with a dApp script assigned to it is called a dApp."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:26
msgid "dApp Script Format"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:28
#: ../../03_ride-language/04_script-types.rst:360
#: ../../03_ride-language/04_script-types.rst:438
msgid "The script code is composed of the following parts:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:30
msgid ":ref:`Directives <03_ride-language/04_script-types:Directives>`"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:31
msgid ":ref:`Auxiliary definitions <03_ride-language/04_script-types:Auxiliary definitions>`"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:32
msgid ":ref:`Callable function <03_ride-language/04_script-types:Callable function>`"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:33
msgid ":ref:`Verifier function <03_ride-language/04_script-types:Verifier function>`"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:40
msgid "The dApp script should start with directives:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:48
#: ../../03_ride-language/04_script-types.rst:379
#: ../../03_ride-language/04_script-types.rst:457
msgid "The above directives tell the compiler that:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:50
#: ../../03_ride-language/04_script-types.rst:189
#: ../../03_ride-language/04_script-types.rst:381
#: ../../03_ride-language/04_script-types.rst:459
msgid "The script uses the standard library version 5."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:51
msgid "The script contains a set of definitions."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:52
#: ../../03_ride-language/04_script-types.rst:383
msgid "The script will be assigned to an account (not asset)."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:55
#: ../../03_ride-language/04_script-types.rst:363
#: ../../03_ride-language/04_script-types.rst:441
msgid "Auxiliary definitions"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:57
msgid "After the directives, you can define auxiliary variables and functions. These variables and functions are accessible within the entire script. Please note that functions without annotations cannot be called from other accounts. Let's see an exaxmple:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:67
msgid "Callable Functions (dApp Script)"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:69
msgid "The callable function should be marked with the @Callable(i) annotation, where i is an :ref:`Invocation <03_ride-language/05_structures:Invocation>` structure that contains fields of the script invocation that are accessible to the callable function. The variable name in the annotation is required even if the function does not use it. Callable function result is a set of :ref:`script actions <03_ride-language/05_structures:Script Actions>` that are performed on the blockchain: adding/deleting/modifying entries to the account data storages, token transfers, issue/reissue/burning, and others. The result format and the available actions depend on the Standard library version used. For a detailed description, see the :ref:`callable function <03_ride-language/03_functions:Callable Functions>` article."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:73
msgid "In the example below the callable function transfers 1 DecentralCoin to an account that called it and records the request information in the account data storage. If the same account tries to call the function again, the callable function throws an exception."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:97
#: ../../03_ride-language/04_script-types.rst:313
msgid "Verifier Function"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:99
msgid "Verifier function checks transactions and orders that are sent on behalf of the dApp account for compliance with the specified conditions (in other words it works similar to the account script). The verifier function should be marked with the @Verifier(tx) annotation, where tx is the transaction or the order that the function is currently checking. The variable name in the annotation is required even if the function does not use it. The verifier function has no arguments.Possible results of the verifier function are:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:103
#: ../../03_ride-language/04_script-types.rst:403
#: ../../03_ride-language/04_script-types.rst:480
msgid "True (the transaction or the order is allowed),"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:104
#: ../../03_ride-language/04_script-types.rst:404
#: ../../03_ride-language/04_script-types.rst:481
msgid "False (the transaction or the order is denied),"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:105
#: ../../03_ride-language/04_script-types.rst:405
#: ../../03_ride-language/04_script-types.rst:482
msgid "An error (the transaction or the order is denied)."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:107
msgid "For a detailed description, see verifier function the article. Using the :ref:`match ... case <03_ride-language/01_syntax-basics:Match-Case>` operator, you can set up different conditions depending on the type of the transaction/order. For example, the following function allows :ref:`transfer transactions <02_decentralchain/03_transaction:Transfer Transaction>` and denies orders and other types of transactions."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:120
msgid "dApp script that has no verifier function performs default verification, that is, checking that the transaction or the order is indeed signed by this account."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:123
#: ../../03_ride-language/04_script-types.rst:494
msgid "Failed Transactions"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:125
msgid "If the callable function failed or threw an :ref:`exception <03_ride-language/01_syntax-basics:Exceptions>` when a block generator adds the transaction to a block, such a transaction is saved on the blockchain and marked with the attribute \"applicationStatus\": \"script_execution_failed\", provided that: There are two annotations: @Callable(i) and @Verifier(tx). The variable name in the annotation is required even if the function does not use it. An annotated function cannot be called inside a dApp script."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:128
msgid "The :ref:`invoke script transaction <02_decentralchain/03_transaction:Invoke Script Transaction>` passed the sender signature verification or the account script verification."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:129
msgid "The complexity of performed computations exceeded the :ref:`threshold for saving failed transactions <03_ride-language/07_dapp-to-app-invocation:Limitations>`."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:131
msgid "The transaction sender is charged a fee. The transaction doesn't entail any other changes on the blockchain."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:134
msgid "Data Accessible to dApp Script"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:136
msgid "Data accessible to the callable function:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:138
msgid "Particular fields of the invocation, including payments, fee, sender address and public key. See the :ref:`Invocation <03_ride-language/05_structures:Invocation>` structure article for the fields description. Proofs are inaccessible."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:139
#: ../../03_ride-language/04_script-types.rst:144
#: ../../03_ride-language/04_script-types.rst:422
#: ../../03_ride-language/04_script-types.rst:506
msgid "Blockchain data: current height, account balances, entries in account data storages, parameters of tokens, etc."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:141
msgid "Data accessible to the verifier function:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:143
#: ../../03_ride-language/04_script-types.rst:421
msgid "Fields of the current verified transaction/order, including proofs. The built-in variable tx contains this transaction or order. The set of fields depends on the type of transaction/order, see the :ref:`transaction structures <03_ride-language/05_structures:Transaction Structures>` chapter and :ref:`Order <03_ride-language/05_structures:Order>` structure article."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:149
msgid "Annotation is a form of metadata that is added to a :ref:`function <03_ride-language/03_functions:Functions>` of a :ref:`dApp script <03_ride-language/04_script-types:dApp Script>`. At the present moment, there are two annotations: @Callable(i) and @Verifier(tx). The variable name in the annotation is required even if the function does not use it. An annotated function cannot be called inside a dApp script."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:153
msgid "@Callable(i)"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:155
msgid "Annotation of a :ref:`callable function <03_ride-language/03_functions:Callable Functions>`. Variable i contains an :ref:`Invocation <03_ride-language/05_structures:Invocation>` structure representing certain fields of the invocation."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:159
msgid "@Verifier(tx)"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:161
msgid "Annotation of a verifier function. Variable tx contains a structure of transaction or order sent from a dApp's account."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:165
msgid "Callable Function"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:167
msgid "Callable function is a :ref:`dApp script <03_ride-language/04_script-types:dApp Script>` function which can be invoked by a :ref:`invoke script transaction <02_decentralchain/03_transaction:Invoke Script Transaction>` or an invoke or reentrantInvoke functions (see details in the :ref:`dApp-to-dApp invocation functions <03_ride-language/03_functions:dApp-to-dApp Invocation Functions>` article)."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:169
msgid "Add, modify, delete dApp :ref:`account data storage <02_decentralchain/01_account:Account Data Storage>` entries."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:170
msgid "Transfer tokens."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:171
msgid "Add, modify, delete dApp."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:172
msgid "Issue tokens on behalf of the dApp, reissue and burn tokens."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:173
msgid "Setup :ref:`sponsorship <02_decentralchain/03_transaction:How to Enable Sponsorship>`."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:174
msgid "Lease, cancel lease."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:176
msgid "The callable function can return a value that is passed to the invoking function in case of the :ref:`dApp-to-dApp invocation <03_ride-language/07_dapp-to-app-invocation:dApp-to-App Invocation>`. The invocation can contain payments to dApp. Tokens obtained in these payments can be used in script actions performed by the callable function and in payments attached to nested invocations."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:180
msgid "Annotation"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:182
msgid "The callable function should be marked with the @Callable(i) annotation, where i is an :ref:`Invocation <03_ride-language/05_structures:Invocation>` structure that contains invocation fields that are available to the callable function. The variable name in the annotation is required even if the callable function does not use it."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:185
msgid "Arguments"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:187
msgid "The callable function can have arguments of the following types:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:191
#: ../../_static/03_ride-language/tables/164_BinaryEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/166_Burn-Fields.csv:1
#: ../../_static/03_ride-language/tables/171_LeaseCancel-Fields.csv:1
#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
#: ../../_static/03_ride-language/tables/174_SponsorFee-Fields.csv:1
#: ../../_static/03_ride-language/tables/177_Address-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid ":ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:192
#: ../../_static/03_ride-language/tables/166_Burn-Fields.csv:1
#: ../../_static/03_ride-language/tables/168_IntegerEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/181_AttachedPayment-Fields.csv:1
#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/187_Transfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid ":ref:`Int <03_ride-language/02_data-types:Int>`"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:194
msgid ":ref:`Union <03_ride-language/02_data-types:Union>` with elements having types listed above."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:195
msgid ":ref:`List <03_ride-language/02_data-types:List>` with elements having types listed above."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:198
msgid "Invocation Result"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:200
msgid "The callable function invocation result is a :ref:`tuple <03_ride-language/02_data-types:Tuple>` of two elements: List of script actions. Actions are executed in the same order as the elements in the list. Return value that is passed to the invoking function in case of the :ref:`dApp-to-dApp invocation <03_ride-language/07_dapp-to-app-invocation:dApp-to-App Invocation>`."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:204
msgid "Let's see an example of invocation of an invocation result:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:227
#: ../../03_ride-language/04_script-types.rst:231
msgid "Script Actions (Callable Function)"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:229
msgid "Script actions performed by the callable function are set by Ride structures."
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
msgid "Ride structure that sets action"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
msgid ":ref:`BinaryEntry <03_ride-language/05_structures:BinaryEntry>`, :ref:`BooleanEntry <03_ride-language/05_structures:BooleanEntry>`, :ref:`IntegerEntry <03_ride-language/05_structures:IntegerEntry>`, :ref:`StringEntry <03_ride-language/05_structures:StringEntry>`"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
msgid "Adding/modifying the entry. The type of structure must match the type of entry to be added/changed. 1) If there is no entry in the account data storage with the key specified in the structure, the entry will be added. 2) If the entry is present in the :ref:`account data storage <02_decentralchain/01_account:Account Data Storage>`, it will be modified."
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid ":ref:`DeleteEntry <03_ride-language/05_structures:DeleteEntry>`"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
msgid "Entry deletion"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid ":ref:`Issue <03_ride-language/05_structures:Issue>`"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
msgid "Token issue"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid ":ref:`Reissue <03_ride-language/05_structures:Reissue>`"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
msgid "Token reissue"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid ":ref:`Burn <03_ride-language/05_structures:Burn>`"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
msgid "Token burn"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid ":ref:`SponsorFee <03_ride-language/05_structures:SponsorFee>`"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
msgid "Sponsorship setup"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid ":ref:`ScriptTransfer <03_ride-language/05_structures:ScriptTransfer>`"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
msgid "Token transfer"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid ":ref:`Lease <03_ride-language/05_structures:Lease>`"
msgstr ""

#: ../../03_ride-language/05_structures.rst:213
#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
msgid "Lease"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid ":ref:`LeaseCancel <03_ride-language/05_structures:LeaseCancel>`"
msgstr ""

#: ../../_static/03_ride-language/tables/162_Script-Actions-(Callable-Function).csv:1
msgid "Lease cancellation"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:238
msgid "Limitations  (Callable Function)"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:240
msgid "The maximum total number of Issue, Reissue, Burn, SponsorFee, ScriptTransfer, Lease, LeaseCancelscript actions executed by all callable functions in a single transaction is :math:`30`."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:241
msgid "The maximum total number of BinaryEntry, BooleanEntry, IntegerEntry, StringEntry, DeleteEntryscript actions executed by all callable functions in a single transaction is :math:`100`."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:242
msgid "The maximum number of the payments to dApp in invocation is :math:`10`."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:244
msgid "See also the :ref:`limitations <03_ride-language/07_dapp-to-app-invocation:Limitations>` article."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:247
msgid "Threshold for Saving Failed Transactions"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:249
msgid "The Invoke Script transaction is saved on the blockchain and a fee is charged for it even if the dApp script or the asset script fails when a block generator adds the transaction to a block, provided that the sender's signature or account script verification passed."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:251
msgid "However, if the callable function failed or :ref:`threw an exception <03_ride-language/01_syntax-basics:Exceptions>` before the :ref:`complexity <03_ride-language/07_dapp-to-app-invocation:Script Complexity>` of performed calculations exceeded the :ref:`threshold for saving failed transactions <03_ride-language/07_dapp-to-app-invocation:Limitations>`, the transaction is discarded and the fee is not charged."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:254
#: ../../03_ride-language/04_script-types.rst:336
msgid "Example"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:256
msgid "The example listed below is a wallet application which allows sending DecentralCoins to a certain address and withdrawing them (withdrawing others' DecentralCoins is prevented). There are two callable functions in the example(deposit and withdraw):"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:315
msgid "Verifier function is a function of :ref:`dApp script <03_ride-language/04_script-types:dApp Script>` that is responsible for :ref:`verification of transactions <02_decentralchain/03_transaction:Transaction Validation>` and orders sent from a :ref:`dApp <02_decentralchain/01_account:dApp and Smart Account>` account. The verifier function does the same as an :ref:`account script <03_ride-language/04_script-types:Account Script>`. dApp script can have only one verifier function. The verifier function should be adorned with the @Verifier(tx) annotation, where tx: Transaction|Order is the transaction or the order that the function is currently checking. Verifier function has no arguments. Verifier function can have one of the following execution results:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:320
msgid "True (the transaction or the order is allowed)."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:321
msgid "False (the transaction or the order is denied)."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:322
msgid "an error (the transaction or the order is denied)."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:324
msgid "dApp that has no verifier function performs default verification, that is, checking that the first proof of the transaction/order has the correct sender's signature. The following function does the same as the default implementation:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:333
msgid "If the verifier function is defined, only verification by this function is performed, proofs are not checked additionally."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:338
msgid "dApp with the verifier function listed below only allows :ref:`transfer transaction <02_decentralchain/03_transaction:Transfer Transaction>` with an amount of token lower than 100. Orders and other transactions are denied. The match operator is used to specify verification rules depending on the type of the transaction/order."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:350
msgid "See available fields for each transaction type in the :ref:`transaction structures <03_ride-language/05_structures:Transaction Structures>` article."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:353
msgid "Account Script"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:355
msgid "Account script verifies transactions and orders that are sent on behalf of the account. That is, the account script allows or denies the transaction or the order depending on whether it meets the specified conditions."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:358
msgid "Account Script Format"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:371
msgid "The account script should start with directives:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:382
#: ../../03_ride-language/04_script-types.rst:460
msgid "The script contains a boolean expression."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:387
#: ../../03_ride-language/04_script-types.rst:464
msgid "Auxiliary Definitions"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:389
#: ../../03_ride-language/04_script-types.rst:466
msgid "After the directives, you can define auxiliary variables and functions. Let's see an example:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:399
#: ../../03_ride-language/04_script-types.rst:476
msgid "Boolean Expression"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:401
#: ../../03_ride-language/04_script-types.rst:478
msgid "The expression checks transactions and orders that are sent on behalf of the account for compliance with the specified conditions. If the conditions are not met, the transaction/order is denied. Possible results of evaluating the expression are:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:407
#: ../../03_ride-language/04_script-types.rst:484
msgid "Using the :ref:`match ... case <03_ride-language/01_syntax-basics:Match-Case>`, you can set up different conditions depending on the type of the transaction/order. For example, the following expression prohibits sending orders and changing the account script, and allows other transactions, provided that the array of confirmations (proofs) contains the correct signature of the account at position :math:`0`:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:417
msgid "Data Accessible to Account Script"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:419
#: ../../03_ride-language/04_script-types.rst:503
msgid "The following data can be used for checks:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:425
msgid "Asset Script"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:427
msgid "Asset script verifies transactions within the :ref:`asset (token) <02_decentralchain/02_token(asset):Token (Asset)>`, that is, allows or denies the transaction depending on the specified conditions. Asset with a script assigned to it is called a :ref:`smart asset <02_decentralchain/02_token(asset):Smart Asset>`. Keep the following in mind:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:430
msgid "The asset script can only verify transactions, but not orders."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:431
msgid "If a token is issued without a script, then the script cannot be added later."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:432
msgid "The script cannot be removed, so it is impossible to turn a smart asset into a regular one."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:433
msgid "Smart asset cannot be a sponsored asset."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:436
msgid "Asset Script Format"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:449
msgid "The asset script should start with directives:"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:461
msgid "The script will be assigned to an asset."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:496
msgid "If the asset script denies the Exchange transaction when a block generator adds the transaction to a block (provided that the sender signature verification or the account script verification passed), the transaction is saved on the blockchain but marked as failed (\"applicationStatus\": \"script_execution_failed\"). The sender of the transaction (matcher) is charged a fee. The transaction doesn't entail any other changes in balances, in particular, the order senders don't pay the matcher fee."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:498
msgid "If the asset script denies the Invoke Script transaction when a block generator adds the transaction to a block (provided that the sender signature verification or the account script verification passed and the complexity of calculations performed by dApp script exceeded the :ref:`threshold for saving failed transactions <03_ride-language/07_dapp-to-app-invocation:Limitations>`), the transaction is saved on the blockchain but marked as failed (\"applicationStatus\": script_execution_failed\"). The transaction sender is charged a fee. The transaction doesn't entail any other changes on the blockchain."
msgstr ""

#: ../../03_ride-language/04_script-types.rst:501
msgid "Data Accessible to Asset Script"
msgstr ""

#: ../../03_ride-language/04_script-types.rst:505
msgid "Fields of the current verified transaction, excluding proofs. The built-in variable tx contains this transaction. The set of fields depends on the type of transaction, see the :ref:`transaction structures <03_ride-language/05_structures:Transaction Structures>` chapter."
msgstr ""

#: ../../03_ride-language/05_structures.rst:3
msgid "Structures"
msgstr ""

#: ../../03_ride-language/05_structures.rst:5
msgid "All structures in Ride are built-in — you cannot create your own structures. All structures have constructors."
msgstr ""

#: ../../03_ride-language/05_structures.rst:7
msgid "Let's see an example of a code that creates an instance of the IntegerEntry structure and reads its key and value:"
msgstr ""

#: ../../03_ride-language/05_structures.rst:16
#: ../../03_ride-language/05_structures.rst:20
msgid "Script Actions"
msgstr ""

#: ../../03_ride-language/05_structures.rst:18
msgid "Script actions are executed, that is, they make changes on the blockchain only if they are included in the resulting expression of the callable function. See more details in the :ref:`callable function <03_ride-language/03_functions:Callable Functions>` article."
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid "Action"
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid ":ref:`BinaryEntry <03_ride-language/05_structures:BinaryEntry>`"
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid "Add or modify a binary entry of the :ref:`account data storage <02_decentralchain/01_account:Account Data Storage>`."
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid ":ref:`BooleanEntry <03_ride-language/05_structures:BooleanEntry>`"
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid "Add or modify a boolean entry."
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid "Burn a token."
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid "Delete an entry."
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid ":ref:`IntegerEntry <03_ride-language/05_structures:IntegerEntry>`"
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid "Add or modify an integer entry."
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid "Issue a token."
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid "Lease."
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid "Cancel lease."
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid "Reissue a token."
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid "Transfer a token."
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid "Set up a sponsorship."
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid ":ref:`StringEntry <03_ride-language/05_structures:StringEntry>`"
msgstr ""

#: ../../_static/03_ride-language/tables/163_Script-Actions.csv:1
msgid "Add or modify a string entry."
msgstr ""

#: ../../03_ride-language/05_structures.rst:26
msgid "Available script actions depend on the standard library version used."
msgstr ""

#: ../../03_ride-language/05_structures.rst:29
msgid "BinaryEntry"
msgstr ""

#: ../../03_ride-language/05_structures.rst:31
msgid "BinaryEntry is a structure that sets key and value of binary entry :ref:`account data storage <02_decentralchain/01_account:Account Data Storage>`. Adding or changing an entry is performed only if the structure is included in the :ref:`callable function result <03_ride-language/03_functions:Callable Functions>`>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:33
#: ../../03_ride-language/05_structures.rst:52
#: ../../03_ride-language/05_structures.rst:72
#: ../../03_ride-language/05_structures.rst:91
#: ../../03_ride-language/05_structures.rst:127
#: ../../03_ride-language/05_structures.rst:148
#: ../../03_ride-language/05_structures.rst:218
#: ../../03_ride-language/05_structures.rst:267
#: ../../03_ride-language/05_structures.rst:288
#: ../../03_ride-language/05_structures.rst:308
#: ../../03_ride-language/05_structures.rst:328
#: ../../03_ride-language/05_structures.rst:370
#: ../../03_ride-language/05_structures.rst:398
#: ../../03_ride-language/05_structures.rst:469
#: ../../03_ride-language/05_structures.rst:495
#: ../../03_ride-language/05_structures.rst:524
#: ../../03_ride-language/05_structures.rst:557
#: ../../03_ride-language/05_structures.rst:576
#: ../../03_ride-language/05_structures.rst:597
#: ../../03_ride-language/05_structures.rst:616
#: ../../03_ride-language/05_structures.rst:678
#: ../../03_ride-language/05_structures.rst:724
#: ../../03_ride-language/05_structures.rst:755
#: ../../03_ride-language/05_structures.rst:774
#: ../../03_ride-language/05_structures.rst:793
#: ../../03_ride-language/05_structures.rst:812
#: ../../03_ride-language/05_structures.rst:831
#: ../../03_ride-language/05_structures.rst:859
#: ../../03_ride-language/05_structures.rst:878
#: ../../03_ride-language/05_structures.rst:897
#: ../../03_ride-language/05_structures.rst:916
#: ../../03_ride-language/05_structures.rst:935
#: ../../03_ride-language/05_structures.rst:954
#: ../../03_ride-language/05_structures.rst:973
#: ../../03_ride-language/05_structures.rst:1001
#: ../../03_ride-language/05_structures.rst:1020
#: ../../03_ride-language/05_structures.rst:1039
#: ../../03_ride-language/05_structures.rst:1067
msgid ":strong:`Constructor`"
msgstr ""

#: ../../03_ride-language/05_structures.rst:39
#: ../../03_ride-language/05_structures.rst:58
#: ../../03_ride-language/05_structures.rst:78
#: ../../03_ride-language/05_structures.rst:97
#: ../../03_ride-language/05_structures.rst:133
#: ../../03_ride-language/05_structures.rst:162
#: ../../03_ride-language/05_structures.rst:232
#: ../../03_ride-language/05_structures.rst:273
#: ../../03_ride-language/05_structures.rst:294
#: ../../03_ride-language/05_structures.rst:314
#: ../../03_ride-language/05_structures.rst:334
#: ../../03_ride-language/05_structures.rst:376
#: ../../03_ride-language/05_structures.rst:404
#: ../../03_ride-language/05_structures.rst:475
#: ../../03_ride-language/05_structures.rst:501
#: ../../03_ride-language/05_structures.rst:530
#: ../../03_ride-language/05_structures.rst:563
#: ../../03_ride-language/05_structures.rst:582
#: ../../03_ride-language/05_structures.rst:603
#: ../../03_ride-language/05_structures.rst:622
#: ../../03_ride-language/05_structures.rst:684
#: ../../03_ride-language/05_structures.rst:730
#: ../../03_ride-language/05_structures.rst:761
#: ../../03_ride-language/05_structures.rst:780
#: ../../03_ride-language/05_structures.rst:799
#: ../../03_ride-language/05_structures.rst:818
#: ../../03_ride-language/05_structures.rst:837
#: ../../03_ride-language/05_structures.rst:865
#: ../../03_ride-language/05_structures.rst:884
#: ../../03_ride-language/05_structures.rst:903
#: ../../03_ride-language/05_structures.rst:922
#: ../../03_ride-language/05_structures.rst:941
#: ../../03_ride-language/05_structures.rst:960
#: ../../03_ride-language/05_structures.rst:979
#: ../../03_ride-language/05_structures.rst:1007
#: ../../03_ride-language/05_structures.rst:1026
#: ../../03_ride-language/05_structures.rst:1045
#: ../../03_ride-language/05_structures.rst:1073
msgid ":strong:`Fields`"
msgstr ""

#: ../../03_ride-language/05_structures.rst:41
msgid "BinaryEntry Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/164_BinaryEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/165_BooleanEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/166_Burn-Fields.csv:1
#: ../../_static/03_ride-language/tables/167_DeleteEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/168_IntegerEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
#: ../../_static/03_ride-language/tables/171_LeaseCancel-Fields.csv:1
#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/174_SponsorFee-Fields.csv:1
#: ../../_static/03_ride-language/tables/175_StringEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/177_Address-Fields.csv:1
#: ../../_static/03_ride-language/tables/178_Alias-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/180_AssetPair-Fields.csv:1
#: ../../_static/03_ride-language/tables/181_AttachedPayment-Fields.csv:1
#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/187_Transfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid "Data type"
msgstr ""

#: ../../_static/03_ride-language/tables/164_BinaryEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/165_BooleanEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/167_DeleteEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/168_IntegerEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/175_StringEntry-Fields.csv:1
msgid "key"
msgstr ""

#: ../../_static/03_ride-language/tables/164_BinaryEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/165_BooleanEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/167_DeleteEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/168_IntegerEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/175_StringEntry-Fields.csv:1
msgid "Entry key. The maximum size is :math:`400` bytes."
msgstr ""

#: ../../_static/03_ride-language/tables/164_BinaryEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/165_BooleanEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/168_IntegerEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/175_StringEntry-Fields.csv:1
msgid "value"
msgstr ""

#: ../../_static/03_ride-language/tables/164_BinaryEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/175_StringEntry-Fields.csv:1
msgid "Entry value. The maximum size is :math:`5` Kbytes."
msgstr ""

#: ../../03_ride-language/05_structures.rst:48
msgid "BooleanEntry"
msgstr ""

#: ../../03_ride-language/05_structures.rst:50
msgid "BooleanEntry is a structure that sets the key and value of the :ref:`account data storage <02_decentralchain/01_account:Account Data Storage>` boolean entry. Adding or changing an entry is performed only if the structure is included in the :ref:`callable function result <03_ride-language/03_functions:Callable Functions>`>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:60
msgid "BooleanEntry Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/165_BooleanEntry-Fields.csv:1
#: ../../_static/03_ride-language/tables/168_IntegerEntry-Fields.csv:1
msgid "Entry value."
msgstr ""

#: ../../03_ride-language/05_structures.rst:67
msgid "Burn"
msgstr ""

#: ../../03_ride-language/05_structures.rst:69
msgid "Burn is a structure that sets the parameters of the token burning. The token burning is performed only if the structure is included in the :ref:`callable function result <03_ride-language/03_functions:Callable Functions>`>`. If the token is a smart asset, the asset script verifies the Burn action as if it were :ref:`BurnTransaction <03_ride-language/05_structures:BurnTransaction>` with the fee of :math:`0` and the version of :math:`0`. If the asset script denies the action, then the transaction that invoked the dApp script is either denied or saved on the blockchain as failed, see the :ref:`transaction validation <02_decentralchain/03_transaction:Transaction Validation>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:80
msgid "Burn Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/166_Burn-Fields.csv:1
#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
#: ../../_static/03_ride-language/tables/174_SponsorFee-Fields.csv:1
#: ../../_static/03_ride-language/tables/181_AttachedPayment-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid "assetId"
msgstr ""

#: ../../_static/03_ride-language/tables/166_Burn-Fields.csv:1
msgid ":ref:`ID of the token <02_decentralchain/02_token(asset):Token ID>` to burn."
msgstr ""

#: ../../_static/03_ride-language/tables/166_Burn-Fields.csv:1
#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
msgid "quantity"
msgstr ""

#: ../../_static/03_ride-language/tables/166_Burn-Fields.csv:1
#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
msgid "Amount of the token."
msgstr ""

#: ../../03_ride-language/05_structures.rst:87
msgid "DeleteEntry"
msgstr ""

#: ../../03_ride-language/05_structures.rst:89
msgid "DeleteEntry is a structure that sets the parameters of deletion of entry from the :ref:`account data storage <02_decentralchain/01_account:Account Data Storage>`. Deleting an entry is performed only if the structure is included in the :ref:`callable function result <03_ride-language/03_functions:Callable Functions>`>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:99
msgid "DeleteEntry Fields"
msgstr ""

#: ../../03_ride-language/05_structures.rst:123
msgid "IntegerEntry"
msgstr ""

#: ../../03_ride-language/05_structures.rst:125
msgid "IntegerEntry is a structure that sets the key and value of :ref:`account data storage <02_decentralchain/01_account:Account Data Storage>` integer entry. Adding or changing an entry is performed only if the structure is included in the :ref:`callable function result <03_ride-language/03_functions:Callable Functions>`>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:135
msgid "IntegerEntry Fields"
msgstr ""

#: ../../03_ride-language/05_structures.rst:142
msgid "Issue"
msgstr ""

#: ../../03_ride-language/05_structures.rst:144
msgid "Issue is a structure that sets the parameters of the token issue. The token issue is performed only if the structure is included in the :ref:`callable function result <03_ride-language/03_functions:Callable Functions>`>`. The minimum fee for an invoke script transaction is increased by :math:`1` DecentralCoin for each issued asset that is not :ref:`NFT <02_decentralchain/02_token(asset):Non-Fungible Token>`. You can get the ID of the issued token using the :ref:`calculateAssetId <03_ride-language/03_functions:Blockchain Functions>` function."
msgstr ""

#: ../../03_ride-language/05_structures.rst:154
#: ../../03_ride-language/05_structures.rst:224
msgid "or"
msgstr ""

#: ../../03_ride-language/05_structures.rst:160
msgid "In the second case, compiledScript = unit and nonce = 0 values are inserted automatically."
msgstr ""

#: ../../03_ride-language/05_structures.rst:164
msgid "Issue Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
msgid "name"
msgstr ""

#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
msgid ":ref:`Token <02_decentralchain/02_token(asset):Token (Asset)>` name."
msgstr ""

#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
msgid "description"
msgstr ""

#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
msgid "Token description."
msgstr ""

#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
msgid "Amount of the token. Set to :math:`1` for :ref:`NFT <02_decentralchain/02_token(asset):Non-Fungible Token>`."
msgstr ""

#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
msgid "decimals"
msgstr ""

#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
msgid "Number of digits in decimal part. Set to :math:`0` for NFT."
msgstr ""

#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
msgid "isReissuable"
msgstr ""

#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
msgid "Reissue ability flag. Set to :math:`0` for NFT."
msgstr ""

#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
msgid "compiledScript"
msgstr ""

#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
msgid ":ref:`Script <03_ride-language/04_script-types:Script Types>` | :ref:`Unit <03_ride-language/02_data-types:Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
msgid "Set it to unit. Smart asset issue is currently unavailable."
msgstr ""

#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
msgid "nonce"
msgstr ""

#: ../../_static/03_ride-language/tables/169_Issue-Fields.csv:1
msgid "Nonce that is used for token ID generation. If the callable function issues several tokens with the same parameters, you should use different nonce."
msgstr ""

#: ../../03_ride-language/05_structures.rst:172
msgid ":strong:`Regular Token Issue`"
msgstr ""

#: ../../03_ride-language/05_structures.rst:178
#: ../../03_ride-language/05_structures.rst:204
msgid "The structure sets the following parameters of token:"
msgstr ""

#: ../../03_ride-language/05_structures.rst:180
msgid "Name: RegularToken"
msgstr ""

#: ../../03_ride-language/05_structures.rst:181
msgid "Description: This is an ordinary token"
msgstr ""

#: ../../03_ride-language/05_structures.rst:182
msgid "Amount of tokens to issue: :math:`100` (value of :math:`10 000` is specified in the minimum fraction — “cents”)"
msgstr ""

#: ../../03_ride-language/05_structures.rst:183
msgid "Amount of decimals: :math:`2`"
msgstr ""

#: ../../03_ride-language/05_structures.rst:184
msgid "Reissue ability: yes"
msgstr ""

#: ../../03_ride-language/05_structures.rst:186
msgid ":strong:`Multiple Token Issue`"
msgstr ""

#: ../../03_ride-language/05_structures.rst:198
msgid ":strong:`NFT Issue`"
msgstr ""

#: ../../03_ride-language/05_structures.rst:206
msgid "Name: UberToken"
msgstr ""

#: ../../03_ride-language/05_structures.rst:207
msgid "Description: The ultimate token."
msgstr ""

#: ../../03_ride-language/05_structures.rst:208
msgid "Amount of tokens to issue: :math:`1`"
msgstr ""

#: ../../03_ride-language/05_structures.rst:209
msgid "Amount of decimals: :math:`0`"
msgstr ""

#: ../../03_ride-language/05_structures.rst:210
msgid "Reissue ability: no"
msgstr ""

#: ../../03_ride-language/05_structures.rst:215
msgid "Lease is a structure that sets the lease parameters. The lease is performed only if the structure is included in the :ref:`callable function result <03_ride-language/03_functions:Callable Functions>`>`. More about :ref:`lease <02_decentralchain/05_node:Leased Proof of Stake>`. You can get the lease ID using the :ref:`calculateLeaseId <03_ride-language/03_functions:Blockchain Functions>` function."
msgstr ""

#: ../../03_ride-language/05_structures.rst:230
msgid "In the second case, nonce = :math:`0` is inserted automatically."
msgstr ""

#: ../../03_ride-language/05_structures.rst:234
msgid "Lease Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/187_Transfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
msgid "recipient"
msgstr ""

#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/187_Transfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
msgid ":ref:`Address <03_ride-language/05_structures:Address>` | :ref:`Alias <03_ride-language/05_structures:Alias>`"
msgstr ""

#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
msgid "Lessee :ref:`address <02_decentralchain/01_account:Address>` or :ref:`alias <02_decentralchain/01_account:Alias>`."
msgstr ""

#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/181_AttachedPayment-Fields.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/187_Transfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
msgid "amount"
msgstr ""

#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
msgid "Amount of :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` to lease (that is, amount of Decentralites multiplied by :math:`10^{8}`)."
msgstr ""

#: ../../_static/03_ride-language/tables/170_Lease-Fields.csv:1
msgid "Nonce that is used for lease ID generation. If the callable function creates several leases with the same parameters, you should use different nonces."
msgstr ""

#: ../../03_ride-language/05_structures.rst:262
msgid "LeaseCancel"
msgstr ""

#: ../../03_ride-language/05_structures.rst:264
msgid "LeaseCancel is a structure that sets the lease cancellation parameters. The lease cancellation is performed only if the structure is included in the :ref:`callable function result <03_ride-language/03_functions:Callable Functions>`>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:275
msgid "LeaseCancel Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/171_LeaseCancel-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
msgid "leaseId"
msgstr ""

#: ../../_static/03_ride-language/tables/171_LeaseCancel-Fields.csv:1
msgid "Lease ID"
msgstr ""

#: ../../03_ride-language/05_structures.rst:282
msgid "Reissue"
msgstr ""

#: ../../03_ride-language/05_structures.rst:284
msgid "Reissue is a structure that sets the parameters of the token reissue. The token reissue is performed only if the structure is included in the :ref:`callable function result <03_ride-language/03_functions:Callable Functions>`>`. The token reissue is only available for an asset that is issued by a dApp account. If the token is a smart asset, the asset script verifies the Reissue action as if it were :ref:`ReissueTransaction <03_ride-language/05_structures:ReissueTransaction>` with the fee of 0 and the version of 0. If the asset script denies the action, then the transaction that invoked the dApp script is either denied or saved on the blockchain as failed, see the :ref:`transaction validation <02_decentralchain/03_transaction:Transaction Validation>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:296
msgid "Reissue Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
msgid ":ref:`ID of the token <02_decentralchain/02_token(asset):Token ID>` to reissue."
msgstr ""

#: ../../_static/03_ride-language/tables/172_Reissue-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
msgid "Reissue ability flag."
msgstr ""

#: ../../03_ride-language/05_structures.rst:303
msgid "ScriptTransfer"
msgstr ""

#: ../../03_ride-language/05_structures.rst:305
msgid "ScriptTransfer is a structure that sets the parameters of the token transfer. The token transfer is performed only if the structure is included in the :ref:`callable function result <03_ride-language/03_functions:Callable Functions>`>`. If the token is a smart asset, the asset script verifies the ScriptTransfer action as if it were :ref:`TransferTransaction <03_ride-language/05_structures:TransferTransaction>` with the fee of :math:`0` and the version of :math:`0`. If the asset script denies the action, then the transaction that invoked the dApp script is either denied or saved on the blockchain as failed, see the :ref:`transaction validation <02_decentralchain/03_transaction:Transaction Validation>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:316
msgid "ScriptTransfer Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` or the :ref:`alias <02_decentralchain/01_account:Alias>` of a recipient of tokens."
msgstr ""

#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/187_Transfer-Fields.csv:1
msgid "Number of tokens."
msgstr ""

#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
msgid "asset"
msgstr ""

#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
#: ../../_static/03_ride-language/tables/174_SponsorFee-Fields.csv:1
#: ../../_static/03_ride-language/tables/180_AssetPair-Fields.csv:1
#: ../../_static/03_ride-language/tables/181_AttachedPayment-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid ":ref:`ByteVector <03_ride-language/02_data-types:ByteVector>` | :ref:`Unit <03_ride-language/02_data-types:Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/173_ScriptTransfer-Fields.csv:1
msgid ":ref:`ID of the token <02_decentralchain/02_token(asset):Token ID>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:323
msgid "SponsorFee"
msgstr ""

#: ../../03_ride-language/05_structures.rst:325
msgid "SponsorFee is a structure that sets up sponsorship. For information about sponsorship, see the :ref:`sponsored fee <02_decentralchain/03_transaction:Sponsored Fees>` article. The sponsorship setup is performed only if the structure is included in the resulting expression of the callable function. See details in the :ref:`callable function <03_ride-language/03_functions:Callable Functions>` article. The sponsorship setup is only available if the asset is issued by a dApp account (by the same script invocation as well) and is not a smart asset."
msgstr ""

#: ../../03_ride-language/05_structures.rst:336
msgid "SponsorFee Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/174_SponsorFee-Fields.csv:1
msgid "Asset ID"
msgstr ""

#: ../../_static/03_ride-language/tables/174_SponsorFee-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid "minSponsoredAssetFee"
msgstr ""

#: ../../_static/03_ride-language/tables/174_SponsorFee-Fields.csv:1
msgid "Amount of sponsored asset that is equivalent to 0.001 :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`, specified in the minimum fraction (“cent”) of the sponsored asset. unit — disable the sponsorship."
msgstr ""

#: ../../03_ride-language/05_structures.rst:363
msgid "The issueAndSponsor callable function issues an asset and enables sponsorship. The minimum fee in sponsored assets is :math:`3` Spring."
msgstr ""

#: ../../03_ride-language/05_structures.rst:366
msgid "StringEntry"
msgstr ""

#: ../../03_ride-language/05_structures.rst:368
msgid "StringEntry is a structure that sets key and value of :ref:`account data storage <02_decentralchain/01_account:Account Data Storage>` string entry. Adding or changing an entry is performed only if the structure is included in the :ref:`callable function result <03_ride-language/03_functions:Callable Functions>`>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:378
msgid "StringEntry Fields"
msgstr ""

#: ../../03_ride-language/05_structures.rst:385
#: ../../03_ride-language/05_structures.rst:387
msgid "Common Structures"
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid ":ref:`Address <03_ride-language/05_structures:Address>`"
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid ":ref:`Account address <02_decentralchain/01_account:Address>`."
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid ":ref:`Alias <03_ride-language/05_structures:Alias>`"
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
msgid ":ref:`Alias <02_decentralchain/01_account:Alias>`."
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid ":ref:`Asset <03_ride-language/03_functions:Math Functions>`"
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid ":ref:`Token <02_decentralchain/02_token(asset):Token (Asset)>` info."
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid ":ref:`AssetPair <03_ride-language/05_structures:AssetPair>`"
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid "Pair of tokens of an order within the order structure."
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid ":ref:`AttachedPayment <03_ride-language/05_structures:AttachedPayment>`"
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid "Payment attached to the script invocation and available to the :ref:`callable function <03_ride-language/03_functions:Callable Functions>`."
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid ":ref:`BalanceDetails <03_ride-language/05_structures:BalanceDetails>`"
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid "Account balance in :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid ":ref:`BlockInfo <03_ride-language/05_structures:BlockInfo>`"
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid ":ref:`Block <02_decentralchain/04_block:Block>` header."
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid ":ref:`Invocation <03_ride-language/05_structures:Invocation>`"
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid "Script invocation fields that the callable function can use."
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid ":ref:`Order <03_ride-language/05_structures:Order>`"
msgstr ""

#: ../../03_ride-language/05_structures.rst:671
#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
msgid "Order"
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid ":ref:`Transfer <03_ride-language/05_structures:Transfer>`"
msgstr ""

#: ../../_static/03_ride-language/tables/176_Common-Structures.csv:1
msgid "Transfer within the :ref:`MassTransferTransaction <03_ride-language/05_structures:MassTransferTransaction>` structure."
msgstr ""

#: ../../03_ride-language/05_structures.rst:394
#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "Address"
msgstr ""

#: ../../03_ride-language/05_structures.rst:396
msgid "Structure of an :ref:`address <02_decentralchain/01_account:Address>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:406
msgid "Address Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/177_Address-Fields.csv:1
msgid "bytes"
msgstr ""

#: ../../_static/03_ride-language/tables/177_Address-Fields.csv:1
msgid "Array of bytes of the address."
msgstr ""

#: ../../03_ride-language/05_structures.rst:414
msgid "Get all types of balance in DecentralCoins for the current account (in a dApp script or an account script):"
msgstr ""

#: ../../03_ride-language/05_structures.rst:420
msgid "For any account:"
msgstr ""

#: ../../03_ride-language/05_structures.rst:427
msgid "Get an entry value by key from the account data storage:"
msgstr ""

#: ../../03_ride-language/05_structures.rst:434
msgid "Convert the address that invoked the function to a base58 string:"
msgstr ""

#: ../../03_ride-language/05_structures.rst:448
msgid "Check the recipient's address in the transfer transaction:"
msgstr ""

#: ../../03_ride-language/05_structures.rst:465
msgid "Alias"
msgstr ""

#: ../../03_ride-language/05_structures.rst:467
msgid "Structure of an :ref:`alias <02_decentralchain/01_account:Alias>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:477
msgid "Alias Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/178_Alias-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
msgid "alias"
msgstr ""

#: ../../_static/03_ride-language/tables/178_Alias-Fields.csv:1
msgid ":ref:`Alias <02_decentralchain/01_account:Alias>`"
msgstr ""

#: ../../03_ride-language/05_structures.rst:491
msgid "Asset"
msgstr ""

#: ../../03_ride-language/05_structures.rst:493
msgid "Structure of a :ref:`token <02_decentralchain/02_token(asset):Token (Asset)>`. The structure is returned by the  :ref:`assetInfo <03_ride-language/03_functions:Blockchain Functions>` built-in function."
msgstr ""

#: ../../03_ride-language/05_structures.rst:503
msgid "Asset Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
msgid "id"
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid ":ref:`token ID <02_decentralchain/02_token(asset):Token ID>`."
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
msgid "Amount of issued token, multiplied by :math:`10^{decimals}`. Up to :math:`9 223 372 036 854 775 806`."
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
msgid "Number of decimal places, :math:`0` to :math:`8`."
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
msgid "issuer"
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` of the :ref:`account <02_decentralchain/01_account:Account>` that issued a token."
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
msgid "issuerPublicKey"
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
msgid "Public key of the account that issued a token."
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
msgid "reissuable"
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
msgid "true — token can be reissued, false — cannot be reissued."
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
msgid "scripted"
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
msgid "true — :ref:`smart asset <documentation:placeholder>`, false — regular token."
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
msgid "minSponsoredFee"
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
msgid ":ref:`Int <03_ride-language/02_data-types:Int>` | :ref:`Unit <03_ride-language/02_data-types:Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
msgid "Amount of asset that is equivalent to :math:`0.001` :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` (:math:`100,000` Decentralites), specified in the minimum fraction (“cents”) of asset. See the :ref:`Sponsored fee <02_decentralchain/03_transaction:Sponsored Fees>` article. unit: sponsorship is disabled."
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
msgid "Token name, up to :math:`16` characters."
msgstr ""

#: ../../_static/03_ride-language/tables/179_Asset-Fields.csv:1
msgid "Token description, up to :math:`1000` characters."
msgstr ""

#: ../../03_ride-language/05_structures.rst:511
#: ../../03_ride-language/05_structures.rst:540
msgid "Get the account balance in a given asset:"
msgstr ""

#: ../../03_ride-language/05_structures.rst:520
msgid "AssetPair"
msgstr ""

#: ../../03_ride-language/05_structures.rst:522
msgid "Structure of a pair of :ref:`tokens <02_decentralchain/02_token(asset):Token (Asset)>` of an order within the :ref:`Order <03_ride-language/05_structures:Order>` structure."
msgstr ""

#: ../../03_ride-language/05_structures.rst:532
msgid "AssetPair Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/180_AssetPair-Fields.csv:1
msgid "amountAsset"
msgstr ""

#: ../../_static/03_ride-language/tables/180_AssetPair-Fields.csv:1
msgid "The first token of a pair."
msgstr ""

#: ../../_static/03_ride-language/tables/180_AssetPair-Fields.csv:1
msgid "priceAsset"
msgstr ""

#: ../../_static/03_ride-language/tables/180_AssetPair-Fields.csv:1
msgid "The second token of a pair."
msgstr ""

#: ../../03_ride-language/05_structures.rst:549
msgid "AttachedPayment"
msgstr ""

#: ../../03_ride-language/05_structures.rst:551
msgid "Structure of a payment attached to the script invocation and available to the :ref:`callable function <03_ride-language/03_functions:Callable Functions>`. The structure is used in:"
msgstr ""

#: ../../03_ride-language/05_structures.rst:553
msgid ":ref:`Invocation <03_ride-language/05_structures:Invocation>` structure."
msgstr ""

#: ../../03_ride-language/05_structures.rst:554
msgid ":ref:`InvokeScriptTransaction <03_ride-language/05_structures:InvokeScriptTransaction>` structure."
msgstr ""

#: ../../03_ride-language/05_structures.rst:555
msgid ":ref:`Invoke <03_ride-language/03_functions:dApp-to-dApp Invocation Functions>` and :ref:`reentrantInvoke <03_ride-language/03_functions:dApp-to-dApp Invocation Functions>` functions."
msgstr ""

#: ../../03_ride-language/05_structures.rst:565
msgid "AttachedPayment Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/181_AttachedPayment-Fields.csv:1
msgid "ID of a :ref:`token <02_decentralchain/02_token(asset):Token (Asset)>`."
msgstr ""

#: ../../_static/03_ride-language/tables/181_AttachedPayment-Fields.csv:1
msgid "Payment amount."
msgstr ""

#: ../../03_ride-language/05_structures.rst:572
msgid "BalanceDetails"
msgstr ""

#: ../../03_ride-language/05_structures.rst:574
msgid "Structure that contains DecentralCoins balances of account. The structure is returned by the decentralchainBalance built-in function. For description of balance types, see the :ref:`account balance <02_decentralchain/01_account:Account Balance>` article."
msgstr ""

#: ../../03_ride-language/05_structures.rst:584
msgid "BalanceDetails Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
msgid "available"
msgstr ""

#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
msgid "Available balance."
msgstr ""

#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
msgid "regular"
msgstr ""

#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
msgid "Regular balance."
msgstr ""

#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
msgid "generating"
msgstr ""

#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
msgid "Generating balance."
msgstr ""

#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
msgid "effective"
msgstr ""

#: ../../_static/03_ride-language/tables/182_BalanceDetails-Fields.csv:1
msgid "Effective balance."
msgstr ""

#: ../../03_ride-language/05_structures.rst:590
msgid "All balances are given in Decentralites."
msgstr ""

#: ../../03_ride-language/05_structures.rst:593
msgid "BlockInfo"
msgstr ""

#: ../../03_ride-language/05_structures.rst:595
msgid "Structure containing block headers. The structure is returned by the blockInfoByHeight built-in function."
msgstr ""

#: ../../03_ride-language/05_structures.rst:605
msgid "BlockInfo Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
msgid "timestamp"
msgstr ""

#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
msgid ":ref:`Block timestamp <02_decentralchain/04_block:Block Timestamp>`."
msgstr ""

#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
msgid ":ref:`Block height <02_decentralchain/04_block:Block Height>`."
msgstr ""

#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
msgid "baseTarget"
msgstr ""

#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
msgid ":ref:`Base target <02_decentralchain/04_block:Base Target>`."
msgstr ""

#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
msgid "generationSignature"
msgstr ""

#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
msgid ":ref:`Generation signature <02_decentralchain/04_block:Block Generation>`."
msgstr ""

#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
msgid "generator"
msgstr ""

#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` of the :ref:`account <02_decentralchain/01_account:Account>` that created a block."
msgstr ""

#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
msgid "generatorPublicKey"
msgstr ""

#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
msgid "Public key of the account that created a block."
msgstr ""

#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
msgid "vrf"
msgstr ""

#: ../../_static/03_ride-language/tables/183_BlockInfo-Fields.csv:1
msgid "VRF for block version 5, unit otherwise."
msgstr ""

#: ../../03_ride-language/05_structures.rst:612
msgid "Invocation"
msgstr ""

#: ../../03_ride-language/05_structures.rst:614
msgid "Structure that contains the fields of the script invocation that the :ref:`callable function <03_ride-language/03_functions:Callable Functions>` can use."
msgstr ""

#: ../../03_ride-language/05_structures.rst:624
msgid "The field values depend on how the callable function is invoked. If the callable function is invoked by an :ref:`invoke script transaction <02_decentralchain/03_transaction:Invoke Script Transaction>`:"
msgstr ""

#: ../../03_ride-language/05_structures.rst:626
msgid "Invocation Fields 1"
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "caller"
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` of the account that sent the invoke script transaction."
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "callerPublicKey"
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "Public key of the account that sent the invoke script transaction."
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "originCaller"
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
msgid "Duplicates the caller field."
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "originCallerPublicKey"
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
msgid "Duplicates the callerPublicKey field."
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "payments"
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid ":ref:`List <03_ride-language/02_data-types:List>` [:ref:`AttachedPayment <03_ride-language/05_structures:AttachedPayment>`]"
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
msgid "Payments indicated in the invoke script transaction."
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "transactionId"
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "ID of the invoke script transaction."
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "fee"
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid ":ref:`Transaction fee <02_decentralchain/03_transaction:Transaction Fees>`."
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "feeAssetId"
msgstr ""

#: ../../_static/03_ride-language/tables/184_Invocation-Fields-1.csv:1
#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "ID of the fee token."
msgstr ""

#: ../../03_ride-language/05_structures.rst:632
msgid "If the callable function is invoked by the invoke or reentrantInvoke function (see the :ref:`dApp-to-dApp invocation <03_ride-language/07_dapp-to-app-invocation:dApp-to-App Invocation>` article):"
msgstr ""

#: ../../03_ride-language/05_structures.rst:634
msgid "Invocation Fields 2"
msgstr ""

#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` of the dApp that invokes the callable function."
msgstr ""

#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "Public key of the dApp that invokes the callable function."
msgstr ""

#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
msgid "Address of the account that sent the Invoke Script transaction."
msgstr ""

#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
msgid "Public key of the account that sent the Invoke Script transaction."
msgstr ""

#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "Payments indicated in the invoke or reentrantInvoke function."
msgstr ""

#: ../../_static/03_ride-language/tables/185_Invocation-Fields-2.csv:1
msgid "ID of the Invoke Script transaction."
msgstr ""

#: ../../03_ride-language/05_structures.rst:640
msgid "The originCaller, originCallerPublicKey, transactionId, fee, and feeAssetId values are the same for all dApp-to-dApp invocations within a single Invoke Script transaction."
msgstr ""

#: ../../03_ride-language/05_structures.rst:644
msgid "The following function checks that the first payment in the Invoke Script transaction is at least 1 DecentralCoin or 5 in the specified asset."
msgstr ""

#: ../../03_ride-language/05_structures.rst:673
msgid "Structure of an order :ref:`dApp-to-dApp invocation <03_ride-language/07_dapp-to-app-invocation:dApp-to-App Invocation>`. The structure is used:"
msgstr ""

#: ../../03_ride-language/05_structures.rst:675
msgid "When checking an outgoing order by the :ref:`account script <03_ride-language/04_script-types:Account Script>` or the verifier function of the :ref:`dApp script <03_ride-language/04_script-types:dApp Script>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:676
msgid "In the :ref:`InvokeScriptTransaction <03_ride-language/05_structures:InvokeScriptTransaction>` structure."
msgstr ""

#: ../../03_ride-language/05_structures.rst:686
msgid "Order Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "ID of an order."
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "matcherPublicKey"
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "Public key of a matcher."
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "assetPair"
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "Pair of :ref:`tokens <02_decentralchain/02_token(asset):Token (Asset)>`."
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "orderType"
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "Buy|Sell"
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "Type of an order — selling or buying."
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
msgid "price"
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "Price of a token to exchange."
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "Number of tokens to exchange."
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "Unix time of the validation of an order by a matcher."
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "expiration"
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "Unix time when an uncompleted order will be cancelled."
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "matcherFee"
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "matcherFeeAssetId"
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "Token of a transaction fee. It can only be :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`."
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid "sender"
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` of the sender of an order."
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid "senderPublicKey"
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "Public key of the sender of an order."
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid "bodyBytes"
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
msgid "Array of bytes of an order."
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid "proofs"
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid ":ref:`List <03_ride-language/02_data-types:List>` [:ref:`ByteVector <03_ride-language/02_data-types:ByteVector>`]"
msgstr ""

#: ../../_static/03_ride-language/tables/186_Order-Fields.csv:1
#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
msgid "Array of proofs."
msgstr ""

#: ../../03_ride-language/05_structures.rst:694
msgid "The script below enables buying from a sender's account:"
msgstr ""

#: ../../03_ride-language/05_structures.rst:696
msgid "Only the specified asset."
msgstr ""

#: ../../03_ride-language/05_structures.rst:697
msgid "Only at a given price."
msgstr ""

#: ../../03_ride-language/05_structures.rst:698
msgid "Only for DecentralCoins."
msgstr ""

#: ../../03_ride-language/05_structures.rst:720
msgid "Transfer"
msgstr ""

#: ../../03_ride-language/05_structures.rst:722
msgid "Structure of a single transfer within the :ref:`MassTransferTransaction <03_ride-language/05_structures:MassTransferTransaction>` structure."
msgstr ""

#: ../../03_ride-language/05_structures.rst:732
msgid "Transfer Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/187_Transfer-Fields.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` of a recipient of tokens."
msgstr ""

#: ../../03_ride-language/05_structures.rst:739
msgid "Transaction Structures"
msgstr ""

#: ../../03_ride-language/05_structures.rst:742
#: ../../03_ride-language/05_structures.rst:744
msgid "Tokenization"
msgstr ""

#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
#: ../../_static/03_ride-language/tables/194_Usage.csv:1
#: ../../_static/03_ride-language/tables/202_Network.csv:1
#: ../../_static/03_ride-language/tables/206_Genesis.csv:1
msgid "Transaction type ID"
msgstr ""

#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
msgid ":ref:`IssueTransaction <03_ride-language/05_structures:IssueTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
msgid "Structure of :ref:`issue transaction <02_decentralchain/03_transaction:Issue Transaction>`."
msgstr ""

#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
msgid ":ref:`ReissueTransaction <03_ride-language/05_structures:ReissueTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
msgid "Structure of :ref:`reissue transaction <02_decentralchain/03_transaction:Reissue Transaction>`."
msgstr ""

#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
msgid ":ref:`BurnTransaction <03_ride-language/05_structures:BurnTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
msgid "Structure of :ref:`burn transaction <02_decentralchain/03_transaction:Burn Transaction>`."
msgstr ""

#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
msgid ":ref:`SetAssetScriptTransaction <03_ride-language/05_structures:SetAssetScriptTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
msgid "Structure of :ref:`set asset script transaction <02_decentralchain/03_transaction:Set Asset Script Transaction>`."
msgstr ""

#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
msgid ":ref:`UpdateAssetInfoTransaction <03_ride-language/05_structures:UpdateAssetInfoTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/188_Tokenization.csv:1
msgid "Structure of :ref:`update asset info transaction <02_decentralchain/03_transaction:Update Asset Info Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:751
msgid "IssueTransaction"
msgstr ""

#: ../../03_ride-language/05_structures.rst:753
msgid "Structure of an :ref:`issue transaction <02_decentralchain/03_transaction:Issue Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:763
msgid "IssueTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
msgid "Amount of the :ref:`token <02_decentralchain/02_token(asset):Token (Asset)>`."
msgstr ""

#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
msgid "Token name."
msgstr ""

#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
msgid "Number of digits in decimal part."
msgstr ""

#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
msgid "script"
msgstr ""

#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
msgid ":ref:`Script <03_ride-language/04_script-types:Script Types>` that must be set for the generated token."
msgstr ""

#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
msgid "Transaction ID."
msgstr ""

#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
msgid "Transaction timestamp."
msgstr ""

#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
msgid "version"
msgstr ""

#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
msgid "Transaction version."
msgstr ""

#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` of the transaction sender."
msgstr ""

#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
msgid "Account public key of the transaction sender."
msgstr ""

#: ../../_static/03_ride-language/tables/189_IssueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid "Transaction body bytes."
msgstr ""

#: ../../03_ride-language/05_structures.rst:770
msgid "ReissueTransaction"
msgstr ""

#: ../../03_ride-language/05_structures.rst:772
msgid "Structure of a :ref:`reissue transaction <02_decentralchain/03_transaction:Reissue Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:782
msgid "ReissueTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
msgid "Reissue flag."
msgstr ""

#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/197_CreateAliasTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid "Public key of the transaction sender."
msgstr ""

#: ../../_static/03_ride-language/tables/190_ReissueTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid "Proofs."
msgstr ""

#: ../../03_ride-language/05_structures.rst:789
msgid "BurnTransaction"
msgstr ""

#: ../../03_ride-language/05_structures.rst:791
msgid "Structure of an :ref:`burn transaction <02_decentralchain/03_transaction:Burn Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:801
msgid "BurnTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
msgid "Amount of the :ref:`token <02_decentralchain/02_token(asset):Token (Asset)>` to burn."
msgstr ""

#: ../../_static/03_ride-language/tables/191_BurnTransaction-Fields.csv:1
msgid "ID of the token to burn."
msgstr ""

#: ../../03_ride-language/05_structures.rst:808
msgid "SetAssetScriptTransaction"
msgstr ""

#: ../../03_ride-language/05_structures.rst:810
msgid "Structure of an :ref:`set asset script transaction <02_decentralchain/03_transaction:Set Asset Script Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:820
msgid "SetAssetScriptTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/192_SetAssetScriptTransaction-Fields.csv:1
msgid ":ref:`Asset script <03_ride-language/04_script-types:Asset Script>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:827
msgid "UpdateAssetInfoTransaction"
msgstr ""

#: ../../03_ride-language/05_structures.rst:829
msgid "Structure of an :ref:`update asset info transaction <02_decentralchain/03_transaction:Update Asset Info Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:839
msgid "UpdateAssetInfoTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
msgid "Name of the token."
msgstr ""

#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
msgid "Description of the token."
msgstr ""

#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
msgid "Address of a transaction sender."
msgstr ""

#: ../../_static/03_ride-language/tables/193_UpdateAssetInfoTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
msgid "Account public key of a sender."
msgstr ""

#: ../../03_ride-language/05_structures.rst:846
#: ../../03_ride-language/05_structures.rst:848
msgid "Usage"
msgstr ""

#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid ":ref:`TransferTransaction <03_ride-language/05_structures:TransferTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid "Structure of :ref:`transfer transaction <02_decentralchain/03_transaction:Transfer Transaction>`."
msgstr ""

#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid ":ref:`ExchangeTransaction <03_ride-language/05_structures:ExchangeTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid "Structure of :ref:`exchange transaction <02_decentralchain/03_transaction:Exchange Transaction>`."
msgstr ""

#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid ":ref:`CreateAliasTransaction <03_ride-language/05_structures:CreateAliasTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid "Structure of :ref:`create alias transaction <02_decentralchain/03_transaction:Create Alias Transaction>`."
msgstr ""

#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid ":ref:`MassTransferTransaction <03_ride-language/05_structures:MassTransferTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid "Structure of :ref:`mass transfer transaction <02_decentralchain/03_transaction:Mass Transfer Transaction>`."
msgstr ""

#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid ":ref:`DataTransaction <03_ride-language/05_structures:DataTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid "Structure of :ref:`data transaction <02_decentralchain/03_transaction:Data Transaction>`."
msgstr ""

#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid ":ref:`SetScriptTransaction <03_ride-language/05_structures:SetScriptTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid "Structure of :ref:`set script transaction <02_decentralchain/03_transaction:Set Script Transaction>`."
msgstr ""

#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid ":ref:`InvokeScriptTransaction <03_ride-language/05_structures:InvokeScriptTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/194_Usage.csv:1
msgid "Structure of :ref:`invoke script transaction <02_decentralchain/03_transaction:Invoke Script Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:857
msgid "Structure of an :ref:`transfer transaction <02_decentralchain/03_transaction:Transfer Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:867
msgid "TransferTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
msgid "Token to pay the commission."
msgstr ""

#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
msgid "Amount of tokens to transfer."
msgstr ""

#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
msgid "ID of a token."
msgstr ""

#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
msgid "Address or alias of the recipient."
msgstr ""

#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
msgid "attachment"
msgstr ""

#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
msgid "Arbitrary data attached to transfer. The maximum data size is :math:`140` bytes."
msgstr ""

#: ../../_static/03_ride-language/tables/195_TransferTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` of a transaction sender."
msgstr ""

#: ../../03_ride-language/05_structures.rst:876
msgid "Structure of an :ref:`exchange transaction <02_decentralchain/03_transaction:Exchange Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:886
msgid "ExchangeTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
msgid "buyOrder"
msgstr ""

#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
msgid "Token purchase order."
msgstr ""

#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
msgid "sellOrder"
msgstr ""

#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
msgid "Token sell order."
msgstr ""

#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
msgid "Price of exchanging token."
msgstr ""

#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
msgid "Amount of exchanging tokens."
msgstr ""

#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
msgid "buyMatcherFee"
msgstr ""

#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
msgid "Matcher's purchase fee."
msgstr ""

#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
msgid "sellMatcherFee"
msgstr ""

#: ../../_static/03_ride-language/tables/196_ExchangeTransaction-Fields.csv:1
msgid "Matcher's sell fee."
msgstr ""

#: ../../03_ride-language/05_structures.rst:893
msgid "CreateAliasTransaction"
msgstr ""

#: ../../03_ride-language/05_structures.rst:895
msgid "Structure of a :ref:`create alias transaction <02_decentralchain/03_transaction:Create Alias Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:905
msgid "CreateAliasTransaction Fields"
msgstr ""

#: ../../03_ride-language/05_structures.rst:914
msgid "Structure of a :ref:`mass transfer transaction <02_decentralchain/03_transaction:Mass Transfer Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:924
msgid "MassTransferTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
msgid "totalAmount"
msgstr ""

#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
msgid "Amount of the token to be transferred."
msgstr ""

#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
msgid "transfers"
msgstr ""

#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
msgid ":ref:`List <03_ride-language/02_data-types:List>` [:ref:`Transfer <03_ride-language/05_structures:Transfer>`]"
msgstr ""

#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
msgid "Transfers."
msgstr ""

#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
msgid "transferCount"
msgstr ""

#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
msgid "Number of transfers."
msgstr ""

#: ../../_static/03_ride-language/tables/198_MassTransferTransaction-Fields.csv:1
msgid "Optional data attached to the transaction. This field is often used to attach a comment to the transaction. The maximum data size is :math:`140` bytes."
msgstr ""

#: ../../03_ride-language/05_structures.rst:931
msgid "DataTransaction"
msgstr ""

#: ../../03_ride-language/05_structures.rst:933
msgid "Structure of a :ref:`data transaction <02_decentralchain/03_transaction:Data Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:943
msgid "DataTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
msgid "data"
msgstr ""

#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
msgid ":ref:`List <03_ride-language/02_data-types:List>` [:ref:`BinaryEntry <03_ride-language/05_structures:BinaryEntry>` | :ref:`BooleanEntry <03_ride-language/05_structures:BooleanEntry>` | :ref:`DeleteEntry <03_ride-language/05_structures:DeleteEntry>` | :ref:`IntegerEntry <03_ride-language/05_structures:IntegerEntry>` | :ref:`StringEntry <03_ride-language/05_structures:StringEntry>`]"
msgstr ""

#: ../../_static/03_ride-language/tables/199_DataTransaction-Fields.csv:1
msgid "Transaction's data array."
msgstr ""

#: ../../03_ride-language/05_structures.rst:950
msgid "SetScriptTransaction"
msgstr ""

#: ../../03_ride-language/05_structures.rst:952
msgid "Structure of a :ref:`set script transaction <02_decentralchain/03_transaction:Set Script Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:962
msgid "SetScriptTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/200_SetScriptTransaction-Fields.csv:1
msgid ":ref:`Account script <03_ride-language/04_script-types:Account Script>` or :ref:`dApp script <03_ride-language/04_script-types:dApp Script>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:969
msgid "InvokeScriptTransaction"
msgstr ""

#: ../../03_ride-language/05_structures.rst:971
msgid "Structure of an :ref:`invoke script transaction <02_decentralchain/03_transaction:Invoke Script Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:981
msgid "InvokeScriptTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
msgid "dApp"
msgstr ""

#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` or :ref:`alias <02_decentralchain/01_account:Alias>` of the account which is calling a function."
msgstr ""

#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
msgid "Payments attached to the transaction."
msgstr ""

#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
msgid ":ref:`token <02_decentralchain/02_token(asset):Token (Asset)>` to pay the commission."
msgstr ""

#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
msgid "function"
msgstr ""

#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
msgid "Name of the :ref:`callable function <03_ride-language/03_functions:Callable Functions>`."
msgstr ""

#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
msgid "args"
msgstr ""

#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
msgid ":ref:`List <03_ride-language/02_data-types:List>` [:ref:`Boolean <03_ride-language/02_data-types:Boolean>` | :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>` | :ref:`Int <03_ride-language/02_data-types:Int>` | :ref:`String <03_ride-language/02_data-types:String>` | :ref:`List <03_ride-language/02_data-types:List>` [:ref:`Boolean <03_ride-language/02_data-types:Boolean>` | :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>` | :ref:`Int <03_ride-language/02_data-types:Int>` | :ref:`String <03_ride-language/02_data-types:String>`]]"
msgstr ""

#: ../../_static/03_ride-language/tables/201_InvokeScriptTransaction-Fields.csv:1
msgid "Parameters of the callable function."
msgstr ""

#: ../../03_ride-language/05_structures.rst:988
#: ../../03_ride-language/05_structures.rst:990
msgid "Network"
msgstr ""

#: ../../_static/03_ride-language/tables/202_Network.csv:1
msgid ":ref:`LeaseTransaction <03_ride-language/05_structures:LeaseTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/202_Network.csv:1
msgid "Structure of :ref:`lease transaction <02_decentralchain/03_transaction:Lease Transaction>`."
msgstr ""

#: ../../_static/03_ride-language/tables/202_Network.csv:1
msgid ":ref:`LeaseCancelTransaction <03_ride-language/05_structures:LeaseCancelTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/202_Network.csv:1
msgid "Structure of :ref:`lease cancel transaction <02_decentralchain/03_transaction:Lease Cancel Transaction>`."
msgstr ""

#: ../../_static/03_ride-language/tables/202_Network.csv:1
msgid ":ref:`SponsorFeeTransaction <03_ride-language/05_structures:SponsorFeeTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/202_Network.csv:1
msgid "Structure of :ref:`sponsor fee transaction <02_decentralchain/03_transaction:Sponsor Fee Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:997
msgid "LeaseTransaction"
msgstr ""

#: ../../03_ride-language/05_structures.rst:999
msgid "Structure of a :ref:`lease transaction <02_decentralchain/03_transaction:Lease Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:1009
msgid "LeaseTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
msgid "Amount of the :ref:`token <02_decentralchain/02_token(asset):Token (Asset)>` to lease."
msgstr ""

#: ../../_static/03_ride-language/tables/203_LeaseTransaction-Fields.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` or :ref:`alias <02_decentralchain/01_account:Alias>` of the leasing recipient."
msgstr ""

#: ../../03_ride-language/05_structures.rst:1016
msgid "LeaseCancelTransaction"
msgstr ""

#: ../../03_ride-language/05_structures.rst:1018
msgid "Structure of a :ref:`lease cancel transaction <02_decentralchain/03_transaction:Lease Cancel Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:1028
msgid "LeaseCancelTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/204_LeaseCancelTransaction-Fields.csv:1
msgid "Leasing ID."
msgstr ""

#: ../../03_ride-language/05_structures.rst:1035
msgid "SponsorFeeTransaction"
msgstr ""

#: ../../03_ride-language/05_structures.rst:1037
msgid "Structure of a :ref:`sponsor fee transaction <02_decentralchain/03_transaction:Sponsor Fee Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:1047
msgid "SponsorFeeTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid ":ref:`Int <03_ride-language/02_data-types:Int>` |  :ref:`Unit <03_ride-language/02_data-types:Unit>`"
msgstr ""

#: ../../_static/03_ride-language/tables/205_SponsorFeeTransaction-Fields.csv:1
msgid "Amount of asset that is equivalent to 0.001 :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>` (100,000 Decentralites): an integer value specified in atomic units. unit – disable sponsorship."
msgstr ""

#: ../../03_ride-language/05_structures.rst:1054
#: ../../03_ride-language/05_structures.rst:1056
msgid "Genesis"
msgstr ""

#: ../../_static/03_ride-language/tables/206_Genesis.csv:1
msgid ":ref:`GenesisTransaction <03_ride-language/05_structures:GenesisTransaction>`"
msgstr ""

#: ../../_static/03_ride-language/tables/206_Genesis.csv:1
msgid "Structure of :ref:`genesis transaction <02_decentralchain/03_transaction:Genesis Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:1063
msgid "GenesisTransaction"
msgstr ""

#: ../../03_ride-language/05_structures.rst:1065
msgid "Structure of a :ref:`genesis transaction <02_decentralchain/03_transaction:Genesis Transaction>`."
msgstr ""

#: ../../03_ride-language/05_structures.rst:1075
msgid "GenesisTransaction Fields"
msgstr ""

#: ../../_static/03_ride-language/tables/207_GenesisTransaction-Fields.csv:1
msgid ":ref:`address <02_decentralchain/01_account:Address>` or :ref:`alias <02_decentralchain/01_account:Alias>` of the token recipient."
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:3
msgid "Iterations with FOLD<N>"
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:5
msgid "FOLD<N> macro makes it possible to implement operations on a list of values such as sum, filter, map, zip, exists, etc. The macro behaves like the fold or reduce function in other programming languages."
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:11
msgid "Iterations with FOLD"
msgstr ""

#: ../../_static/03_ride-language/tables/208_Iterations-with-FOLD.csv:1
msgid "N"
msgstr ""

#: ../../_static/03_ride-language/tables/208_Iterations-with-FOLD.csv:1
msgid "Maximum number of iterations, up to :math:`1000`."
msgstr ""

#: ../../_static/03_ride-language/tables/208_Iterations-with-FOLD.csv:1
msgid "list"
msgstr ""

#: ../../_static/03_ride-language/tables/208_Iterations-with-FOLD.csv:1
msgid "List of values."
msgstr ""

#: ../../_static/03_ride-language/tables/208_Iterations-with-FOLD.csv:1
msgid "start"
msgstr ""

#: ../../_static/03_ride-language/tables/208_Iterations-with-FOLD.csv:1
msgid "Initial value."
msgstr ""

#: ../../_static/03_ride-language/tables/208_Iterations-with-FOLD.csv:1
msgid "foldFunc"
msgstr ""

#: ../../_static/03_ride-language/tables/208_Iterations-with-FOLD.csv:1
msgid "Combining function."
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:17
msgid "The combining function accepts two input parameters: the intermediate result and the next element of the list. Macro FOLD<N>(list, start, foldFunc) means:"
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:19
msgid "Execute up to N iterations."
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:20
msgid "At each iteration: take the r-esult of the previous iteration (at the first iteration take the start value) and the next list item list, apply the foldFunc function to this pair."
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:21
msgid "Return the final result."
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:23
msgid "The value of N must be known in advance. If there are more elements in the list than specified in FOLD, the script fails. The complexity of FOLD<N> corresponds to the complexity of foldFunc multiplied by N plus extras. The FOLD<N> macro is a syntactic sugar; it is unwrapped by the compiler. Therefore, in particular, the size of the script increases linearly with N."
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:28
msgid "Sum"
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:36
msgid "The expression"
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:42
msgid "after compiling and decompiling will look like this:"
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:82
msgid "Product"
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:91
msgid "Filter"
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:93
msgid "The following code composes an array consisting only of even elements of the original array:"
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:103
msgid "Map"
msgstr ""

#: ../../03_ride-language/06_iterations-with-fold.rst:105
msgid "The following code inverts the array, reducing each element by :math:`1`:"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:3
msgid "dApp-to-App Invocation"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:5
msgid "A dApp callable function can invoke a callable function of another dApp, or another callable function of the same dApp, or even itself. The invocation is synchronous. The invoked function returns a value that the invoking function can use."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:7
msgid "dApp-to-dApp invocation is processed as follows:"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:9
msgid "A user sends an Invoke Script transaction that invokes the callable function :math:`1`."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:10
msgid "The callable function :math:`1` invokes the callable function :math:`2` via a :ref:`strict variable <03_ride-language/07_dapp-to-app-invocation:Strict Variable>` initialized by the :ref:`invoke or reentrantInvoke <03_ride-language/07_dapp-to-app-invocation:dApp-to-App Invocation>` function."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:11
msgid "The callable function :math:`2` is executed; the script actions and return value are calculated."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:12
msgid "The :ref:`return value <03_ride-language/07_dapp-to-app-invocation:Callable Function Result>` is assigned to the strict variable. The subsequent operations of callable function 1 are executed, taking into account script actions of callable function :math:`2` (as if the actions were applied to the blockchain state)."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:13
msgid "Finally, the script actions of callable functions :math:`2` and :math:`1` are applied to the blockchain state."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:16
msgid "Features"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:18
msgid "dApp-to-dApp invocations can be nested."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:19
msgid "All invoked callable functions are executed within a single Invoke Script transaction."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:20
msgid "A dApp-to-dApp invocation can contain payments that are transferred from the balance of the parent dApp to the balance of the invoked dApp."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:21
msgid "Payments attached to a callable function invocation can be used in script actions and in payments attached to nested invocations."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:24
msgid "Conditions"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:26
msgid "Both the parent and invoked dApp scripts use standard library version 5."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:27
msgid "If the dApp invokes itself, the invocation must not contain payments."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:28
msgid "The number of the :ref:`invoke or reentrantInvoke <03_ride-language/07_dapp-to-app-invocation:dApp-to-App Invocation>` function calls is up to 100 within a single Invoke Script transaction."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:29
msgid "The maximum total number of Issue, Reissue, Burn, SponsorFee, ScriptTransfer, Lease, LeaseCancel script actions executed by all callable functions in a single transaction is :math:`30`."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:30
msgid "The maximum total number of BinaryEntry, BooleanEntry, IntegerEntry, StringEntry, DeleteEntry script actions executed by all callable functions in a single transaction is :math:`100`."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:31
msgid "The total complexity is limited by :math:`26,000` for all callable functions and asset scripts of involved smart assets. The sender's account script complexity is not included in that limit."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:34
msgid "Strict Variable"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:36
msgid "strict keyword defines a variable with eager evaluation. Unlike lazy variables defined with let, a strict variable is evaluated immediately when script execution reaches it, that is, before the next expression."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:39
msgid "Invoke and reentrantInvoke Functions"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:46
msgid ":strong:`Parameters:`"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:48
msgid "Invoke and ReentrantInvoke Functions"
msgstr ""

#: ../../_static/03_ride-language/tables/209_Invoke-and-ReentrantInvoke-Functions.csv:1
msgid "dApp: Address|Alias"
msgstr ""

#: ../../_static/03_ride-language/tables/209_Invoke-and-ReentrantInvoke-Functions.csv:1
msgid "Address or alias of a dApp to invoke."
msgstr ""

#: ../../_static/03_ride-language/tables/209_Invoke-and-ReentrantInvoke-Functions.csv:1
msgid "function: String|Unit"
msgstr ""

#: ../../_static/03_ride-language/tables/209_Invoke-and-ReentrantInvoke-Functions.csv:1
msgid "Name of a callable function. unit for a default function invocation."
msgstr ""

#: ../../_static/03_ride-language/tables/209_Invoke-and-ReentrantInvoke-Functions.csv:1
msgid "arguments: List[Any]"
msgstr ""

#: ../../_static/03_ride-language/tables/209_Invoke-and-ReentrantInvoke-Functions.csv:1
msgid "payments: List[AttachedPayment]"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:58
msgid "The return value is of type Any, which means any valid type. You can extract a particular type from it using as[T] and exactAs[T] macros or the match ... case operator, see the :ref:`any <03_ride-language/02_data-types:Any>` article."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:60
msgid "The invoke and reentrantInvoke functions differ only in the reentrancy restriction. For details, see the :ref:`dApp-to-dApp invocation function <03_ride-language/03_functions:dApp-to-dApp Invocation Functions>` article."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:63
#: ../../03_ride-language/07_dapp-to-app-invocation.rst:67
msgid "Invocation Fields"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:65
msgid "For dApp-to-dApp invocation, the fields of :ref:`Invocation <03_ride-language/05_structures:Invocation>` structure used by the invoked function are filled with the following values:"
msgstr ""

#: ../../_static/03_ride-language/tables/210_Invocation-Fields.csv:1
msgid "Address of the account that sent the invoke script transaction."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:74
msgid "Callable Function Result"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:76
msgid "In standard library version 5, a callable function result is a :ref:`tuple <03_ride-language/02_data-types:Tuple>` of two elements:"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:78
msgid "List of script actions."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:79
msgid "Return value that is passed to the invoking function."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:81
msgid "Let's see an example:"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:92
msgid "In standard library version 4 or 3, there is no return value, so unit is implied."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:94
msgid "For details, see the :ref:`callable function <03_ride-language/03_functions:Callable Functions>` article."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:97
msgid "Updating Balance and Account Data Storage Entries"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:99
msgid "If the callable function invoked by the invoke or reentrantInvoke function performs script actions, the results of those actions are available to the invoking function:"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:101
msgid "If the invoked function adds an entry to the account's data storage, the invoking function can obtain the entry after the invocation."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:102
msgid "If the invoked function deletes an entry from the account's data storage, the invoking function cannot obtain the entry after the invocation."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:103
msgid "If the invoked function performs actions with tokens (transfer, issue/reissue/burn, and others) and the invoking function obtains balances after the invocation, it receives the updated balances."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:106
msgid "Transaction Fail"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:108
msgid "If the callable function's execution fails or :ref:`throws an exception <03_ride-language/03_functions:Exception Functions>`, the Invoke Script transaction could be rejected or saved on the blockchain as failed. This depends on whether the complexity of performed computations has exceeded the :ref:`threshold for saving a failed transaction <03_ride-language/07_dapp-to-app-invocation:Limitations>` (currently :math:`1000`). The complexity is summed up for all invocations."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:110
msgid "Consider the example: callable function :math:`1` performs computations of 800 complexity, then invokes callable function :math:`2` which performs computations of 300 complexity and then fails. The complexity :math:`800 + 300` has exceeded the threshold, so the transaction is saved as failed, and the sender is charged a fee."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:112
msgid "If the total complexity of executed callable functions and asset scripts exceeds the limit of :math:`26,000`, the transaction is saved as failed as well. For example, if the complexity of executed callable functions is :math:`25,000` in total, and there is a smart asset in script action whose script's complexity is :math:`1500`."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:114
msgid "In case of failure, no payments and script actions are applied to the blockchain state, even if some of the invoked functions are executed completely. The only state change the failed transaction entails is charging the fee."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:117
#: ../../03_ride-language/07_dapp-to-app-invocation.rst:119
msgid "Limitations"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Limitation"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Maximum value"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "dApp script size"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`32` Kbytes."
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Account script or asset script size"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`8` Kbytes."
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":ref:`Complexity <03_ride-language/07_dapp-to-app-invocation:Script Complexity>` of account script"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Complexity of asset script"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`4000`"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Complexity of each callable function of dApp script"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`10,000`"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Total number of :ref:`dApp-to-dApp invocations <03_ride-language/07_dapp-to-app-invocation:dApp-to-App Invocation>` within a single Invoke Script transaction"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Total complexity for all callable functions and asset scripts involved in an Invoke Script transaction. The sender's account script complexity is not included in this limit"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`26,000`"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Complexity threshold for saving failed transactions: if the callable function failed with an error or throwing an exception before the threshold exceeded, the invoke script transaction is rejected and the fee is not charged"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Complexity of verifier function of dApp script"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Sender complexity threshold: if the complexity of an account script or the verifier function of a dApp script exceeds this limit, the minimum fee for a transaction sent from the account is increased by 0.004 :ref:`DecentralCoins <02_decentralchain/02_token(asset):DecentralCoin>`"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Function name or variable name"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`255` bytes"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Size of :ref:`String <03_ride-language/02_data-types:String>` variable"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`32,767` bytes"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Size of :ref:`ByteVector <03_ride-language/02_data-types:ByteVector>` variable"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`32,767` bytes (except bodyBytes field of transaction structure)."
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Data weight"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "See :ref:`data weight <03_ride-language/07_dapp-to-app-invocation:Data Weight>`."
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Number of callable function arguments"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`22`"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Number of payments attached to an invocation"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Total number of :ref:`Issue <03_ride-language/05_structures:Issue>`, :ref:`Reissue <03_ride-language/05_structures:Reissue>`, :ref:`Burn <03_ride-language/05_structures:Burn>`, :ref:`SponsorFee <03_ride-language/05_structures:SponsorFee>`, :ref:`ScriptTransfer <03_ride-language/05_structures:ScriptTransfer>`, :ref:`Lease <03_ride-language/05_structures:Lease>`, and :ref:`LeaseCancel <03_ride-language/05_structures:LeaseCancel>` script actions executed by all callable functions in a single transaction"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Total number of :ref:`BinaryEntry <03_ride-language/05_structures:BinaryEntry>`, :ref:`BooleanEntry <03_ride-language/05_structures:BooleanEntry>`, :ref:`DeleteEntry <03_ride-language/05_structures:DeleteEntry>`, :ref:`IntegerEntry <03_ride-language/05_structures:IntegerEntry>`, :ref:`StringEntry <03_ride-language/05_structures:StringEntry>` script actions executed by all callable functions in a single transaction"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Total size of data written to the :ref:`account data storage <02_decentralchain/01_account:Account Data Storage>` by all BinaryEntry, BooleanEntry, IntegerEntry, StringEntry script actions executed by a callable function"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`5` Kbytes."
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid "Total size of data written to the account data storage by all BinaryEntry, BooleanEntry, IntegerEntry, StringEntry script actions executed by all callable functions in a single transaction"
msgstr ""

#: ../../_static/03_ride-language/tables/211_Limitations.csv:1
msgid ":math:`15` Kbytes."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:126
msgid "Script Complexity"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:128
msgid "Script complexity is a dimensionless quantity that estimates computational resources needed to execute a script. The complexity of a script is estimated based on complexities of all the operators and functions it consists of. The complexity of the built-in functions is listed in the built-in functions article."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:130
msgid "Limitations on script complexity are given in the :ref:`limitations <03_ride-language/07_dapp-to-app-invocation:Limitations>` article."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:133
msgid "Data Weight"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:135
msgid "The weight of each value approximately corresponds to its size in bytes. Weight is used in :ref:`limitations <03_ride-language/07_dapp-to-app-invocation:Limitations>` on creating and comparing values."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:138
#: ../../03_ride-language/07_dapp-to-app-invocation.rst:140
msgid "Weight Calculation"
msgstr ""

#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid "Weight of value"
msgstr ""

#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid ":ref:`BigInt <03_ride-language/02_data-types:BigInt>`"
msgstr ""

#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid ":math:`64`"
msgstr ""

#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid "Size in bytes."
msgstr ""

#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid "See weight of list below."
msgstr ""

#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid "See weight of tuple or structure."
msgstr ""

#: ../../_static/03_ride-language/tables/212_Weight Calculation.csv:1
msgid ":ref:`Unit <03_ride-language/02_data-types:Unit>`"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:147
msgid "Weight of List"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:149
msgid "The weight of the list is calculated as follows:"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:151
msgid ":math:`W_{list} = 20 + 20 × Q + W_{elems}`"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:153
#: ../../03_ride-language/07_dapp-to-app-invocation.rst:165
msgid "where:"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:155
msgid ":math:`Q` is a number of elements."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:156
msgid ":math:`W_{elems}` is a total weight of elements."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:159
msgid "Weight of Tuple or Structure"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:161
msgid "The weight of the tuple or structure is calculated as follows:"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:163
msgid ":math:`W_{struct} = 40 + 30 × Q + W_{fields}`"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:167
msgid ":math:`Q` is a number of fields."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:168
msgid ":math:`W_{fields}` is a total weight of fields."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:171
msgid "Weight Limitations"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:173
msgid "The maximum weight of the value is :math:`307200`."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:174
msgid "A comparison of values is not allowed if the weight of each value exceeds :math:`13000`."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:176
msgid "If the limitations are exceeded, the script fails."
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:178
msgid "Let's consider an example, using the AssetPair structure:"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:184
msgid "An asset ID is a ByteVector of :math:`32` bytes, its weight is :math:`32`. If both assets in the pair are not DecentralCoins, then the weight of the AssetPair structure is:"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:186
msgid ":math:`W_{AssetPair} = 40 + 30 × 2 + (32 + 32) = 164`"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:188
msgid "If one of the assets is DecentralCoin, then the corresponding field is of type Unit and its weight is :math:`40`. Then the weight of the AssetPair structure is:"
msgstr ""

#: ../../03_ride-language/07_dapp-to-app-invocation.rst:190
msgid ":math:`W_{AssetPair} = 40 + 30 × 2 + (32 + 40) = 172`"
msgstr ""

#: ../../03_ride-language/index.md:1 ../../03_ride-language/index.md:22
msgid "Ride Language"
msgstr ""

#: ../../03_ride-language/index.md:3
msgid "Ride is a straightforward, developer-friendly functional programming language for smart contracts and decentralized applications (dApps) on the DecentralChain blockchain. Ride is a strong statically-typed, lazy, functional, expression-based compiled programming language."
msgstr ""

#: ../../03_ride-language/index.md:18
msgid "Statically-Typed"
msgstr ""

#: ../../03_ride-language/index.md:22
msgid "Variable types are explicitly declared and thus are determined at compile time."
msgstr ""

#: ../../03_ride-language/index.md:34
msgid "Lazy evaluation"
msgstr ""

#: ../../03_ride-language/index.md:38
msgid "Evaluation of expressions is delayed until their values are actually needed."
msgstr ""

#: ../../03_ride-language/index.md:50
msgid "Functional Programs"
msgstr ""

#: ../../03_ride-language/index.md:54
msgid "Programming paradigm where programs are constructed by applying and composing functions"
msgstr ""

#: ../../03_ride-language/index.md:66
msgid "Expression-Based"
msgstr ""

#: ../../03_ride-language/index.md:70
msgid "Every (or nearly every) construction is an expression and thus yields a value."
msgstr ""

#: ../../03_ride-language/index.md:82
msgid "Compiled Language"
msgstr ""

#: ../../03_ride-language/index.md:86
msgid "Converted directly into machine code that the processor can execute."
msgstr ""

#: ../../03_ride-language/index.md:98
msgid "Non-Turing Complete"
msgstr ""

#: ../../03_ride-language/index.md:102
msgid "Limitations by design help ensure execution is secure and straightforward."
msgstr ""

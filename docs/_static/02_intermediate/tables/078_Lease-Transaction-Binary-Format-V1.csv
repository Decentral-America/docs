#, Field, Field type, Field size in bytes, Comment
":math:`1`", ":ref:`Transaction type ID <02_intermediate:Transaction Types>`", ":ref:`Byte <02_intermediate:Blockchain Data Types>`", ":math:`1`", "Value must be :math:`8`."
":math:`2`", "Public key of the transaction sender", "Array[:ref:`Byte <02_intermediate:Blockchain Data Types>`]", ":math:`32`", " "
":math:`3`", ":ref:`Address <02_intermediate:Address>` or :ref:`alias <02_intermediate:Alias>` of the recipient", "See :ref:`address binary format <02_intermediate:Address Binary Format>`, :ref:`alias binary format <02_intermediate:Alias Binary Format>`", "S", "If the first byte of the field is :math:`1`, then it is followed by address. S in this case equals :math:`26`. If the first byte of the field is :math:`2`, then it is followed by alias. In this case :math:`8 <= S <= 34`."
":math:`4`", "Amount of :ref:`DecentralCoins <02_intermediate:DecentralCoin>` that will be leased to the account", ":ref:`Long <02_intermediate:Blockchain Data Types>`", ":math:`8`", " "
":math:`5`", ":ref:`Transaction fee <02_intermediate:Transaction Fees>`", ":ref:`Long <02_intermediate:Blockchain Data Types>`", ":math:`8`", " "
":math:`6`", "Transaction timestamp", ":ref:`Long <02_intermediate:Blockchain Data Types>`", ":math:`8`", " "
":math:`7`", "Transaction signature", "Array[:ref:`Byte <02_intermediate:Blockchain Data Types>`]", ":math:`64`", " "
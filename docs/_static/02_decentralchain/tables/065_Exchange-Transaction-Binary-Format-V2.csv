#, Field, JSON field name, Field type, Field size in bytes, Comment
":math:`1`", "Version flag", "", ":ref:`Byte <02_decentralchain:Blockchain Data Types>`", ":math:`1`", "Indicates the transaction version is :math:`2` or higher. Value must be :math:`0`."
":math:`2`", ":ref:`Transaction type ID <02_decentralchain:Transaction Types>`", "type", ":ref:`Byte <02_decentralchain:Blockchain Data Types>`", ":math:`1`", "Value must be :math:`7`."
":math:`3`", "Transaction version", "version", ":ref:`Byte <02_decentralchain:Blockchain Data Types>`", ":math:`1`", "Value must be :math:`2`."
":math:`4.1`", "Buy order size", "", ":ref:`Int <02_decentralchain:Blockchain Data Types>`", ":math:`4`", "Size including flag 4.2."
":math:`4.2`", "Buy order version flag", "order1.version", ":ref:`Byte <02_decentralchain:Blockchain Data Types>`", "S", ":math:`S = 1` if the order version is :math:`1`. :math:`S = 0` if the order version is 2 or 3."
":math:`4.3`", "Buy order", "order1", "Array[:ref:`Byte <02_decentralchain:Blockchain Data Types>`]", "See :ref:`order binary format <02_decentralchain:Order Binary Format>`", " "
":math:`5.1`", "Sell order size", "", ":ref:`Int <02_decentralchain:Blockchain Data Types>`", ":math:`4`", "Size including flag 5.2."
":math:`5.2`", "Sell order version flag", "order2.version", ":ref:`Byte <02_decentralchain:Blockchain Data Types>`", "S", ":math:`S = 1` if the order version is :math:`1`. :math:`S = 0` if the order version is 2 or 3."
":math:`5.3`", "Sell order", "order2", "Array[:ref:`Byte <02_decentralchain:Blockchain Data Types>`]", "See order binary format", " "
":math:`6`", "Deal price", "price", ":ref:`Long <02_decentralchain:Blockchain Data Types>`", ":math:`8`", "Price for the amount asset (base currency) nominated in the price asset (quote currency)."
":math:`7`", "Amount", "amount", ":ref:`Long <02_decentralchain:Blockchain Data Types>`", ":math:`8`", "Amount of the amount asset (base currency) that the buyer received from the seller."
":math:`8`", "Buy matcher fee", "buyMatcherFee", ":ref:`Long <02_decentralchain:Blockchain Data Types>`", ":math:`8`", " "
":math:`9`", "Sell matcher fee", "sellMatcherFee", ":ref:`Long <02_decentralchain:Blockchain Data Types>`", ":math:`8`", " "
":math:`10`", ":ref:`Transaction fee <02_decentralchain:Transaction Fees>`", "fee", ":ref:`Long <02_decentralchain:Blockchain Data Types>`", ":math:`8`", " "
":math:`11`", "Transaction timestamp", "timestamp", ":ref:`Long <02_decentralchain:Blockchain Data Types>`", ":math:`8`", " "
":math:`12`", "Transaction proofs", "proofs", "See :ref:`transaction proofs binary format <02_decentralchain:Transaction Proofs Binary Format>`", "S", "If the array is empty, then :math:`S = 3`. If the array is not empty, then :math:`S = 3 + 2 × N + 64 × N`, where :math:`N` is the number of proofs in the array. The maximum number of proofs in the array is :math:`8`. The size of each proof is :math:`64` bytes."
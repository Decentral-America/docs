#, Field name, Type, Length in Bytes
":math:`1`", "Version", ":ref:`Byte <02_decentralchain:Blockchain Data Types>` (constant, value = :math:`2`)", ":math:`1`"
":math:`2`", "Sender's public key", "PublicKey (Array[:ref:`Byte <02_decentralchain:Blockchain Data Types>`])", ":math:`32`"
":math:`3`", "Matcher's public key", "PublicKey (Array[:ref:`Byte <02_decentralchain:Blockchain Data Types>`])", ":math:`32`"
":math:`4.1`", "Amount asset flag (:math:`1` - asset, :math:`0` - DecentralCoins)", ":ref:`Byte <02_decentralchain:Blockchain Data Types>`", ":math:`1`"
":math:`4.2`", "Amount asset", "AssetId (ByteStr = Array[:ref:`Byte <02_decentralchain:Blockchain Data Types>`])", ":math:`32` or :math:`0` (depends on the byte in 4.1)."
":math:`5.1`", "Price asset flag (:math:`1` - asset, :math:`1` - DecentralCoins)", ":ref:`Byte <02_decentralchain:Blockchain Data Types>`", ":math:`1`"
":math:`5.2`", "Price asset", "AssetId (ByteStr = Array[:ref:`Byte <02_decentralchain:Blockchain Data Types>`])", ":math:`32` or :math:`0` (depends on the byte in 5.1)."
":math:`6`", "Order type (:math:`0` - Buy, :math:`1` - Sell)", ":ref:`Byte <02_decentralchain:Blockchain Data Types>`", ":math:`1`"
":math:`7`", "Price", ":ref:`Long <02_decentralchain:Blockchain Data Types>`", ":math:`8`"
":math:`8`", "Amount", ":ref:`Long <02_decentralchain:Blockchain Data Types>`", ":math:`8`"
":math:`9`", "Timestamp", ":ref:`Long <02_decentralchain:Blockchain Data Types>`", ":math:`8`"
":math:`10`", "Expiration", ":ref:`Long <02_decentralchain:Blockchain Data Types>`", ":math:`8`"
":math:`11`", "Matcher's fee", ":ref:`Long <02_decentralchain:Blockchain Data Types>`", ":math:`8`"
":math:`12`", "Proofs", "Proofs", " "
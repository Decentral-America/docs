#, Field, JSON field name, Field type, Field size in bytes, Comment
":math:`1`", "Version flag", " ", ":ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`0`", "Indicates the transaction version is :math:`2` or higher. Value must be :math:`0`."
":math:`2`", ":ref:`Transaction type ID <02_decentralchain/03_transaction:Transaction Types>`", "type", ":ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`0`", "Value must be :math:`3`."
":math:`3`", "Transaction version", "version", ":ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`0`", "Value must be :math:`2`."
":math:`4`", ":ref:`Chain ID <02_decentralchain/08_mainnet-testnet-stagenet:Chain ID>`", "chainId", ":ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`0`", ":math:`87` — for Mainnet. :math:`84` — for Testnet. :math:`83` — for Stagenet."
":math:`5`", "Public key of the transaction sender", "senderPublicKey", "Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`]", "32", " "
":math:`6.1`", ":ref:`Token <02_decentralchain/02_token(asset):Token (Asset)>` name length", " ", ":ref:`Short <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`2`", " "
":math:`6.2`", "Token name", "name", "Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`]", "From :math:`4` to :math:`16`", " "
":math:`7.1`", "Token description length", " ", ":ref:`Short <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`2`", " "
":math:`7.2`", "Token description", "description", "Array[:ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`]", "From :math:`0` to :math:`1000`", " "
":math:`8`", "Amount of the token that will be issued", "quantity", ":ref:`Short <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`8`", " "
":math:`9`", "Number of decimal places of the token", "decimals", ":ref:`Byte <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`0`", " "
":math:`10`", "Reissue flag", "reissuable", ":ref:`Boolean <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`0`", "If the value is :math:`0`, then token reissue is not possible. If the value is :math:`1`, then token reissue is possible."
":math:`11`", ":ref:`Transaction fee <02_decentralchain/03_transaction:Transaction Fees>`", "fee", ":ref:`Short <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`8`", " "
":math:`12`", "Transaction timestamp", "timestamp", ":ref:`Short <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`8`", " "
":math:`13.1`", "Script existence flag", " ", ":ref:`Boolean <02_decentralchain/09_protocol:Blockchain Data Types>`", ":math:`0`", "If the value is :math:`0`, then the token does not have a script. If the value is :math:`1`, then the token has a script."
":math:`13.2`", "Script length in bytes", " ", ":ref:`Short <02_decentralchain/09_protocol:Blockchain Data Types>`", "S", ":math:`S = 0` if the value of the script existence flag field is :math:`0`. :math:`S = 2` if the value of the script existence flag field is 1."
":math:`13.3`", ":ref:`Asset script <03_ride-language/04_script-types:Asset Script>`", "script", ":ref:`String <02_decentralchain/09_protocol:Blockchain Data Types>`", "S", ":math:`S = 0` if the value of the script existence flag field is :math:`0`. :math:`0 < S ≤ 8192`, if the value of the script existence flag field is 1."
":math:`14`", "Transaction proofs", "proofs", "See :ref:`transaction proofs binary format <02_decentralchain/10_binary-format:Transaction Proofs Binary Format>`", "S", "If the array is empty, then :math:`S = 3`. If the array is not empty, then :math:`S = 3 + 2 × N + 64 × N`, where :math:`N` is the number of proofs in the array. The maximum number of proofs in the array is :math:`82`. The size of each proof is :math:`64` bytes."
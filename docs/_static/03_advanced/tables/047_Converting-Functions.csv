Name, Description, Complexity
":ref:`addressFromPublicKey(ByteVector): Address <03_advanced:addressFromPublicKey(ByteVector): Address>`", "Gets the corresponding :ref:`address <02_intermediate:Address>` of the account public key `", ":math:`63`"
":ref:`parseBigInt(String): BigInt|Unit <03_advanced:parseBigInt(String): BigInt|Unit>`", "Converts the string representation of a number to its :ref:`big integer <03_advanced:BigInt>` equivalent", ":math:`65`"
":ref:`parseBigIntValue(String): BigInt <03_advanced:parseBigIntValue(String): BigInt>`", "Converts the string representation of a number to its big integer equivalent. Fails if the string cannot be parsed", ":math:`65`"
":ref:`parseInt(String): Int|Unit <03_advanced:parseInt(String): Int|Unit>`", "Converts the string representation of a number to its integer equivalent", ":math:`2`"
":ref:`parseIntValue(String): Int <03_advanced:parseIntValue(String): Int>`", "Converts the string representation of a number to its integer equivalent. Fails if the string cannot be parsed", ":math:`2`"
":ref:`toBigInt(ByteVector): BigInt <03_advanced:toBigInt(ByteVector): BigInt>`", "Converts an array of bytes to a big integer", ":math:`65`"
":ref:`toBigInt(ByteVector, Int, Int): BigInt <03_advanced:toBigInt(ByteVector, Int, Int): BigInt>`", "Converts an array of bytes starting from a certain index to a big integer", ":math:`65`"
":ref:`toBigInt(Int): BigInt <03_advanced:toBigInt(Int): BigInt>`", "Converts an integer to a big integer", ":math:`1`"
":ref:`toBytes(Boolean): ByteVector <03_advanced:toBytes(Boolean): ByteVector>`", "Converts a boolean to an array of bytes", ":math:`1`"
":ref:`toBytes(Int): ByteVector <03_advanced:toBytes(Int): ByteVector>`", "Converts an integer to an array of bytes", ":math:`1`"
":ref:`toBytes(String): ByteVector <03_advanced:toBytes(String): ByteVector>`", "Converts a string to an array of bytes", ":math:`8`"
":ref:`toBytes(BigInt): ByteVector <03_advanced:toBytes(BigInt): ByteVector>`", "Converts a big integer to an array of bytes", ":math:`65`"
":ref:`toInt(BigInt): Int <03_advanced:toInt(BigInt): Int>`", "Converts a big integer to an integer. Fails if the number cannot be converted", ":math:`1`"
":ref:`toInt(ByteVector): Int <03_advanced:toInt(ByteVector): Int>`", "Converts an array of bytes to an integer", ":math:`1`"
":ref:`toInt(ByteVector, Int): Int <03_advanced:toInt(ByteVector, Int): Int>`", "Converts an array of bytes to an integer starting from a certain index", ":math:`1`"
":ref:`toString(Address): String <03_advanced:toString(Address): String>`", "Converts an address to a string", ":math:`10`"
":ref:`toString(Boolean): String <03_advanced:toString(Boolean): String>`", "Converts a boolean to a string", ":math:`1`"
":ref:`toString(Int): String <03_advanced:toString(Int): String>`", "Converts an integer to a string", ":math:`1`"
":ref:`toString(BigInt): String <03_advanced:toString(BigInt): String>`", "Converts a big integer to a string", ":math:`65`"
":ref:`toUtf8String(ByteVector): String <03_advanced:toUtf8String(ByteVector): String>`", "Converts an array of bytes to a UTF-8 string", ":math:`7`"
":ref:`transferTransactionFromProto(ByteVector): TransferTransaction|Unit <03_advanced:transferTransactionFromProto(ByteVector): TransferTransaction|Unit>`", "Deserializes transfer transaction", ":math:`5`"
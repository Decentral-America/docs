Name, Description, Complexity
":ref:`contains(String, String): Boolean <03_advanced:contains(String, String): Boolean>`", "Checks whether the string contains substring", ":math:`3`"
":ref:`drop(String, Int): String <03_advanced:drop(String, Int): String>`", "Drops the first n characters of a string", ":math:`20`"
":ref:`dropRight(String, Int): String <03_advanced:dropRight(String, Int): String>`", "Drops the last n characters of a string", ":math:`20`"
":ref:`indexOf(String, String): Int|Unit <03_advanced:indexOf(String, String): Int|Unit>`", "Returns the index of the first occurrence of a substring", ":math:`3`"
":ref:`indexOf(String, String, Int): Int|Unit <03_advanced:indexOf(String, String, Int): Int|Unit>`", "Returns the index of the first occurrence of a substring after a certain index", ":math:`3`"
":ref:`lastIndexOf(String, String): Int|Unit <03_advanced:lastIndexOf(String, String): Int|Unit>`", "Returns the index of the last occurrence of a substring", ":math:`3`"
":ref:`lastindexOf(String, String, Int): Int|Unit <03_advanced:lastindexOf(String, String, Int): Int|Unit>`", "Returns the index of the last occurrence of a substring before a certain index", ":math:`3`"
":ref:`makeString(List[String], String): String <03_advanced:makeString(List[String], String): String>`", "Concatenates list strings adding a separator", ":math:`30`"
":ref:`size(String): Int <03_advanced:size(String): Int>`", "Returns the size of a string", ":math:`1`"
":ref:`split(String, String): List[String] <03_advanced:split(String, String): List[String]>`", "Splits a string delimited by a separator into a list of substrings.", ":math:`75`"
":ref:`take(String, Int): String <03_advanced:take(String, Int): String>`", "Takes the first n characters from a string", ":math:`20`"
":ref:`takeRight(String, Int): String <03_advanced:takeRight(String, Int): String>`", "Takes the last n characters from a string", ":math:`20`"